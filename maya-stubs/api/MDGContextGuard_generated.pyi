# fmt: off
from typing import *
from typing_extensions import Self
from _typeshed import Incomplete


class MDGContextGuard(object):
    def _MDGContextGuard__save_state(self: Self, new_current_context: Any) -> Any: ...
    def __delattr__(self: Self, name: Any) -> Any: ...
    __dict__: mappingproxy = ...
    def __dir__(self: Self) -> Any: ...
    __doc__: str = ...
    def __enter__(self: Self) -> Any: ...
    def __eq__(self: Self, value: Any) -> Any: ...
    def __exit__(self: Self, object_type: Any, value: Any, traceback: Any) -> Any: ...
    def __format__(self: Self, format_spec: Any) -> Any: ...
    def __ge__(self: Self, value: Any) -> Any: ...
    def __getattribute__(self: Self, name: Any) -> Any: ...
    def __gt__(self: Self, value: Any) -> Any: ...
    def __hash__(self: Self) -> Any: ...
    def __init__(self: Self, context: Any) -> Any: ...
    def __init_subclass__(self: Self, *args: Any, **kwargs: Any) -> Any: ...
    def __le__(self: Self, value: Any) -> Any: ...
    def __lt__(self: Self, value: Any) -> Any: ...
    __module__: str = ...
    def __ne__(self: Self, value: Any) -> Any: ...
    def __new__(self: Self, args: Any, kwargs: Any) -> Any: ...
    def __reduce__(self: Self) -> Any: ...
    def __reduce_ex__(self: Self, protocol: Any) -> Any: ...
    def __repr__(self: Self) -> Any: ...
    def __setattr__(self: Self, name: Any, value: Any) -> Any: ...
    def __sizeof__(self: Self) -> Any: ...
    def __str__(self: Self) -> Any: ...
    def __subclasshook__(self: Self, *args: Any, **kwargs: Any) -> Any: ...
    @property
    def __weakref__(*args: Any, **kwargs: Any) -> Any: ...
    @__weakref__.setter
    def __weakref__(*args: Any, **kwargs: Any) -> Any: ...
    def context(self: Self) -> Any: ...
    def original_context(self: Self) -> Any: ...
    def restore(self: Self) -> Any: ...

__all__: list
__builtins__: dict
__cached__: str
__doc__: str
__file__: str
__loader__: SourceFileLoader
__name__: str
__package__: str
__spec__: ModuleSpec
class object:
    def __delattr__(self: Self, name: Any) -> Any: ...
    def __dir__(self: Self) -> Any: ...
    __doc__: str = ...
    def __eq__(self: Self, value: Any) -> Any: ...
    def __format__(self: Self, format_spec: Any) -> Any: ...
    def __ge__(self: Self, value: Any) -> Any: ...
    def __getattribute__(self: Self, name: Any) -> Any: ...
    def __gt__(self: Self, value: Any) -> Any: ...
    def __hash__(self: Self) -> Any: ...
    def __init__(self: Self, args: Any, kwargs: Any) -> Any: ...
    def __init_subclass__(self: Self, *args: Any, **kwargs: Any) -> Any: ...
    def __le__(self: Self, value: Any) -> Any: ...
    def __lt__(self: Self, value: Any) -> Any: ...
    def __ne__(self: Self, value: Any) -> Any: ...
    def __new__(self: Self, args: Any, kwargs: Any) -> Any: ...
    def __reduce__(self: Self) -> Any: ...
    def __reduce_ex__(self: Self, protocol: Any) -> Any: ...
    def __repr__(self: Self) -> Any: ...
    def __setattr__(self: Self, name: Any, value: Any) -> Any: ...
    def __sizeof__(self: Self) -> Any: ...
    def __str__(self: Self) -> Any: ...
    def __subclasshook__(self: Self, *args: Any, **kwargs: Any) -> Any: ...
