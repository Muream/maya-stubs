from __future__ import annotations

from typing import *


class MColorMixingSpaceHelper(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def applyMixingTransform(self, *args: Any, **kwargs: Any) -> Any: ...
    def getMixingSpaceNames(self, *args: Any, **kwargs: Any) -> Any: ...
    def getViewNames(self, *args: Any, **kwargs: Any) -> Any: ...
    kForward: int = 0
    kInverse: int = 1
    def mixingSpace(self, *args: Any, **kwargs: Any) -> Any: ...
    def mixingSpaceHasViews(self, *args: Any, **kwargs: Any) -> Any: ...
    def mixingToSlider(self, *args: Any, **kwargs: Any) -> Any: ...
    def refresh(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMixingSpace(self, *args: Any, **kwargs: Any) -> Any: ...
    def setView(self, *args: Any, **kwargs: Any) -> Any: ...
    def sliderToMixing(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF40E0>
    def view(self, *args: Any, **kwargs: Any) -> Any: ...

class MColorPickerCallback(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def getColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def getKey(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF4540>

def MColorPickerCallback_className(*args: Any, **kwargs: Any) -> Any: ...
class MColorPickerUtilities(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def applyViewTransform(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def doRegisterToColorPicking(self, *args: Any, **kwargs: Any) -> Any: ...
    def grabColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def isRegisteredToColorPicking(self, *args: Any, **kwargs: Any) -> Any: ...
    kForward: int = 0
    kInverse: int = 1
    thisown: property = <property object at 0x000001840ABF4720>
    def unregisterFromColorPicking(self, *args: Any, **kwargs: Any) -> Any: ...

def MColorPickerUtilities_applyViewTransform(*args: Any, **kwargs: Any) -> Any: ...
def MColorPickerUtilities_className(*args: Any, **kwargs: Any) -> Any: ...
def MColorPickerUtilities_doRegisterToColorPicking(*args: Any, **kwargs: Any) -> Any: ...
def MColorPickerUtilities_grabColor(*args: Any, **kwargs: Any) -> Any: ...
def MColorPickerUtilities_isRegisteredToColorPicking(*args: Any, **kwargs: Any) -> Any: ...
def MColorPickerUtilities_unregisterFromColorPicking(*args: Any, **kwargs: Any) -> Any: ...
class MCommonRenderSettingsData(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    customExt: property = <property object at 0x000001840ABF30E0>
    customImageFormat: property = <property object at 0x000001840ABF4E50>
    deviceAspectRatio: property = <property object at 0x000001840ABF32C0>
    dotPerInch: property = <property object at 0x000001840ABF3360>
    enableDefaultLight: property = <property object at 0x000001840ABF33B0>
    frameBy: property = <property object at 0x000001840ABF4F40>
    frameEnd: property = <property object at 0x000001840ABF4EF0>
    framePadding: property = <property object at 0x000001840ABF4D60>
    frameStart: property = <property object at 0x000001840ABF4EA0>
    def getBufferName(self, *args: Any, **kwargs: Any) -> Any: ...
    def getImageName(self, *args: Any, **kwargs: Any) -> Any: ...
    def getPostRenderFrameCmd(self, *args: Any, **kwargs: Any) -> Any: ...
    def getPreRenderFrameCmd(self, *args: Any, **kwargs: Any) -> Any: ...
    height: property = <property object at 0x000001840ABF3270>
    imageFormat: property = <property object at 0x000001840ABF4E00>
    def isAnimated(self, *args: Any, **kwargs: Any) -> Any: ...
    def isMovieFormat(self, *args: Any, **kwargs: Any) -> Any: ...
    kFullPathImage: int = 1
    kFullPathTmp: int = 2
    kRelativePath: int = 0
    name: property = <property object at 0x000001840ABF4CC0>
    namePattern: property = <property object at 0x000001840ABF4DB0>
    namingScheme: property = <property object at 0x000001840ABF4D10>
    pixelAspectRatio: property = <property object at 0x000001840ABF3310>
    postMel: property = <property object at 0x000001840ABF3450>
    postRenderLayerMel: property = <property object at 0x000001840ABF34F0>
    postRenderMel: property = <property object at 0x000001840ABF3590>
    preMel: property = <property object at 0x000001840ABF3400>
    preRenderLayerMel: property = <property object at 0x000001840ABF34A0>
    preRenderMel: property = <property object at 0x000001840ABF3540>
    renderAll: property = <property object at 0x000001840ABF3040>
    renumberBy: property = <property object at 0x000001840ABF31D0>
    renumberFrames: property = <property object at 0x000001840ABF3130>
    renumberStart: property = <property object at 0x000001840ABF3180>
    def setFieldName(self, *args: Any, **kwargs: Any) -> Any: ...
    def setPassName(self, *args: Any, **kwargs: Any) -> Any: ...
    def shouldRenderFrameAtTime(self, *args: Any, **kwargs: Any) -> Any: ...
    skipExistingFrames: property = <property object at 0x000001840ABF4F90>
    thisown: property = <property object at 0x000001840ABF49F0>
    useCustomExt: property = <property object at 0x000001840ABF3090>
    width: property = <property object at 0x000001840ABF3220>

def MCommonRenderSettingsData_className(*args: Any, **kwargs: Any) -> Any: ...
def MCommonRenderSettingsData_getPostRenderFrameCmd(*args: Any, **kwargs: Any) -> Any: ...
def MCommonRenderSettingsData_getPreRenderFrameCmd(*args: Any, **kwargs: Any) -> Any: ...
class MD3D9Renderer(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def getD3D9Device(self, *args: Any, **kwargs: Any) -> Any: ...
    def makeSwatchContextCurrent(self, *args: Any, **kwargs: Any) -> Any: ...
    def readSwatchContextPixels(self, *args: Any, **kwargs: Any) -> Any: ...
    def setBackgroundColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def theRenderer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF36D0>

def MD3D9Renderer_theRenderer(*args: Any, **kwargs: Any) -> Any: ...
class MDrawProcedureBase(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def enabled(self, *args: Any, **kwargs: Any) -> Any: ...
    def execute(self, *args: Any, **kwargs: Any) -> Any: ...
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    def setEnabled(self, *args: Any, **kwargs: Any) -> Any: ...
    def setName(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF3950>

class MFnImageSource(MFnDependencyNode):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def getImageName(self, *args: Any, **kwargs: Any) -> Any: ...
    def sourceCamera(self, *args: Any, **kwargs: Any) -> Any: ...
    def sourceLayer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF14F0>

def MFnImageSource_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnRenderLayer(MFnDependencyNode):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def adjustmentPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def currentLayer(self, *args: Any, **kwargs: Any) -> Any: ...
    def defaultRenderLayer(self, *args: Any, **kwargs: Any) -> Any: ...
    def externalRenderPasses(self, *args: Any, **kwargs: Any) -> Any: ...
    def findLayerByName(self, *args: Any, **kwargs: Any) -> Any: ...
    def inCurrentRenderLayer(self, *args: Any, **kwargs: Any) -> Any: ...
    def inLayer(self, *args: Any, **kwargs: Any) -> Any: ...
    def isPlugAdjusted(self, *args: Any, **kwargs: Any) -> Any: ...
    def layerChildren(self, *args: Any, **kwargs: Any) -> Any: ...
    def listAllRenderLayers(self, *args: Any, **kwargs: Any) -> Any: ...
    def listMembers(self, *args: Any, **kwargs: Any) -> Any: ...
    def passHasLight(self, *args: Any, **kwargs: Any) -> Any: ...
    def passHasObject(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF3BD0>

def MFnRenderLayer_className(*args: Any, **kwargs: Any) -> Any: ...
def MFnRenderLayer_currentLayer(*args: Any, **kwargs: Any) -> Any: ...
def MFnRenderLayer_defaultRenderLayer(*args: Any, **kwargs: Any) -> Any: ...
def MFnRenderLayer_findLayerByName(*args: Any, **kwargs: Any) -> Any: ...
def MFnRenderLayer_listAllRenderLayers(*args: Any, **kwargs: Any) -> Any: ...
class MFnRenderPass(MFnDependencyNode):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def customTokenString(self, *args: Any, **kwargs: Any) -> Any: ...
    def frameBufferChannels(self, *args: Any, **kwargs: Any) -> Any: ...
    def frameBufferType(self, *args: Any, **kwargs: Any) -> Any: ...
    def getImplementation(self, *args: Any, **kwargs: Any) -> Any: ...
    def passID(self, *args: Any, **kwargs: Any) -> Any: ...
    def setImplementation(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF1180>
    def usesFiltering(self, *args: Any, **kwargs: Any) -> Any: ...

def MFnRenderPass_className(*args: Any, **kwargs: Any) -> Any: ...
class MGLFunctionTable(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def extensionExists(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAccum(self, *args: Any, **kwargs: Any) -> Any: ...
    def glActiveTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def glActiveVaryingNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAlphaFragmentOp1ATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAlphaFragmentOp2ATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAlphaFragmentOp3ATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAlphaFunc(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAreProgramsResidentNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAreTexturesResident(self, *args: Any, **kwargs: Any) -> Any: ...
    def glArrayElement(self, *args: Any, **kwargs: Any) -> Any: ...
    def glAttachObjectARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBegin(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBeginFragmentShaderATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBeginOcclusionQueryNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBeginQueryARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBeginTransformFeedbackEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBeginTransformFeedbackNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBeginVertexShaderEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindAttribLocationARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindBufferARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindBufferBaseEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindBufferBaseNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindBufferOffsetEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindBufferOffsetNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindBufferRangeEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindBufferRangeNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindFragmentShaderATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindFramebufferEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindLightParameterEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindMaterialParameterEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindParameterEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindProgram(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindProgramNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindRenderbufferEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindTexGenParameterEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindTextureUnitParameterEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBindVertexShaderEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBitmap(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBlendEquationEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBlendFunc(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBlitFramebufferEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBufferDataARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBufferSubDataARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCallList(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCallLists(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCheckFramebufferStatusEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClear(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClearAccum(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClearColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClearDepth(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClearIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClearStencil(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClientActiveTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def glClipPlane(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3b(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3bv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3ub(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3ubv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3ui(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3uiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3us(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor3usv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4b(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4bv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4ub(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4ubv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4ui(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4uiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4us(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColor4usv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColorFragmentOp1ATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColorFragmentOp2ATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColorFragmentOp3ATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColorMask(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColorMaterial(self, *args: Any, **kwargs: Any) -> Any: ...
    def glColorPointer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCombinerInputNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCombinerOutputNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCombinerParameterfNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCombinerParameterfvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCombinerParameteriNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCombinerParameterivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCompileShaderARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCompressedTexImage1D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCompressedTexImage2D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCompressedTexImage3D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCompressedTexSubImage1D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCompressedTexSubImage2D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCompressedTexSubImage3D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCopyPixels(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCopyTexImage1D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCopyTexImage2D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCopyTexSubImage1D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCopyTexSubImage2D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCopyTexSubImage3D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCreateProgramObjectARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCreateShaderObjectARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCullFace(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCullParameterdvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glCullParameterfvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteBuffersARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteFencesNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteFragmentShaderATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteFramebuffersEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteLists(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteObjectARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteOcclusionQueriesNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeletePrograms(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteProgramsNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteQueriesARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteRenderbuffersEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteTextures(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDeleteVertexShaderEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDepthFunc(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDepthMask(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDepthRange(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDetachObjectARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDisable(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDisableClientState(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDisableVariantClientStateEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDisableVertexAttribArray(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDrawArrays(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDrawBuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDrawElements(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDrawPixels(self, *args: Any, **kwargs: Any) -> Any: ...
    def glDrawRangeElements(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEdgeFlag(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEdgeFlagPointer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEdgeFlagv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEnable(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEnableClientState(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEnableVariantClientStateEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEnableVertexAttribArray(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEnd(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEndFragmentShaderATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEndList(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEndOcclusionQueryNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEndQueryARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEndTransformFeedbackEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEndTransformFeedbackNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEndVertexShaderEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord1d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord1dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord1f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord1fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord2dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalCoord2fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalMesh1(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalMesh2(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalPoint1(self, *args: Any, **kwargs: Any) -> Any: ...
    def glEvalPoint2(self, *args: Any, **kwargs: Any) -> Any: ...
    def glExecuteProgramNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glExtractComponentEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFeedbackBuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFinalCombinerInputNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFinish(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFinishFenceNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFlush(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFlushVertexArrayRangeNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogCoordPointerEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogCoorddEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogCoorddvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogCoordfEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogCoordfvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogi(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFogiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFramebufferRenderbufferEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFramebufferTexture1DEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFramebufferTexture2DEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFramebufferTexture3DEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFrontFace(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFrustum(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenBuffersARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenFencesNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenFragmentShadersATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenFramebuffersEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenLists(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenOcclusionQueriesNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenPrograms(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenProgramsNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenQueriesARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenRenderbuffersEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenSymbolsEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenTextures(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenVertexShadersEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGenerateMipmapEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetActiveAttribARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetActiveUniformARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetActiveVaryingNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetAttachedObjectsARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetAttribLocationARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetBooleanv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetBufferParameterivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetBufferPointervARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetBufferSubDataARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetClipPlane(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetCombinerInputParameterfvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetCombinerInputParameterivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetCombinerOutputParameterfvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetCombinerOutputParameterivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetCompressedTexImage(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetDoublev(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetError(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetFenceivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetFinalCombinerInputParameterfvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetFinalCombinerInputParameterivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetFloatv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetFramebufferAttachmentParameterivEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetHandleARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetInfoLogARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetIntegerv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetInvariantBooleanvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetInvariantFloatvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetInvariantIntegervEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetLightfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetLightiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetLocalConstantBooleanvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetLocalConstantFloatvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetLocalConstantIntegervEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetMapdv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetMapfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetMapiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetMaterialfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetMaterialiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetObjectParameterfvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetObjectParameterivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetOcclusionQueryivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetOcclusionQueryuivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetPixelMapfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetPixelMapuiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetPixelMapusv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetPointerv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetPolygonStipple(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramEnvParameterdv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramEnvParameterfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramLocalParameterdv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramLocalParameterfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramParameterdvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramParameterfvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramString(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramStringNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetProgramivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetQueryObjectivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetQueryObjectuivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetQueryivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetRenderbufferParameterivEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetShaderSourceARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetString(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexEnvfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexEnviv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexGendv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexGenfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexGeniv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexImage(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexLevelParameterfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexLevelParameteriv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexParameterfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTexParameteriv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTrackMatrixivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTransformFeedbackVaryingEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetTransformFeedbackVaryingNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetUniformLocationARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetUniformfvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetUniformivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVariantBooleanvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVariantFloatvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVariantIntegervEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVariantPointervEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVaryingLocationNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribPointerv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribPointervNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribdv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribdvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribfvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glGetVertexAttribivNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glHint(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexMask(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexPointer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexd(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexdv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexi(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexs(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexsv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexub(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIndexubv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glInitNames(self, *args: Any, **kwargs: Any) -> Any: ...
    def glInsertComponentEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glInterleavedArrays(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsBufferARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsEnabled(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsFenceNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsFramebufferEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsList(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsOcclusionQueryNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsProgram(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsProgramNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsQueryARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsRenderbufferEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def glIsVariantEnabledEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLightModelf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLightModelfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLightModeli(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLightModeliv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLightf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLightfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLighti(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLightiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLineStipple(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLineWidth(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLinkProgramARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glListBase(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadIdentity(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadMatrixd(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadMatrixf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadName(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadProgramNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadTransposeMatrixd(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadTransposeMatrixdARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadTransposeMatrixf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLoadTransposeMatrixfARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLockArraysEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glLogicOp(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMap1d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMap1f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMap2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMap2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMapBufferARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMapGrid1d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMapGrid1f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMapGrid2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMapGrid2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMaterialf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMaterialfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMateriali(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMaterialiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMatrixMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultMatrixd(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultMatrixf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultTransposeMatrixd(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultTransposeMatrixdARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultTransposeMatrixf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultTransposeMatrixfARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiDrawArrays(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiDrawElements(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord1sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord2sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord3sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glMultiTexCoord4sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNewList(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3b(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3bv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormal3sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glNormalPointer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glOrtho(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPNTrianglesfATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPNTrianglesiATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPassTexCoordATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPassThrough(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelMapfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelMapuiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelMapusv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelStoref(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelStorei(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelTransferf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelTransferi(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPixelZoom(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPointParameterf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPointParameterfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPointSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPolygonMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPolygonOffset(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPolygonStipple(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPopAttrib(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPopClientAttrib(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPopMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPopName(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPrimitiveRestartIndexNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPrimitiveRestartNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPrioritizeTextures(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramEnvParameter4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramEnvParameter4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramEnvParameter4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramEnvParameter4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramLocalParameter4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramLocalParameter4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramLocalParameter4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramLocalParameter4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramParameter4dNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramParameter4dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramParameter4fNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramParameter4fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramParameters4dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramParameters4fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glProgramString(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPushAttrib(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPushClientAttrib(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPushMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def glPushName(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos2sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos3sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRasterPos4sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glReadBuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glReadPixels(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRectd(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRectdv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRectf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRectfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRecti(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRectiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRects(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRectsv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRenderMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRenderbufferStorageEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRequestResidentProgramsNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRotated(self, *args: Any, **kwargs: Any) -> Any: ...
    def glRotatef(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSampleCoverage(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSampleMapATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glScaled(self, *args: Any, **kwargs: Any) -> Any: ...
    def glScalef(self, *args: Any, **kwargs: Any) -> Any: ...
    def glScissor(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3bEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3bvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3dEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3dvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3fEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3fvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3iEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3ivEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3sEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3svEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3ubEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3ubvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3uiEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3uivEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3usEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColor3usvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSecondaryColorPointerEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSelectBuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSetFenceNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSetFragmentShaderConstantATI(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSetInvariantEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSetLocalConstantEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glShadeModel(self, *args: Any, **kwargs: Any) -> Any: ...
    def glShaderOp1EXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glShaderOp2EXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glShaderOp3EXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glShaderSourceARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glStencilFunc(self, *args: Any, **kwargs: Any) -> Any: ...
    def glStencilMask(self, *args: Any, **kwargs: Any) -> Any: ...
    def glStencilOp(self, *args: Any, **kwargs: Any) -> Any: ...
    def glSwizzleEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTestFenceNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord1sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord2sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord3sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoord4sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexCoordPointer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexEnvf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexEnvfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexEnvi(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexEnviv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexGend(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexGendv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexGenf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexGenfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexGeni(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexGeniv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexImage1D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexImage2D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexImage3D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexParameterf(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexParameterfv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexParameteri(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexParameteriv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexSubImage1D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexSubImage2D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTexSubImage3D(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTrackMatrixNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTransformFeedbackAttribsNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTransformFeedbackVaryingsEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTransformFeedbackVaryingsNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTranslated(self, *args: Any, **kwargs: Any) -> Any: ...
    def glTranslatef(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform1fARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform1fvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform1iARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform1ivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform2fARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform2fvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform2iARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform2ivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform3fARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform3fvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform3iARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform3ivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform4fARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform4fvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform4iARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniform4ivARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniformMatrix2fvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniformMatrix3fvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUniformMatrix4fvARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUnlockArraysEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUnmapBufferARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glUseProgramObjectARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glValidateProgramARB(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantPointerEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantbvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantdvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantfvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantivEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantsvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantubvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantuivEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVariantusvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex2sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex3sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4i(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertex4sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexArrayRangeNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1dNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1fNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1sNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib1svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2dNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2fNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2sNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib2svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3dNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3fNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3sNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib3svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4Nbv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4Niv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4Nsv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4Nub(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4Nubv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4Nuiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4Nusv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4bv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4d(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4dNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4dv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4f(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4fNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4fv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4iv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4s(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4sNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4sv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4ubNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4ubv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4ubvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4uiv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttrib4usv(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribPointer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribPointerNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs1dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs1fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs1svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs2dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs2fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs2svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs3dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs3fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs3svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs4dvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs4fvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs4svNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexAttribs4ubvNV(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexPointer(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexWeightPointerEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexWeightfEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glVertexWeightfvEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    def glViewport(self, *args: Any, **kwargs: Any) -> Any: ...
    def glWriteMaskEXT(self, *args: Any, **kwargs: Any) -> Any: ...
    kMGL_Version11: int = 0
    kMGL_Version12: int = 1
    kMGL_Version121: int = 2
    kMGL_Version13: int = 3
    kMGL_Version14: int = 4
    kMGL_Version15: int = 5
    kMGL_Version20: int = 6
    def maxTextureSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def maxVertexAttributes(self, *args: Any, **kwargs: Any) -> Any: ...
    def numTexImageUnits(self, *args: Any, **kwargs: Any) -> Any: ...
    def numTexInterpolants(self, *args: Any, **kwargs: Any) -> Any: ...
    def numTexUnits(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840AA8E9A0>

class MGeometryData(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def collectionNumber(self, *args: Any, **kwargs: Any) -> Any: ...
    def data(self, *args: Any, **kwargs: Any) -> Any: ...
    def dataType(self, *args: Any, **kwargs: Any) -> Any: ...
    def elementCount(self, *args: Any, **kwargs: Any) -> Any: ...
    def elementSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def elementType(self, *args: Any, **kwargs: Any) -> Any: ...
    def elementTypeSize(self, *args: Any, **kwargs: Any) -> Any: ...
    kAPISupported: int = 6
    kBiNormal: int = 8
    kChar: int = 2
    kColor: int = 4
    kColorMask: int = 11
    kDouble: int = 1
    kFloat: int = 0
    kFour: int = 4
    kInt16: int = 4
    kInt32: int = 6
    kInvalidDataType: int = 0
    kInvalidElementSize: int = 0
    kInvalidElementType: int = -1
    kMaxDataTypeIndex: int = 13
    kNormal: int = 2
    kOne: int = 1
    kPosition: int = 1
    kPrimitiveCenter: int = 10
    kTangent: int = 7
    kTexCoord: int = 3
    kThree: int = 3
    kTwo: int = 2
    kUnsignedChar: int = 3
    kUnsignedInt16: int = 5
    kUnsignedInt32: int = 7
    kUserData: int = 12
    kVelocity: int = 9
    kWeight: int = 5
    def objectName(self, *args: Any, **kwargs: Any) -> Any: ...
    def objectOwnsData(self, *args: Any, **kwargs: Any) -> Any: ...
    def setCollectionNumber(self, *args: Any, **kwargs: Any) -> Any: ...
    def setObjectOwnsData(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF1720>
    def uniqueID(self, *args: Any, **kwargs: Any) -> Any: ...

class MGeometryLegacy(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def binormal(self, *args: Any, **kwargs: Any) -> Any: ...
    def color(self, *args: Any, **kwargs: Any) -> Any: ...
    def componentId(self, *args: Any, **kwargs: Any) -> Any: ...
    def data(self, *args: Any, **kwargs: Any) -> Any: ...
    def normal(self, *args: Any, **kwargs: Any) -> Any: ...
    def position(self, *args: Any, **kwargs: Any) -> Any: ...
    def primitiveArray(self, *args: Any, **kwargs: Any) -> Any: ...
    def primitiveArrayCount(self, *args: Any, **kwargs: Any) -> Any: ...
    def tangent(self, *args: Any, **kwargs: Any) -> Any: ...
    def texCoord(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF1B80>

class MGeometryList(object):
    """
    """
    MSetupFlags: property = <property object at 0x000001840ABF69A0>
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addLast(self, *args: Any, **kwargs: Any) -> Any: ...
    def cullMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def geometry(self, *args: Any, **kwargs: Any) -> Any: ...
    def isDone(self, *args: Any, **kwargs: Any) -> Any: ...
    kAll: int = -1
    kCullCCW: int = 2
    kCullCW: int = 1
    kCullNone: int = 0
    kCulling: int = 4
    kFixedFunctionLighting: int = 2
    kMatrices: int = 1
    kNone: int = 0
    def length(self, *args: Any, **kwargs: Any) -> Any: ...
    def next(self, *args: Any, **kwargs: Any) -> Any: ...
    def objectToWorldMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def path(self, *args: Any, **kwargs: Any) -> Any: ...
    def projectionMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def reset(self, *args: Any, **kwargs: Any) -> Any: ...
    def setCurrentElement(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF0040>
    def viewMatrix(self, *args: Any, **kwargs: Any) -> Any: ...

class MGeometryManager(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def dereferenceDefaultGeometry(self, *args: Any, **kwargs: Any) -> Any: ...
    def getGeometry(self, *args: Any, **kwargs: Any) -> Any: ...
    kDefaultCube: int = 2
    kDefaultPlane: int = 1
    kDefaultSphere: int = 0
    def referenceDefaultGeometry(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF04F0>

def MGeometryManager_className(*args: Any, **kwargs: Any) -> Any: ...
def MGeometryManager_dereferenceDefaultGeometry(*args: Any, **kwargs: Any) -> Any: ...
def MGeometryManager_getGeometry(*args: Any, **kwargs: Any) -> Any: ...
def MGeometryManager_referenceDefaultGeometry(*args: Any, **kwargs: Any) -> Any: ...
class MGeometryPrimitive(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def data(self, *args: Any, **kwargs: Any) -> Any: ...
    def dataType(self, *args: Any, **kwargs: Any) -> Any: ...
    def drawPrimitiveType(self, *args: Any, **kwargs: Any) -> Any: ...
    def elementCount(self, *args: Any, **kwargs: Any) -> Any: ...
    kInvalidIndexType: int = 0
    kLineLoop: int = 4
    kLineStrip: int = 3
    kLines: int = 2
    kMaxDrawPrimitiveTypeIndex: int = 11
    kPoints: int = 1
    kPolygon: int = 10
    kQuadStrip: int = 9
    kQuads: int = 8
    kTriangleFan: int = 7
    kTriangleStrip: int = 6
    kTriangles: int = 5
    thisown: property = <property object at 0x000001840ABF0720>
    def uniqueID(self, *args: Any, **kwargs: Any) -> Any: ...

class MGeometryRequirementsLegacy(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addBinormal(self, *args: Any, **kwargs: Any) -> Any: ...
    def addColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def addComponentId(self, *args: Any, **kwargs: Any) -> Any: ...
    def addFaceOffsets(self, *args: Any, **kwargs: Any) -> Any: ...
    def addNormal(self, *args: Any, **kwargs: Any) -> Any: ...
    def addPosition(self, *args: Any, **kwargs: Any) -> Any: ...
    def addTangent(self, *args: Any, **kwargs: Any) -> Any: ...
    def addTexCoord(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF09A0>

class MHardwareRenderer(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def addDrawProcedure(self, *args: Any, **kwargs: Any) -> Any: ...
    def backEndString(self, *args: Any, **kwargs: Any) -> Any: ...
    def dereferenceGeometry(self, *args: Any, **kwargs: Any) -> Any: ...
    def drawSwatchBackGroundQuads(self, *args: Any, **kwargs: Any) -> Any: ...
    def findDrawProcedure(self, *args: Any, **kwargs: Any) -> Any: ...
    def getBufferSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def getColorBufferPixelFormat(self, *args: Any, **kwargs: Any) -> Any: ...
    def getCurrentExposureNumber(self, *args: Any, **kwargs: Any) -> Any: ...
    def getDepthBufferPixelFormat(self, *args: Any, **kwargs: Any) -> Any: ...
    def getDrawProcedureCount(self, *args: Any, **kwargs: Any) -> Any: ...
    def getDrawProcedureListNames(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSwatchLightDirection(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSwatchOrthoCameraSetting(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSwatchPerspectiveCameraSetting(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSwatchPerspectiveCameraTranslation(self, *args: Any, **kwargs: Any) -> Any: ...
    def getTotalExposureCount(self, *args: Any, **kwargs: Any) -> Any: ...
    def glFunctionTable(self, *args: Any, **kwargs: Any) -> Any: ...
    def insertDrawProcedure(self, *args: Any, **kwargs: Any) -> Any: ...
    kDefaultCube: int = 2
    kDefaultPlane: int = 1
    kDefaultSphere: int = 0
    kDepth_Float32: int = 2
    kFailure: int = 1
    kItemExists: int = 2
    kItemNotFound: int = 3
    kLocationNotFound: int = 4
    kPostExposure: int = 2
    kPostRendering: int = 3
    kPreExposure: int = 1
    kPreRendering: int = 0
    kRGBA_Fix8: int = 0
    kRGBA_Float16: int = 1
    kSuccess: int = 0
    def makeResourceContextCurrent(self, *args: Any, **kwargs: Any) -> Any: ...
    def makeSwatchContextCurrent(self, *args: Any, **kwargs: Any) -> Any: ...
    def readSwatchContextPixels(self, *args: Any, **kwargs: Any) -> Any: ...
    def referenceDefaultGeometry(self, *args: Any, **kwargs: Any) -> Any: ...
    def removeDrawProcedure(self, *args: Any, **kwargs: Any) -> Any: ...
    def restoreCurrent(self, *args: Any, **kwargs: Any) -> Any: ...
    def theRenderer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDE590>

def MHardwareRenderer_theRenderer(*args: Any, **kwargs: Any) -> Any: ...
class MHwTextureManager(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def deregisterTextureFile(self, *args: Any, **kwargs: Any) -> Any: ...
    def glBind(self, *args: Any, **kwargs: Any) -> Any: ...
    def registerTextureFile(self, *args: Any, **kwargs: Any) -> Any: ...
    def textureFile(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDD180>

def MHwTextureManager_className(*args: Any, **kwargs: Any) -> Any: ...
def MHwTextureManager_deregisterTextureFile(*args: Any, **kwargs: Any) -> Any: ...
def MHwTextureManager_glBind(*args: Any, **kwargs: Any) -> Any: ...
def MHwTextureManager_registerTextureFile(*args: Any, **kwargs: Any) -> Any: ...
def MHwTextureManager_textureFile(*args: Any, **kwargs: Any) -> Any: ...
class MHwrCallback(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def deviceDeleted(self, *args: Any, **kwargs: Any) -> Any: ...
    def deviceLost(self, *args: Any, **kwargs: Any) -> Any: ...
    def deviceNew(self, *args: Any, **kwargs: Any) -> Any: ...
    def deviceReset(self, *args: Any, **kwargs: Any) -> Any: ...
    def removeCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDEE50>

def MHwrCallback_addCallback(*args: Any, **kwargs: Any) -> Any: ...
def MHwrCallback_removeCallback(*args: Any, **kwargs: Any) -> Any: ...
class MLightLinks(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def getIgnoredLights(self, *args: Any, **kwargs: Any) -> Any: ...
    def getIgnoredObjects(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLinkedLights(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLinkedObjects(self, *args: Any, **kwargs: Any) -> Any: ...
    def getShadowIgnoredLights(self, *args: Any, **kwargs: Any) -> Any: ...
    def getShadowIgnoredObjects(self, *args: Any, **kwargs: Any) -> Any: ...
    def getShadowLinkedLights(self, *args: Any, **kwargs: Any) -> Any: ...
    def getShadowLinkedObjects(self, *args: Any, **kwargs: Any) -> Any: ...
    def parseLinks(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDD400>

class MRenderCallback(object):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def addRenderTileCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def postProcessCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def removeCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def shadowCastCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABD8C20>

def MRenderCallback_addCallback(*args: Any, **kwargs: Any) -> Any: ...
def MRenderCallback_addRenderTileCallback(*args: Any, **kwargs: Any) -> Any: ...
def MRenderCallback_className(*args: Any, **kwargs: Any) -> Any: ...
def MRenderCallback_removeCallback(*args: Any, **kwargs: Any) -> Any: ...
class MRenderData(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    aspectRatio: property = <property object at 0x000001840ABDDC20>
    bottom: property = <property object at 0x000001840ABDD9F0>
    bytesPerChannel: property = <property object at 0x000001840ABDDAE0>
    depthArr: property = <property object at 0x000001840ABDDD60>
    eyePoint: property = <property object at 0x000001840ABDDC70>
    fieldOfView: property = <property object at 0x000001840ABDDBD0>
    internalData: property = <property object at 0x000001840ABDDDB0>
    left: property = <property object at 0x000001840ABDD9A0>
    perspective: property = <property object at 0x000001840ABDD8B0>
    resX: property = <property object at 0x000001840ABDD900>
    resY: property = <property object at 0x000001840ABDD950>
    rgbaArr: property = <property object at 0x000001840ABDDD10>
    right: property = <property object at 0x000001840ABDDA40>
    def screenToWorld(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDD7C0>
    top: property = <property object at 0x000001840ABDDA90>
    viewDirection: property = <property object at 0x000001840ABF16D0>
    worldToEyeMatrix: property = <property object at 0x000001840ABDDCC0>
    def worldToScreen(self, *args: Any, **kwargs: Any) -> Any: ...
    xsize: property = <property object at 0x000001840ABDDB30>
    ysize: property = <property object at 0x000001840ABDDB80>

class MRenderProfile(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addRenderer(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasRenderer(self, *args: Any, **kwargs: Any) -> Any: ...
    kMayaD3D: int = 2
    kMayaOpenGL: int = 1
    kMayaSoftware: int = 0
    def numberOfRenderers(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDB310>

class MRenderSetup(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def getEnabledSelectedNodeNames(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDB4F0>

class MRenderSetupPrivate(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def _switchToLegacyRenderLayer(self, *args: Any, **kwargs: Any) -> Any: ...
    def _triggerSelectionChanged(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDB680>

def MRenderSetupPrivate__switchToLegacyRenderLayer(*args: Any, **kwargs: Any) -> Any: ...
def MRenderSetupPrivate__triggerSelectionChanged(*args: Any, **kwargs: Any) -> Any: ...
def MRenderSetupPrivate_className(*args: Any, **kwargs: Any) -> Any: ...
def MRenderSetup_className(*args: Any, **kwargs: Any) -> Any: ...
def MRenderSetup_getEnabledSelectedNodeNames(*args: Any, **kwargs: Any) -> Any: ...
class MRenderShadowData(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    depthMaps: property = <property object at 0x000001840ABDBB80>
    internalData: property = <property object at 0x000001840ABDBC20>
    kDirectional: int = 2
    kInvalid: int = 0
    kPoint: int = 1
    kSpot: int = 3
    lightPosition: property = <property object at 0x000001840ABDBA90>
    lightType: property = <property object at 0x000001840ABDD3B0>
    midDistMaps: property = <property object at 0x000001840ABDBBD0>
    perspective: property = <property object at 0x000001840ABDB950>
    perspectiveMatrix: property = <property object at 0x000001840ABDBB30>
    projectionMatrix: property = <property object at 0x000001840ABDBAE0>
    shadowResX: property = <property object at 0x000001840ABDB9F0>
    shadowResY: property = <property object at 0x000001840ABDBA40>
    thisown: property = <property object at 0x000001840ABDB860>
    useMidDistMap: property = <property object at 0x000001840ABDB9A0>
    def worldToZbuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def zbufferToWorld(self, *args: Any, **kwargs: Any) -> Any: ...

class MRenderTargetLegacy(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def height(self, *args: Any, **kwargs: Any) -> Any: ...
    def makeTargetCurrent(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDBD10>
    def width(self, *args: Any, **kwargs: Any) -> Any: ...
    def writeColorBuffer(self, *args: Any, **kwargs: Any) -> Any: ...

class MRenderUtil(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def convertPsdFile(self, *args: Any, **kwargs: Any) -> Any: ...
    def diffuseReflectance(self, *args: Any, **kwargs: Any) -> Any: ...
    def eval2dTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def exactFileTextureName(self, *args: Any, **kwargs: Any) -> Any: ...
    def exactImagePlaneFileName(self, *args: Any, **kwargs: Any) -> Any: ...
    def generatingIprFile(self, *args: Any, **kwargs: Any) -> Any: ...
    def getCommonRenderSettings(self, *args: Any, **kwargs: Any) -> Any: ...
    def hemisphereCoverage(self, *args: Any, **kwargs: Any) -> Any: ...
    def inCurrentRenderLayer(self, *args: Any, **kwargs: Any) -> Any: ...
    kAll: int = 0
    kAmbientOnly: int = 3
    kBatchRender: int = 1
    kColorOnly: int = 1
    kDiffuseOnly: int = 4
    kHardwareRender: int = 4
    kInteractiveRender: int = 2
    kIprRender: int = 3
    kNotRendering: int = 0
    kShadowOnly: int = 2
    kSpecularOnly: int = 5
    def lightAttenuation(self, *args: Any, **kwargs: Any) -> Any: ...
    def mainBeautyPassCustomTokenString(self, *args: Any, **kwargs: Any) -> Any: ...
    def mainBeautyPassName(self, *args: Any, **kwargs: Any) -> Any: ...
    def maximumSpecularReflection(self, *args: Any, **kwargs: Any) -> Any: ...
    def mayaRenderState(self, *args: Any, **kwargs: Any) -> Any: ...
    def noise1(self, *args: Any, **kwargs: Any) -> Any: ...
    def noise2(self, *args: Any, **kwargs: Any) -> Any: ...
    def noise3(self, *args: Any, **kwargs: Any) -> Any: ...
    def noise4(self, *args: Any, **kwargs: Any) -> Any: ...
    def noiseTableCubeSide(self, *args: Any, **kwargs: Any) -> Any: ...
    def noiseTableSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def raytrace(self, *args: Any, **kwargs: Any) -> Any: ...
    def raytraceFirstGeometryIntersections(self, *args: Any, **kwargs: Any) -> Any: ...
    def relativeFileName(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderObjectItem(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderPass(self, *args: Any, **kwargs: Any) -> Any: ...
    def sampleShadingNetwork(self, *args: Any, **kwargs: Any) -> Any: ...
    def sendRenderProgressInfo(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDBF40>
    def valueInNoiseTable(self, *args: Any, **kwargs: Any) -> Any: ...

def MRenderUtil_className(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_convertPsdFile(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_diffuseReflectance(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_eval2dTexture(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_exactFileTextureName(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_exactImagePlaneFileName(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_generatingIprFile(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_getCommonRenderSettings(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_hemisphereCoverage(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_inCurrentRenderLayer(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_lightAttenuation(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_mainBeautyPassCustomTokenString(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_mainBeautyPassName(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_maximumSpecularReflection(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_mayaRenderState(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_noise1(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_noise2(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_noise3(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_noise4(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_noiseTableCubeSide(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_noiseTableSize(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_raytrace(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_raytraceFirstGeometryIntersections(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_relativeFileName(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_renderObjectItem(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_renderPass(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_sampleShadingNetwork(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_sendRenderProgressInfo(*args: Any, **kwargs: Any) -> Any: ...
def MRenderUtil_valueInNoiseTable(*args: Any, **kwargs: Any) -> Any: ...
class MRenderView(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def doesRenderEditorExist(self, *args: Any, **kwargs: Any) -> Any: ...
    def endRender(self, *args: Any, **kwargs: Any) -> Any: ...
    def getRenderRegion(self, *args: Any, **kwargs: Any) -> Any: ...
    def refresh(self, *args: Any, **kwargs: Any) -> Any: ...
    def setCurrentCamera(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawTileBoundary(self, *args: Any, **kwargs: Any) -> Any: ...
    def startRegionRender(self, *args: Any, **kwargs: Any) -> Any: ...
    def startRender(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDADB0>
    def updatePixels(self, *args: Any, **kwargs: Any) -> Any: ...

def MRenderView_className(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_doesRenderEditorExist(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_endRender(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_getRenderRegion(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_refresh(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_setCurrentCamera(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_setDrawTileBoundary(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_startRegionRender(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_startRender(*args: Any, **kwargs: Any) -> Any: ...
def MRenderView_updatePixels(*args: Any, **kwargs: Any) -> Any: ...
class MRenderingInfo(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def cameraPath(self, *args: Any, **kwargs: Any) -> Any: ...
    def height(self, *args: Any, **kwargs: Any) -> Any: ...
    def originX(self, *args: Any, **kwargs: Any) -> Any: ...
    def originY(self, *args: Any, **kwargs: Any) -> Any: ...
    def projectionMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderTarget(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderingAPI(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderingVersion(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABDDEA0>
    def viewMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def width(self, *args: Any, **kwargs: Any) -> Any: ...

class MSwatchRenderBase(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def cancelCurrentSwatchRender(self, *args: Any, **kwargs: Any) -> Any: ...
    def cancelParallelRendering(self, *args: Any, **kwargs: Any) -> Any: ...
    def doIteration(self, *args: Any, **kwargs: Any) -> Any: ...
    def enableSwatchRender(self, *args: Any, **kwargs: Any) -> Any: ...
    def image(self, *args: Any, **kwargs: Any) -> Any: ...
    def node(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderParallel(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderQuality(self, *args: Any, **kwargs: Any) -> Any: ...
    def resolution(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRenderQuality(self, *args: Any, **kwargs: Any) -> Any: ...
    def swatchNode(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABD8220>

def MSwatchRenderBase_cancelCurrentSwatchRender(*args: Any, **kwargs: Any) -> Any: ...
def MSwatchRenderBase_enableSwatchRender(*args: Any, **kwargs: Any) -> Any: ...
class MSwatchRenderRegister(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def registerSwatchRender(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABD8680>
    def unregisterSwatchRender(self, *args: Any, **kwargs: Any) -> Any: ...

def MSwatchRenderRegister_registerSwatchRender(*args: Any, **kwargs: Any) -> Any: ...
def MSwatchRenderRegister_unregisterSwatchRender(*args: Any, **kwargs: Any) -> Any: ...
class MUniformParameter(object):
    """
    """
    def UIHidden(self, *args: Any, **kwargs: Any) -> Any: ...
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def getAsBool(self, *args: Any, **kwargs: Any) -> Any: ...
    def getAsFloat(self, *args: Any, **kwargs: Any) -> Any: ...
    def getAsFloatArray(self, *args: Any, **kwargs: Any) -> Any: ...
    def getAsInt(self, *args: Any, **kwargs: Any) -> Any: ...
    def getAsString(self, *args: Any, **kwargs: Any) -> Any: ...
    def getPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSource(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasChanged(self, *args: Any, **kwargs: Any) -> Any: ...
    def isATexture(self, *args: Any, **kwargs: Any) -> Any: ...
    kSemanticBackgroundColor: int = 46
    kSemanticBump: int = 11
    kSemanticBumpTexture: int = 30
    kSemanticColor: int = 9
    kSemanticColorTexture: int = 28
    kSemanticEnvironment: int = 12
    kSemanticFarClipPlane: int = 49
    kSemanticFrameNumber: int = 47
    kSemanticHWSEdgeLevel: int = 54
    kSemanticHWSFaceLevel: int = 53
    kSemanticHWSFrontCCW: int = 57
    kSemanticHWSHighlighting: int = 59
    kSemanticHWSInstancedDraw: int = 58
    kSemanticHWSObjectLevel: int = 52
    kSemanticHWSOccluder: int = 56
    kSemanticHWSPrimitiveBase: int = 50
    kSemanticHWSPrimitiveCountPerInstance: int = 51
    kSemanticHWSVertexLevel: int = 55
    kSemanticLocalViewer: int = 44
    kSemanticNearClipPlane: int = 48
    kSemanticNormal: int = 10
    kSemanticNormalTexture: int = 29
    kSemanticNormalizationTexture: int = 31
    kSemanticObjectDir: int = 1
    kSemanticObjectPos: int = 5
    kSemanticOpaqueDepthTexture: int = 33
    kSemanticProjectionDir: int = 4
    kSemanticProjectionInverseMatrix: int = 20
    kSemanticProjectionInverseTransposeMatrix: int = 21
    kSemanticProjectionMatrix: int = 19
    kSemanticProjectionPos: int = 8
    kSemanticProjectionTransposeMatrix: int = 37
    kSemanticTime: int = 34
    kSemanticTranspDepthTexture: int = 32
    kSemanticUnknown: int = 0
    kSemanticViewDir: int = 3
    kSemanticViewInverseMatrix: int = 17
    kSemanticViewInverseTransposeMatrix: int = 18
    kSemanticViewMatrix: int = 16
    kSemanticViewPos: int = 7
    kSemanticViewProjectionInverseMatrix: int = 41
    kSemanticViewProjectionInverseTransposeMatrix: int = 43
    kSemanticViewProjectionMatrix: int = 40
    kSemanticViewProjectionTransposeMatrix: int = 42
    kSemanticViewTransposeMatrix: int = 36
    kSemanticViewportPixelSize: int = 45
    kSemanticWorldDir: int = 2
    kSemanticWorldInverseMatrix: int = 14
    kSemanticWorldInverseTransposeMatrix: int = 15
    kSemanticWorldMatrix: int = 13
    kSemanticWorldPos: int = 6
    kSemanticWorldTransposeMatrix: int = 35
    kSemanticWorldViewInverseMatrix: int = 23
    kSemanticWorldViewInverseTransposeMatrix: int = 24
    kSemanticWorldViewMatrix: int = 22
    kSemanticWorldViewProjectionInverseMatrix: int = 26
    kSemanticWorldViewProjectionInverseTransposeMatrix: int = 27
    kSemanticWorldViewProjectionMatrix: int = 25
    kSemanticWorldViewProjectionTransposeMatrix: int = 39
    kSemanticWorldViewTransposeMatrix: int = 38
    kType1DTexture: int = 4
    kType2DTexture: int = 5
    kType3DTexture: int = 6
    kTypeBool: int = 1
    kTypeCubeTexture: int = 7
    kTypeEnum: int = 10
    kTypeEnvTexture: int = 8
    kTypeFloat: int = 3
    kTypeInt: int = 2
    kTypeString: int = 9
    kTypeUnknown: int = 0
    def keyable(self, *args: Any, **kwargs: Any) -> Any: ...
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    def numColumns(self, *args: Any, **kwargs: Any) -> Any: ...
    def numElements(self, *args: Any, **kwargs: Any) -> Any: ...
    def numRows(self, *args: Any, **kwargs: Any) -> Any: ...
    def semantic(self, *args: Any, **kwargs: Any) -> Any: ...
    def setAsBool(self, *args: Any, **kwargs: Any) -> Any: ...
    def setAsFloat(self, *args: Any, **kwargs: Any) -> Any: ...
    def setAsFloatArray(self, *args: Any, **kwargs: Any) -> Any: ...
    def setAsInt(self, *args: Any, **kwargs: Any) -> Any: ...
    def setAsString(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDirty(self, *args: Any, **kwargs: Any) -> Any: ...
    def setEnumFieldNames(self, *args: Any, **kwargs: Any) -> Any: ...
    def setKeyable(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRangeMax(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRangeMin(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSoftRangeMax(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSoftRangeMin(self, *args: Any, **kwargs: Any) -> Any: ...
    def setUIHidden(self, *args: Any, **kwargs: Any) -> Any: ...
    def setUINiceName(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF0D10>
    def type(self, *args: Any, **kwargs: Any) -> Any: ...
    def userData(self, *args: Any, **kwargs: Any) -> Any: ...

class MUniformParameterList(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def append(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def getElement(self, *args: Any, **kwargs: Any) -> Any: ...
    def length(self, *args: Any, **kwargs: Any) -> Any: ...
    def setElement(self, *args: Any, **kwargs: Any) -> Any: ...
    def setLength(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABEE860>

class MVaryingParameter(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addElement(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def destinationSet(self, *args: Any, **kwargs: Any) -> Any: ...
    def dimension(self, *args: Any, **kwargs: Any) -> Any: ...
    def getBuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def getElement(self, *args: Any, **kwargs: Any) -> Any: ...
    def getElementSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def getMaximumStride(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSourceSetName(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSourceType(self, *args: Any, **kwargs: Any) -> Any: ...
    def getUpdateId(self, *args: Any, **kwargs: Any) -> Any: ...
    kBinormal: int = 8
    kChar: int = 3
    kColor: int = 4
    kDouble: int = 2
    kFloat: int = 1
    kInt16: int = 5
    kInt32: int = 7
    kInvalidParameter: int = -1
    kNoSemantic: int = 0
    kNormal: int = 2
    kPosition: int = 1
    kStructure: int = 0
    kTangent: int = 7
    kTexCoord: int = 3
    kUnsignedChar: int = 4
    kUnsignedInt16: int = 6
    kUnsignedInt32: int = 8
    kWeight: int = 5
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    def numElements(self, *args: Any, **kwargs: Any) -> Any: ...
    def removeElements(self, *args: Any, **kwargs: Any) -> Any: ...
    def semantic(self, *args: Any, **kwargs: Any) -> Any: ...
    def semanticName(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSource(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABEEB30>
    def type(self, *args: Any, **kwargs: Any) -> Any: ...

class MVaryingParameterList(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def append(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def getElement(self, *args: Any, **kwargs: Any) -> Any: ...
    def length(self, *args: Any, **kwargs: Any) -> Any: ...
    def setElement(self, *args: Any, **kwargs: Any) -> Any: ...
    def setLength(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABED220>

class MViewportRenderer(object):
    """
    """
    def UIname(self, *args: Any, **kwargs: Any) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def deregisterRenderer(self, *args: Any, **kwargs: Any) -> Any: ...
    def initialize(self, *args: Any, **kwargs: Any) -> Any: ...
    kDirect3D: int = 1
    kExcludeAll: int = -1
    kExcludeCVs: int = 131072
    kExcludeCameras: int = 32
    kExcludeDeformers: int = 256
    kExcludeDimensions: int = 4096
    kExcludeDynamicConstraints: int = 134217728
    kExcludeDynamics: int = 512
    kExcludeFluids: int = 2097152
    kExcludeFollicles: int = 4194304
    kExcludeGrid: int = 65536
    kExcludeHairSystems: int = 8388608
    kExcludeHulls: int = 262144
    kExcludeIkHandles: int = 128
    kExcludeImagePlane: int = 16777216
    kExcludeJoints: int = 64
    kExcludeLights: int = 16
    kExcludeLocators: int = 2048
    kExcludeManipulators: int = 268435456
    kExcludeMeshes: int = 4
    kExcludeMotionTrails: int = 1073741824
    kExcludeNCloths: int = 33554432
    kExcludeNParticles: int = 536870912
    kExcludeNRigids: int = 67108864
    kExcludeNone: int = 0
    kExcludeNurbsCurves: int = 1
    kExcludeNurbsSurfaces: int = 2
    kExcludeParticleInstancers: int = 1024
    kExcludePivots: int = 16384
    kExcludePlanes: int = 8
    kExcludePluginShapes: int = -2147483648
    kExcludeSelectHandles: int = 8192
    kExcludeStrokes: int = 524288
    kExcludeSubdivSurfaces: int = 1048576
    kExcludeTextures: int = 32768
    kNoOverride: int = 0
    kOpenGL: int = 0
    kOverrideAllDrawing: int = 1
    kOverrideThenStandard: int = 2
    kOverrideThenUI: int = 3
    kSoftware: int = 2
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    def nativelySupports(self, *args: Any, **kwargs: Any) -> Any: ...
    def override(self, *args: Any, **kwargs: Any) -> Any: ...
    def overrideThenStandardExclusion(self, *args: Any, **kwargs: Any) -> Any: ...
    def registerRenderer(self, *args: Any, **kwargs: Any) -> Any: ...
    def render(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderingOverride(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRenderingOverride(self, *args: Any, **kwargs: Any) -> Any: ...
    def setUIName(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABD8810>
    def uninitialize(self, *args: Any, **kwargs: Any) -> Any: ...

class RV_AOV(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    name: property = <property object at 0x000001840ABDAC70>
    numberOfChannels: property = <property object at 0x000001840ABDAC20>
    pPixels: property = <property object at 0x000001840ABDACC0>
    thisown: property = <property object at 0x000001840ABDABD0>

class RV_PIXEL(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    a: property = <property object at 0x000001840ABDAAE0>
    b: property = <property object at 0x000001840ABDAA90>
    g: property = <property object at 0x000001840ABDAA40>
    r: property = <property object at 0x000001840ABDA9F0>
    thisown: property = <property object at 0x000001840ABDA9A0>

class boolPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF69F0>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def boolPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class charPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840AB5BF40>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def charPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class doublePtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF67C0>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def doublePtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class floatPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF6590>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def floatPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class intPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840AA9D3B0>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def intPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class shortPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF6360>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def shortPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class uCharPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF6E50>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def uCharPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class uIntPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840ABF6C20>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def uIntPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
