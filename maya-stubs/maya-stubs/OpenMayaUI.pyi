from __future__ import annotations

from typing import *


class M3dView(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def active3dView(self, *args: Any, **kwargs: Any) -> Any: ...
    def activeAffectedColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def activeTemplateColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def applicationShell(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def backgroundColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def backgroundColorBottom(self, *args: Any, **kwargs: Any) -> Any: ...
    def backgroundColorTop(self, *args: Any, **kwargs: Any) -> Any: ...
    def beginGL(self, *args: Any, **kwargs: Any) -> Any: ...
    def beginProjMatrixOverride(self, *args: Any, **kwargs: Any) -> Any: ...
    def beginSelect(self, *args: Any, **kwargs: Any) -> Any: ...
    def beginXorDrawing(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def colorAtIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def colorMask(self, *args: Any, **kwargs: Any) -> Any: ...
    def deviceContext(self, *args: Any, **kwargs: Any) -> Any: ...
    def devicePixelRatio(self, *args: Any, **kwargs: Any) -> Any: ...
    def disallowPolygonOffset(self, *args: Any, **kwargs: Any) -> Any: ...
    def display(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayStyle(self, *args: Any, **kwargs: Any) -> Any: ...
    def drawText(self, *args: Any, **kwargs: Any) -> Any: ...
    def endGL(self, *args: Any, **kwargs: Any) -> Any: ...
    def endProjMatrixOverride(self, *args: Any, **kwargs: Any) -> Any: ...
    def endSelect(self, *args: Any, **kwargs: Any) -> Any: ...
    def endXorDrawing(self, *args: Any, **kwargs: Any) -> Any: ...
    def filteredObjectList(self, *args: Any, **kwargs: Any) -> Any: ...
    def get3dView(self, *args: Any, **kwargs: Any) -> Any: ...
    def getCamera(self, *args: Any, **kwargs: Any) -> Any: ...
    def getColorIndexAndTable(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLightCount(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLightIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLightPath(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLightingMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def getM3dViewFromModelEditor(self, *args: Any, **kwargs: Any) -> Any: ...
    def getM3dViewFromModelPanel(self, *args: Any, **kwargs: Any) -> Any: ...
    def getRendererName(self, *args: Any, **kwargs: Any) -> Any: ...
    def getScreenPosition(self, *args: Any, **kwargs: Any) -> Any: ...
    def hiliteColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def initNames(self, *args: Any, **kwargs: Any) -> Any: ...
    def isBackgroundGradient(self, *args: Any, **kwargs: Any) -> Any: ...
    def isLightVisible(self, *args: Any, **kwargs: Any) -> Any: ...
    def isShadeActiveOnly(self, *args: Any, **kwargs: Any) -> Any: ...
    def isVisible(self, *args: Any, **kwargs: Any) -> Any: ...
    kActive: int = 0
    kActiveAffected: int = 10
    kActiveColors: int = 0
    kActiveComponent: int = 7
    kActiveTemplate: int = 6
    kBackgroundColor: int = 6
    kBoundingBox: int = 0
    kCenter: int = 1
    kDefaultQualityRenderer: int = 0
    kDepth_8: int = 0
    kDepth_Float: int = 1
    kDisplayCVs: int = 131072
    kDisplayCameras: int = 32
    kDisplayDeformers: int = 256
    kDisplayDimensions: int = 4096
    kDisplayDynamicConstraints: int = 134217728
    kDisplayDynamics: int = 512
    kDisplayEverything: int = -1
    kDisplayFluids: int = 2097152
    kDisplayFollicles: int = 4194304
    kDisplayGrid: int = 65536
    kDisplayHairSystems: int = 8388608
    kDisplayHulls: int = 262144
    kDisplayIkHandles: int = 128
    kDisplayImagePlane: int = 16777216
    kDisplayJoints: int = 64
    kDisplayLights: int = 16
    kDisplayLocators: int = 2048
    kDisplayManipulators: int = 268435456
    kDisplayMeshes: int = 4
    kDisplayNCloths: int = 33554432
    kDisplayNParticles: int = 536870912
    kDisplayNRigids: int = 67108864
    kDisplayNurbsCurves: int = 1
    kDisplayNurbsSurfaces: int = 2
    kDisplayParticleInstancers: int = 1024
    kDisplayPivots: int = 16384
    kDisplayPlanes: int = 8
    kDisplaySelectHandles: int = 8192
    kDisplayStrokes: int = 524288
    kDisplaySubdivSurfaces: int = 1048576
    kDisplayTextures: int = 32768
    kDormant: int = 2
    kDormantColors: int = 2
    kExcludeMotionTrails: int = 1073741824
    kExcludePluginShapes: int = -2147483648
    kExternalRenderer: int = 3
    kFlatShaded: int = 1
    kGouraudShaded: int = 2
    kHighQualityRenderer: int = 1
    kHilite: int = 4
    kIntermediateObject: int = 9
    kInvisible: int = 3
    kLead: int = 8
    kLeft: int = 0
    kLightActive: int = 2
    kLightAll: int = 0
    kLightDefault: int = 3
    kLightNone: int = 5
    kLightSelected: int = 1
    kLive: int = 1
    kNoStatus: int = 11
    kPoints: int = 4
    kRight: int = 2
    kStippleDashed: int = 1
    kStippleNone: int = 0
    kTemplate: int = 5
    kTemplateColor: int = 5
    kUnused1: int = 4
    kViewport2Renderer: int = 2
    kWireFrame: int = 3
    def leadColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def liveColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def loadName(self, *args: Any, **kwargs: Any) -> Any: ...
    def makeSharedContextCurrent(self, *args: Any, **kwargs: Any) -> Any: ...
    def modelViewMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def multipleDrawEnabled(self, *args: Any, **kwargs: Any) -> Any: ...
    def multipleDrawPassCount(self, *args: Any, **kwargs: Any) -> Any: ...
    def numActiveColors(self, *args: Any, **kwargs: Any) -> Any: ...
    def numDormantColors(self, *args: Any, **kwargs: Any) -> Any: ...
    def numUserDefinedColors(self, *args: Any, **kwargs: Any) -> Any: ...
    def numberOf3dViews(self, *args: Any, **kwargs: Any) -> Any: ...
    def objectDisplay(self, *args: Any, **kwargs: Any) -> Any: ...
    def objectListFilterName(self, *args: Any, **kwargs: Any) -> Any: ...
    def playblastPortHeight(self, *args: Any, **kwargs: Any) -> Any: ...
    def playblastPortWidth(self, *args: Any, **kwargs: Any) -> Any: ...
    def pluginObjectDisplay(self, *args: Any, **kwargs: Any) -> Any: ...
    def popName(self, *args: Any, **kwargs: Any) -> Any: ...
    def popViewport(self, *args: Any, **kwargs: Any) -> Any: ...
    def portHeight(self, *args: Any, **kwargs: Any) -> Any: ...
    def portWidth(self, *args: Any, **kwargs: Any) -> Any: ...
    def projectionMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def pushName(self, *args: Any, **kwargs: Any) -> Any: ...
    def pushViewport(self, *args: Any, **kwargs: Any) -> Any: ...
    def readBufferTo2dTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def readColorBuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def readDepthMap(self, *args: Any, **kwargs: Any) -> Any: ...
    def referenceLayerColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def refresh(self, *args: Any, **kwargs: Any) -> Any: ...
    def renderOverrideName(self, *args: Any, **kwargs: Any) -> Any: ...
    def rendererString(self, *args: Any, **kwargs: Any) -> Any: ...
    def scheduleRefresh(self, *args: Any, **kwargs: Any) -> Any: ...
    def scheduleRefreshAllViews(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def setCamera(self, *args: Any, **kwargs: Any) -> Any: ...
    def setColorMask(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDisallowPolygonOffset(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDisplayStyle(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawColorAndAlpha(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMultipleDrawEnable(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMultipleDrawPassCount(self, *args: Any, **kwargs: Any) -> Any: ...
    def setObjectDisplay(self, *args: Any, **kwargs: Any) -> Any: ...
    def setObjectListFilterName(self, *args: Any, **kwargs: Any) -> Any: ...
    def setPluginObjectDisplay(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRenderOverrideName(self, *args: Any, **kwargs: Any) -> Any: ...
    def setShowObjectFilterNameInHUD(self, *args: Any, **kwargs: Any) -> Any: ...
    def setShowViewSelectedChildren(self, *args: Any, **kwargs: Any) -> Any: ...
    def setUserDefinedColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def setViewSelectedPrefix(self, *args: Any, **kwargs: Any) -> Any: ...
    def showObjectFilterNameInHUD(self, *args: Any, **kwargs: Any) -> Any: ...
    def showViewSelectedChildren(self, *args: Any, **kwargs: Any) -> Any: ...
    def templateColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def textureMode(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C483680>
    def twoSidedLighting(self, *args: Any, **kwargs: Any) -> Any: ...
    def updateViewingParameters(self, *args: Any, **kwargs: Any) -> Any: ...
    def userDefinedColorIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def usingDefaultMaterial(self, *args: Any, **kwargs: Any) -> Any: ...
    def usingMipmappedTextures(self, *args: Any, **kwargs: Any) -> Any: ...
    def viewIsFiltered(self, *args: Any, **kwargs: Any) -> Any: ...
    def viewSelectedPrefix(self, *args: Any, **kwargs: Any) -> Any: ...
    def viewToObjectSpace(self, *args: Any, **kwargs: Any) -> Any: ...
    def viewToWorld(self, *args: Any, **kwargs: Any) -> Any: ...
    def viewport(self, *args: Any, **kwargs: Any) -> Any: ...
    def widget(self, *args: Any, **kwargs: Any) -> Any: ...
    def window(self, *args: Any, **kwargs: Any) -> Any: ...
    def wireframeOnShaded(self, *args: Any, **kwargs: Any) -> Any: ...
    def wireframeOnlyInShadedMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def worldToView(self, *args: Any, **kwargs: Any) -> Any: ...
    def writeColorBuffer(self, *args: Any, **kwargs: Any) -> Any: ...
    def xray(self, *args: Any, **kwargs: Any) -> Any: ...
    def xrayJoints(self, *args: Any, **kwargs: Any) -> Any: ...

def M3dView_active3dView(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_activeAffectedColor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_activeTemplateColor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_applicationShell(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_backgroundColor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_backgroundColorBottom(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_backgroundColorTop(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_className(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_displayStatus(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_get3dView(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_getM3dViewFromModelEditor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_getM3dViewFromModelPanel(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_hiliteColor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_isBackgroundGradient(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_leadColor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_liveColor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_numberOf3dViews(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_referenceLayerColor(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_scheduleRefreshAllViews(*args: Any, **kwargs: Any) -> Any: ...
def M3dView_templateColor(*args: Any, **kwargs: Any) -> Any: ...
class MCursor(object):
    """
    """
    def __eq__(self, *args: Any, **kwargs: Any) -> Any: ...
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, *args: Any, **kwargs: Any) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    crossHairCursor: MCursor = <maya.OpenMayaUI.MCursor; proxy of <Swig Object of type 'MCursor *' at 0x000001840BE24CF0> >
    defaultCursor: MCursor = <maya.OpenMayaUI.MCursor; proxy of <Swig Object of type 'MCursor *' at 0x000001840BE24180> >
    doubleCrossHairCursor: MCursor = <maya.OpenMayaUI.MCursor; proxy of <Swig Object of type 'MCursor *' at 0x000001840BE24D80> >
    editCursor: MCursor = <maya.OpenMayaUI.MCursor; proxy of <Swig Object of type 'MCursor *' at 0x000001840BE24E10> >
    handCursor: MCursor = <maya.OpenMayaUI.MCursor; proxy of <Swig Object of type 'MCursor *' at 0x000001840BE242D0> >
    pencilCursor: MCursor = <maya.OpenMayaUI.MCursor; proxy of <Swig Object of type 'MCursor *' at 0x000001840BE24360> >
    textBeamCursor: MCursor = <maya.OpenMayaUI.MCursor; proxy of <Swig Object of type 'MCursor *' at 0x000001840BE24660> >
    thisown: property = <property object at 0x000001840C487C20>

class MDeviceChannel(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def axisIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def childByIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasChildren(self, *args: Any, **kwargs: Any) -> Any: ...
    def longName(self, *args: Any, **kwargs: Any) -> Any: ...
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    def numChildren(self, *args: Any, **kwargs: Any) -> Any: ...
    def parent(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C487E00>

class MDeviceState(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def buttonState(self, *args: Any, **kwargs: Any) -> Any: ...
    def devicePosition(self, *args: Any, **kwargs: Any) -> Any: ...
    def isNull(self, *args: Any, **kwargs: Any) -> Any: ...
    def maxAxis(self, *args: Any, **kwargs: Any) -> Any: ...
    def setButtonState(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDevicePosition(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C488180>

class MDrawData(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def geometry(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C488450>

def MDrawData_className(*args: Any, **kwargs: Any) -> Any: ...
class MDrawInfo(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def canDrawComponent(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def completelyInside(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayStyle(self, *args: Any, **kwargs: Any) -> Any: ...
    def getPrototype(self, *args: Any, **kwargs: Any) -> Any: ...
    def inSelect(self, *args: Any, **kwargs: Any) -> Any: ...
    def inUserInteraction(self, *args: Any, **kwargs: Any) -> Any: ...
    def inclusiveMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def multiPath(self, *args: Any, **kwargs: Any) -> Any: ...
    def objectDisplayStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def pluginObjectDisplayStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def projectionMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMultiPath(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C4885E0>
    def userChangingViewContext(self, *args: Any, **kwargs: Any) -> Any: ...
    def view(self, *args: Any, **kwargs: Any) -> Any: ...

def MDrawInfo_className(*args: Any, **kwargs: Any) -> Any: ...
class MDrawRequest(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def color(self, *args: Any, **kwargs: Any) -> Any: ...
    def component(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayCullOpposite(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayCulling(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayStyle(self, *args: Any, **kwargs: Any) -> Any: ...
    def drawData(self, *args: Any, **kwargs: Any) -> Any: ...
    def drawLast(self, *args: Any, **kwargs: Any) -> Any: ...
    def isTransparent(self, *args: Any, **kwargs: Any) -> Any: ...
    def material(self, *args: Any, **kwargs: Any) -> Any: ...
    def matrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def multiPath(self, *args: Any, **kwargs: Any) -> Any: ...
    def setColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def setComponent(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDisplayCullOpposite(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDisplayCulling(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDisplayStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDisplayStyle(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawData(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawLast(self, *args: Any, **kwargs: Any) -> Any: ...
    def setIsTransparent(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMaterial(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMultiPath(self, *args: Any, **kwargs: Any) -> Any: ...
    def setToken(self, *args: Any, **kwargs: Any) -> Any: ...
    def setView(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C488BD0>
    def token(self, *args: Any, **kwargs: Any) -> Any: ...
    def view(self, *args: Any, **kwargs: Any) -> Any: ...

class MDrawRequestQueue(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def add(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def isEmpty(self, *args: Any, **kwargs: Any) -> Any: ...
    def remove(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48A680>

def MDrawRequestQueue_className(*args: Any, **kwargs: Any) -> Any: ...
def MDrawRequest_className(*args: Any, **kwargs: Any) -> Any: ...
class MDrawTraversal(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def enableFiltering(self, *args: Any, **kwargs: Any) -> Any: ...
    def filterNode(self, *args: Any, **kwargs: Any) -> Any: ...
    def filteringEnabled(self, *args: Any, **kwargs: Any) -> Any: ...
    def frustumValid(self, *args: Any, **kwargs: Any) -> Any: ...
    def itemHasStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def itemPath(self, *args: Any, **kwargs: Any) -> Any: ...
    kActiveItem: int = 0
    kTemplateItem: int = 1
    def leafLevelCulling(self, *args: Any, **kwargs: Any) -> Any: ...
    def numberOfItems(self, *args: Any, **kwargs: Any) -> Any: ...
    def setFrustum(self, *args: Any, **kwargs: Any) -> Any: ...
    def setLeafLevelCulling(self, *args: Any, **kwargs: Any) -> Any: ...
    def setOrthoFrustum(self, *args: Any, **kwargs: Any) -> Any: ...
    def setPerspFrustum(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48A900>
    def traverse(self, *args: Any, **kwargs: Any) -> Any: ...

class MEvent(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    controlKey: int = 4
    def getPosition(self, *args: Any, **kwargs: Any) -> Any: ...
    def getWindowPosition(self, *args: Any, **kwargs: Any) -> Any: ...
    def isModifierControl(self, *args: Any, **kwargs: Any) -> Any: ...
    def isModifierKeyRelease(self, *args: Any, **kwargs: Any) -> Any: ...
    def isModifierLeftMouseButton(self, *args: Any, **kwargs: Any) -> Any: ...
    def isModifierMiddleMouseButton(self, *args: Any, **kwargs: Any) -> Any: ...
    def isModifierNone(self, *args: Any, **kwargs: Any) -> Any: ...
    def isModifierShift(self, *args: Any, **kwargs: Any) -> Any: ...
    kLeftMouse: int = 64
    kMiddleMouse: int = 128
    def modifiers(self, *args: Any, **kwargs: Any) -> Any: ...
    def mouseButton(self, *args: Any, **kwargs: Any) -> Any: ...
    def setModifiers(self, *args: Any, **kwargs: Any) -> Any: ...
    def setPosition(self, *args: Any, **kwargs: Any) -> Any: ...
    shiftKey: int = 1
    thisown: property = <property object at 0x000001840C48AE00>

def MEvent_className(*args: Any, **kwargs: Any) -> Any: ...
class MExternalDropCallback(object):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def externalDropCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    kMayaDefault: int = 0
    kNoMayaDefaultAndAccept: int = 1
    kNoMayaDefaultAndNoAccept: int = 2
    def removeCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49DC70>

def MExternalDropCallback_addCallback(*args: Any, **kwargs: Any) -> Any: ...
def MExternalDropCallback_removeCallback(*args: Any, **kwargs: Any) -> Any: ...
class MExternalDropData(object):
    """
    """
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def color(self, *args: Any, **kwargs: Any) -> Any: ...
    def dataSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def formats(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasFormat(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasHtml(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasImage(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasText(self, *args: Any, **kwargs: Any) -> Any: ...
    def hasUrls(self, *args: Any, **kwargs: Any) -> Any: ...
    def html(self, *args: Any, **kwargs: Any) -> Any: ...
    def image(self, *args: Any, **kwargs: Any) -> Any: ...
    kAltModifier: int = 134217728
    kControlModifier: int = 67108864
    kLeftButton: int = 1
    kMidButton: int = 4
    kMiddleButton: int = 4
    kNoModifier: int = 0
    kRightButton: int = 2
    kShiftModifier: int = 33554432
    def keyboardModifiers(self, *args: Any, **kwargs: Any) -> Any: ...
    def mouseButtons(self, *args: Any, **kwargs: Any) -> Any: ...
    def text(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48B360>
    def urls(self, *args: Any, **kwargs: Any) -> Any: ...

class MFeedbackLine(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def clear(self, *args: Any, **kwargs: Any) -> Any: ...
    def setFormat(self, *args: Any, **kwargs: Any) -> Any: ...
    def setShowFeedback(self, *args: Any, **kwargs: Any) -> Any: ...
    def setTitle(self, *args: Any, **kwargs: Any) -> Any: ...
    def setValue(self, *args: Any, **kwargs: Any) -> Any: ...
    def showFeedback(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48B900>

def MFeedbackLine_className(*args: Any, **kwargs: Any) -> Any: ...
def MFeedbackLine_clear(*args: Any, **kwargs: Any) -> Any: ...
def MFeedbackLine_setFormat(*args: Any, **kwargs: Any) -> Any: ...
def MFeedbackLine_setShowFeedback(*args: Any, **kwargs: Any) -> Any: ...
def MFeedbackLine_setTitle(*args: Any, **kwargs: Any) -> Any: ...
def MFeedbackLine_setValue(*args: Any, **kwargs: Any) -> Any: ...
def MFeedbackLine_showFeedback(*args: Any, **kwargs: Any) -> Any: ...
class MFnCircleSweepManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def angleIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def axisIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def centerIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToAnglePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def endCircleIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def endPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def setAngle(self, *args: Any, **kwargs: Any) -> Any: ...
    def setCenterPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawAsArc(self, *args: Any, **kwargs: Any) -> Any: ...
    def setEndPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def setNormal(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRadius(self, *args: Any, **kwargs: Any) -> Any: ...
    def setStartPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def startCircleIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def startPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48F2C0>

def MFnCircleSweepManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnCurveSegmentManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToCurvePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToEndParamPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToStartParamPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def curveIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def endParamIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def endParameter(self, *args: Any, **kwargs: Any) -> Any: ...
    def setEndParameter(self, *args: Any, **kwargs: Any) -> Any: ...
    def setStartParameter(self, *args: Any, **kwargs: Any) -> Any: ...
    def startParamIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def startParameter(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48F900>

def MFnCurveSegmentManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnDirectionManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToDirectionPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def directionIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def endPointIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDirection(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawStart(self, *args: Any, **kwargs: Any) -> Any: ...
    def setNormalizeDirection(self, *args: Any, **kwargs: Any) -> Any: ...
    def setStartPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def startPointIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48FDB0>

def MFnDirectionManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnDiscManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def angleIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def axisIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def centerIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToAnglePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def setAngle(self, *args: Any, **kwargs: Any) -> Any: ...
    def setCenterPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def setNormal(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRadius(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C490220>

def MFnDiscManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnDistanceManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToDistancePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def currentPointIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def directionIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def distanceIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def isDrawLineOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def isDrawStartOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def scalingFactor(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDirection(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawLine(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawStart(self, *args: Any, **kwargs: Any) -> Any: ...
    def setScalingFactor(self, *args: Any, **kwargs: Any) -> Any: ...
    def setStartPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def startPointIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C4905E0>

def MFnDistanceManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnFreePointTriadManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToPointPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def isDrawAxesOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def isKeyframeAllOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def isSnapModeOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def pointIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDirection(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawArrowHead(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawAxes(self, *args: Any, **kwargs: Any) -> Any: ...
    def setGlobalTriadPlane(self, *args: Any, **kwargs: Any) -> Any: ...
    def setKeyframeAll(self, *args: Any, **kwargs: Any) -> Any: ...
    def setPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSnapMode(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C490B80>

def MFnFreePointTriadManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnManip3D(MFnTransform):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def deleteManipulator(self, *args: Any, **kwargs: Any) -> Any: ...
    def drawPlaneHandles(self, *args: Any, **kwargs: Any) -> Any: ...
    def globalSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def handleSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def isOptimizePlaybackOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def isVisible(self, *args: Any, **kwargs: Any) -> Any: ...
    def lineSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def manipScale(self, *args: Any, **kwargs: Any) -> Any: ...
    def rotateXYZValue(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawPlaneHandles(self, *args: Any, **kwargs: Any) -> Any: ...
    def setGlobalSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def setHandleSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def setLineSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def setManipScale(self, *args: Any, **kwargs: Any) -> Any: ...
    def setOptimizePlayback(self, *args: Any, **kwargs: Any) -> Any: ...
    def setVisible(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C48BC20>

def MFnManip3D_className(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_deleteManipulator(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_drawPlaneHandles(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_globalSize(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_handleSize(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_lineSize(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_setDrawPlaneHandles(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_setGlobalSize(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_setHandleSize(*args: Any, **kwargs: Any) -> Any: ...
def MFnManip3D_setLineSize(*args: Any, **kwargs: Any) -> Any: ...
class MFnPointOnCurveManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToCurvePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToParamPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def curveIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def curvePoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def isDrawCurveOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def paramIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def parameter(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawCurve(self, *args: Any, **kwargs: Any) -> Any: ...
    def setParameter(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C491130>

def MFnPointOnCurveManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnPointOnSurfaceManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToParamPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToSurfacePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def getParameters(self, *args: Any, **kwargs: Any) -> Any: ...
    def isDrawSurfaceOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def paramIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawArrows(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDrawSurface(self, *args: Any, **kwargs: Any) -> Any: ...
    def setParameters(self, *args: Any, **kwargs: Any) -> Any: ...
    def surfaceIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C491590>

def MFnPointOnSurfaceManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnRotateManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToRotationCenterPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToRotationPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayWithNode(self, *args: Any, **kwargs: Any) -> Any: ...
    def isSnapModeOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def rotateMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def rotationCenterIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def rotationIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def setInitialRotation(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRotateMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def setRotationCenter(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSnapIncrement(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSnapMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def snapIncrement(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C4919F0>

def MFnRotateManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnScaleManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToScaleCenterPlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToScalePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def displayWithNode(self, *args: Any, **kwargs: Any) -> Any: ...
    def getOrientation(self, *args: Any, **kwargs: Any) -> Any: ...
    def getOrientationMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def isSnapModeOn(self, *args: Any, **kwargs: Any) -> Any: ...
    def scaleCenterIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def scaleIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def setInitialScale(self, *args: Any, **kwargs: Any) -> Any: ...
    def setOrientation(self, *args: Any, **kwargs: Any) -> Any: ...
    def setOrientationMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSnapIncrement(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSnapMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def snapIncrement(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C491F90>

def MFnScaleManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnStateManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToStatePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def maxStates(self, *args: Any, **kwargs: Any) -> Any: ...
    def positionIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def setInitialState(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMaxStates(self, *args: Any, **kwargs: Any) -> Any: ...
    def state(self, *args: Any, **kwargs: Any) -> Any: ...
    def stateIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C4945E0>

def MFnStateManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnToggleManip(MFnManip3D):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def connectToTogglePlug(self, *args: Any, **kwargs: Any) -> Any: ...
    def create(self, *args: Any, **kwargs: Any) -> Any: ...
    def direction(self, *args: Any, **kwargs: Any) -> Any: ...
    def directionIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def length(self, *args: Any, **kwargs: Any) -> Any: ...
    def lengthIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDirection(self, *args: Any, **kwargs: Any) -> Any: ...
    def setLength(self, *args: Any, **kwargs: Any) -> Any: ...
    def setStartPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def setToggle(self, *args: Any, **kwargs: Any) -> Any: ...
    def startPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def startPointIndex(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C4949A0>
    def toggle(self, *args: Any, **kwargs: Any) -> Any: ...
    def toggleIndex(self, *args: Any, **kwargs: Any) -> Any: ...

def MFnToggleManip_className(*args: Any, **kwargs: Any) -> Any: ...
class MFnToolContext(MFnBase):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C494F40>
    def title(self, *args: Any, **kwargs: Any) -> Any: ...

def MFnToolContext_className(*args: Any, **kwargs: Any) -> Any: ...
class MGraphEditorInfo(MPanelCanvasInfo):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def getAnimCurveNodes(self, *args: Any, **kwargs: Any) -> Any: ...
    def isNormalizedViewportMode(self, *args: Any, **kwargs: Any) -> Any: ...
    def isStackedViewportMode(self, *args: Any, **kwargs: Any) -> Any: ...
    kAnimCurveAllKnown: int = 3
    kAnimCurveHighlighted: int = 1
    kAnimCurveOutlinerOnly: int = 0
    kAnimCurveSelected: int = 2
    thisown: property = <property object at 0x000001840C4954A0>

def MGraphEditorInfo_className(*args: Any, **kwargs: Any) -> Any: ...
class MHWShaderSwatchGenerator(MSwatchRenderBase):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def createObj(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSwatchBackgroundColor(self, *args: Any, **kwargs: Any) -> Any: ...
    def initialize(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C495680>

def MHWShaderSwatchGenerator_createObj(*args: Any, **kwargs: Any) -> Any: ...
def MHWShaderSwatchGenerator_getSwatchBackgroundColor(*args: Any, **kwargs: Any) -> Any: ...
def MHWShaderSwatchGenerator_initialize(*args: Any, **kwargs: Any) -> Any: ...
class MManipData(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def asBool(self, *args: Any, **kwargs: Any) -> Any: ...
    def asDouble(self, *args: Any, **kwargs: Any) -> Any: ...
    def asFloat(self, *args: Any, **kwargs: Any) -> Any: ...
    def asLong(self, *args: Any, **kwargs: Any) -> Any: ...
    def asMObject(self, *args: Any, **kwargs: Any) -> Any: ...
    def asShort(self, *args: Any, **kwargs: Any) -> Any: ...
    def asUnsigned(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def isSimple(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C495860>

def MManipData_className(*args: Any, **kwargs: Any) -> Any: ...
class MMaterial(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def applyTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def defaultMaterial(self, *args: Any, **kwargs: Any) -> Any: ...
    def evaluateDiffuse(self, *args: Any, **kwargs: Any) -> Any: ...
    def evaluateEmission(self, *args: Any, **kwargs: Any) -> Any: ...
    def evaluateMaterial(self, *args: Any, **kwargs: Any) -> Any: ...
    def evaluateShininess(self, *args: Any, **kwargs: Any) -> Any: ...
    def evaluateSpecular(self, *args: Any, **kwargs: Any) -> Any: ...
    def evaluateTexture(self, *args: Any, **kwargs: Any) -> Any: ...
    def evaluateTextureTransformation(self, *args: Any, **kwargs: Any) -> Any: ...
    def getDiffuse(self, *args: Any, **kwargs: Any) -> Any: ...
    def getEmission(self, *args: Any, **kwargs: Any) -> Any: ...
    def getHasTransparency(self, *args: Any, **kwargs: Any) -> Any: ...
    def getHwShaderNode(self, *args: Any, **kwargs: Any) -> Any: ...
    def getShininess(self, *args: Any, **kwargs: Any) -> Any: ...
    def getSpecular(self, *args: Any, **kwargs: Any) -> Any: ...
    def getTextureTransformation(self, *args: Any, **kwargs: Any) -> Any: ...
    kAmbientColor: int = 2
    kBumpMap: int = 4
    kColor: int = 0
    kCosinePower: int = 10
    kDiffuse: int = 5
    kEccentricity: int = 11
    kHighlightSize: int = 8
    kIncandescence: int = 3
    kReflectedColor: int = 15
    kReflectivity: int = 14
    kRoughness: int = 7
    kSpecularColor: int = 13
    kSpecularRollOff: int = 12
    kTransluscence: int = 6
    kTransparency: int = 1
    kWhiteness: int = 9
    def materialIsTextured(self, *args: Any, **kwargs: Any) -> Any: ...
    def setMaterial(self, *args: Any, **kwargs: Any) -> Any: ...
    def shadingEngine(self, *args: Any, **kwargs: Any) -> Any: ...
    def textureImage(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C495C70>

class MMaterialArray(object):
    """
    """
    def __getitem__(self, *args: Any, **kwargs: Any) -> Any: ...
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def append(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def clear(self, *args: Any, **kwargs: Any) -> Any: ...
    def copy(self, *args: Any, **kwargs: Any) -> Any: ...
    def insert(self, *args: Any, **kwargs: Any) -> Any: ...
    def length(self, *args: Any, **kwargs: Any) -> Any: ...
    def remove(self, *args: Any, **kwargs: Any) -> Any: ...
    def set(self, *args: Any, **kwargs: Any) -> Any: ...
    def setLength(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSizeIncrement(self, *args: Any, **kwargs: Any) -> Any: ...
    def sizeIncrement(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49B400>

def MMaterialArray_className(*args: Any, **kwargs: Any) -> Any: ...
def MMaterial_className(*args: Any, **kwargs: Any) -> Any: ...
def MMaterial_defaultMaterial(*args: Any, **kwargs: Any) -> Any: ...
class MObjectListFilter(object):
    """
    """
    def UIname(self, *args: Any, **kwargs: Any) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def dependentOnSceneUpdates(self, *args: Any, **kwargs: Any) -> Any: ...
    def deregisterFilter(self, *args: Any, **kwargs: Any) -> Any: ...
    def filterType(self, *args: Any, **kwargs: Any) -> Any: ...
    def getList(self, *args: Any, **kwargs: Any) -> Any: ...
    kAddRemoveObjects: int = 1
    kExclusionList: int = 1
    kInclusionList: int = 0
    kNone: int = 0
    kNumberOfFilterTypes: int = 2
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    def registerFilter(self, *args: Any, **kwargs: Any) -> Any: ...
    def requireListUpdate(self, *args: Any, **kwargs: Any) -> Any: ...
    def setFilterType(self, *args: Any, **kwargs: Any) -> Any: ...
    def setUIName(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49D810>

def MObjectListFilter_className(*args: Any, **kwargs: Any) -> Any: ...
def MObjectListFilter_deregisterFilter(*args: Any, **kwargs: Any) -> Any: ...
def MObjectListFilter_registerFilter(*args: Any, **kwargs: Any) -> Any: ...
class MPaintMessage(MMessage):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addVertexColorCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49D680>

def MPaintMessage_addVertexColorCallback(*args: Any, **kwargs: Any) -> Any: ...
def MPaintMessage_className(*args: Any, **kwargs: Any) -> Any: ...
class MPanelCanvasInfo(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def getViewportBounds(self, *args: Any, **kwargs: Any) -> Any: ...
    def getViewportSize(self, *args: Any, **kwargs: Any) -> Any: ...
    def name(self, *args: Any, **kwargs: Any) -> Any: ...
    def reset(self, *args: Any, **kwargs: Any) -> Any: ...
    def setViewportBounds(self, *args: Any, **kwargs: Any) -> Any: ...
    def supportsUIDrawing(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C495180>

def MPanelCanvasInfo_className(*args: Any, **kwargs: Any) -> Any: ...
class MProgressWindow(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def advanceProgress(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def endProgress(self, *args: Any, **kwargs: Any) -> Any: ...
    def isCancelled(self, *args: Any, **kwargs: Any) -> Any: ...
    def isInterruptable(self, *args: Any, **kwargs: Any) -> Any: ...
    def progress(self, *args: Any, **kwargs: Any) -> Any: ...
    def progressMax(self, *args: Any, **kwargs: Any) -> Any: ...
    def progressMin(self, *args: Any, **kwargs: Any) -> Any: ...
    def progressStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def reserve(self, *args: Any, **kwargs: Any) -> Any: ...
    def setInterruptable(self, *args: Any, **kwargs: Any) -> Any: ...
    def setProgress(self, *args: Any, **kwargs: Any) -> Any: ...
    def setProgressMax(self, *args: Any, **kwargs: Any) -> Any: ...
    def setProgressMin(self, *args: Any, **kwargs: Any) -> Any: ...
    def setProgressRange(self, *args: Any, **kwargs: Any) -> Any: ...
    def setProgressStatus(self, *args: Any, **kwargs: Any) -> Any: ...
    def setTitle(self, *args: Any, **kwargs: Any) -> Any: ...
    def startProgress(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49B900>
    def title(self, *args: Any, **kwargs: Any) -> Any: ...

def MProgressWindow_advanceProgress(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_className(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_endProgress(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_isCancelled(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_isInterruptable(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_progress(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_progressMax(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_progressMin(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_progressStatus(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_reserve(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_setInterruptable(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_setProgress(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_setProgressMax(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_setProgressMin(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_setProgressRange(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_setProgressStatus(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_setTitle(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_startProgress(*args: Any, **kwargs: Any) -> Any: ...
def MProgressWindow_title(*args: Any, **kwargs: Any) -> Any: ...
class MQtUtil(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addWidgetToMayaLayout(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def createCursor(self, *args: Any, **kwargs: Any) -> Any: ...
    def createIcon(self, *args: Any, **kwargs: Any) -> Any: ...
    def createPixmap(self, *args: Any, **kwargs: Any) -> Any: ...
    def deregisterUIType(self, *args: Any, **kwargs: Any) -> Any: ...
    def dpiScale(self, *args: Any, **kwargs: Any) -> Any: ...
    def findControl(self, *args: Any, **kwargs: Any) -> Any: ...
    def findLayout(self, *args: Any, **kwargs: Any) -> Any: ...
    def findMenuItem(self, *args: Any, **kwargs: Any) -> Any: ...
    def findWindow(self, *args: Any, **kwargs: Any) -> Any: ...
    def fullName(self, *args: Any, **kwargs: Any) -> Any: ...
    def getCurrentParent(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLayoutChildren(self, *args: Any, **kwargs: Any) -> Any: ...
    def getParent(self, *args: Any, **kwargs: Any) -> Any: ...
    def mainWindow(self, *args: Any, **kwargs: Any) -> Any: ...
    def nativeWindow(self, *args: Any, **kwargs: Any) -> Any: ...
    def newClocaleValidator(self, *args: Any, **kwargs: Any) -> Any: ...
    def registerUIType(self, *args: Any, **kwargs: Any) -> Any: ...
    def resourceGLContext(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49BF90>
    def toMString(self, *args: Any, **kwargs: Any) -> Any: ...
    def toQString(self, *args: Any, **kwargs: Any) -> Any: ...

def MQtUtil_addWidgetToMayaLayout(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_className(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_createCursor(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_createIcon(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_createPixmap(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_deregisterUIType(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_dpiScale(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_findControl(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_findLayout(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_findMenuItem(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_findWindow(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_fullName(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_getCurrentParent(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_getLayoutChildren(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_getParent(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_mainWindow(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_nativeWindow(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_newClocaleValidator(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_registerUIType(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_resourceGLContext(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_toMString(*args: Any, **kwargs: Any) -> Any: ...
def MQtUtil_toQString(*args: Any, **kwargs: Any) -> Any: ...
class MSelectInfo(MDrawInfo):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def addSelection(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def getAlignmentMatrix(self, *args: Any, **kwargs: Any) -> Any: ...
    def getLocalRay(self, *args: Any, **kwargs: Any) -> Any: ...
    def highestPriority(self, *args: Any, **kwargs: Any) -> Any: ...
    def isRay(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectClosest(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectForHilite(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectOnHilitedOnly(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectPath(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectRect(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectable(self, *args: Any, **kwargs: Any) -> Any: ...
    def selectableComponent(self, *args: Any, **kwargs: Any) -> Any: ...
    def setHighestPriority(self, *args: Any, **kwargs: Any) -> Any: ...
    def setSnapPoint(self, *args: Any, **kwargs: Any) -> Any: ...
    def singleSelection(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49C7C0>
    def view(self, *args: Any, **kwargs: Any) -> Any: ...

def MSelectInfo_className(*args: Any, **kwargs: Any) -> Any: ...
class MTextureEditorDrawInfo(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def drawingFunction(self, *args: Any, **kwargs: Any) -> Any: ...
    kDrawEdgeForSelect: int = 4
    kDrawEverything: int = 2
    kDrawFacetForSelect: int = 5
    kDrawFunctionFirst: int = 1
    kDrawFunctionLast: int = 6
    kDrawUVForSelect: int = 6
    kDrawVertexForSelect: int = 3
    kDrawWireframe: int = 1
    def setDrawingFunction(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49CE00>

def MTextureEditorDrawInfo_className(*args: Any, **kwargs: Any) -> Any: ...
class MToolsInfo(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    def isDirty(self, *args: Any, **kwargs: Any) -> Any: ...
    def resetDirtyFlag(self, *args: Any, **kwargs: Any) -> Any: ...
    def setDirtyFlag(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49D040>

def MToolsInfo_className(*args: Any, **kwargs: Any) -> Any: ...
def MToolsInfo_isDirty(*args: Any, **kwargs: Any) -> Any: ...
def MToolsInfo_resetDirtyFlag(*args: Any, **kwargs: Any) -> Any: ...
def MToolsInfo_setDirtyFlag(*args: Any, **kwargs: Any) -> Any: ...
class MUiMessage(MMessage):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def add3dViewDestroyMsgCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def add3dViewPostMultipleDrawPassMsgCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def add3dViewPostRenderMsgCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def add3dViewPreMultipleDrawPassMsgCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def add3dViewPreRenderMsgCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def add3dViewRenderOverrideChangedCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def add3dViewRendererChangedCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def addCameraChangedCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def addUiDeletedCallback(self, *args: Any, **kwargs: Any) -> Any: ...
    def className(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C49D270>

def MUiMessage_add3dViewDestroyMsgCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_add3dViewPostMultipleDrawPassMsgCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_add3dViewPostRenderMsgCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_add3dViewPreMultipleDrawPassMsgCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_add3dViewPreRenderMsgCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_add3dViewRenderOverrideChangedCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_add3dViewRendererChangedCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_addCameraChangedCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_addUiDeletedCallback(*args: Any, **kwargs: Any) -> Any: ...
def MUiMessage_className(*args: Any, **kwargs: Any) -> Any: ...
class boolPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C481F90>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def boolPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class charPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C481540>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def charPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class doublePtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C481D60>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def doublePtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class floatPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C481B30>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def floatPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class intPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C445130>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def intPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class shortPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C481900>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def shortPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class uCharPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C483450>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def uCharPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
class uIntPtr(object):
    """
    """
    def __init__(self, *args) -> Any:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, *args: Any, **kwargs: Any) -> Any: ...
    def assign(self, *args: Any, **kwargs: Any) -> Any: ...
    def cast(self, *args: Any, **kwargs: Any) -> Any: ...
    def frompointer(self, *args: Any, **kwargs: Any) -> Any: ...
    thisown: property = <property object at 0x000001840C483220>
    def value(self, *args: Any, **kwargs: Any) -> Any: ...

def uIntPtr_frompointer(*args: Any, **kwargs: Any) -> Any: ...
