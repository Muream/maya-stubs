from __future__ import annotations

from typing import *


Unknown = Any

_T = TypeVar("_T")

Queryable = Union[bool, _T]
Multiuse = Union[_T, List[_T]]
Range = Union[Tuple[_T], Tuple[_T, _T]]
NullableRange = Range[Optional[_T]]

def bakeDeformer(*, bakeRangeOfMotion: bool = ..., colorizeSkeleton: bool = ..., customRangeOfMotion: NullableRange[float] = ..., dstMeshName: str = ..., dstSkeletonName: str = ..., hierarchy: bool = ..., influences: List[str] = ..., maxInfluences: int = ..., pruneWeights: float = ..., smoothWeights: int = ..., srcMeshName: str = ..., srcSkeletonName: str = ...) -> str:
    """Given a rigged character, whose mesh shape is determined by a set of deformers, bakeDeformer calculates linear blend skin weights most closely approximating observed deformations. To do this, a test set of examples is generated by moving the rig through a range of motion. Results mesh and pose pairs are then used to solve a constrained optimization, solving for skinning weights. bakeDeformer automatically binds and applies resulting weights to the destination geometry. If the source and destination mesh/skeleton are identical, the command will replace the original deformations with a skinCluster and computed weights. See the below examples for sample usage.bake, skinning, deformer
    Args:
        bakeRangeOfMotion (bool?): When this flag is specified the command will generate a series of poses, one per frame, by rotating each influence 45 degrees.  
                This is useful for generating a set of key poses that can be modified to adjust the range of motion. (see the -customRangeOfMotion flag for details)  
                The first pose generated will be the current/rest pose and the total number of poses generated will be returned.  
                Properties: create
        colorizeSkeleton (bool?): The new skin cluster created will have its skeleton colorized. Must be used with the -srcSkeletonName and -dstSkeletonName flags.  
                Properties: create
        customRangeOfMotion (NullableRange[float]?): When this flag is specified with the frames for the range of motion to be used, the tool will step through  
                each frame as a separate pose. Otherwise the tool will use the existing range of motion in the tool  
                that rotates each influence 45 degrees.  
              
                    Usage examples:  
                  
                 -rom "10. 20" means all frames in the range from 10 to 20, inclusive, in the current time unit.   
                 Omitting one end of a range means using either end of the animation range (or both), as in the following examples:   
                 -rom "10. " means all frames from time 10 (in the current time unit) onwards to the maximum time in the animation range (on the timeline).   
                 -rom ":10" means all frames from the minimum time on the animation range (on the timeline) up to (and including) time 10 (in the current time unit).   
                 -rom ":" is a short form to specify all frames, from minimum to maximum time on the current animation range.   
              
              
                When using this flag, some of the joints in the specified range of motion may not have changed sufficiently.  
                To improve bakeDeformer results or avoid algorithm errors, the command will return a list of influences that do not move enough in the specified range of motion.  
                To detect these joints, the local transformation of each joint is compared between subsequent frames.  
                We consider that a joint has sufficiently changed if any of the below criteria are met:  
                  
                There is a rotation of at least 5 degrees, as determined by the shortest rotation between transforms.  
                There is a translation of 1% or greater of the size of the largest bounding box containing all joints for each frame.  
                There is a scaling change of at least 1%. This percentage represents the smallest scaling value over the largest scaling value (in absolute value).  
              
              
                    If a joint has not met any of the criteria, it will be added to the warning of joints that have not moved enough.  
                  
              
              
                The custom range of motion should be considered experimental.  
                Properties: create
        dstMeshName (str?): The destination mesh name.  
                Properties: create
        dstSkeletonName (str?): The destination skeleton name.  
                Properties: create
        hierarchy (bool?): All children of the passed joints that are used in the influences flag are used.  
                Properties: create
        influences (List[str]?): A list of joints that are used as the influences to determine new weights.  
                Properties: create
        maxInfluences (int?): The maximum number of influences per vertex.  
                Properties: create
        pruneWeights (float?): On the newly created skin cluster, set any weight below the given the value to zero (post-processing).  
                This will call the skinPercent command as follows: "skinPercent -pruneWeights [value] [skinClusterName] [dstMeshName]"  
                where [value] is the value passed into this flag, [skinClusterName] is the name of the new skinCluster node created  
                after running this tool, and [dstMeshName] is the mesh provided in the -dstMeshName flag.  
                Properties: create
        smoothWeights (int?): The number of smoothing iterations for smoothing weights (post-processing). This also renormalizes the remaining the weights.  
                Properties: create
        srcMeshName (str?): The source mesh name.  
                Properties: create
        srcSkeletonName (str?): The source skeleton name.  
                Properties: create

    Returns:
        str: BakeDeformer name

    Example:
    """

