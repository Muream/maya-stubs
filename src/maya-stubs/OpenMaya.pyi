from __future__ import annotations

from typing import *

Unknown = Any

MAYA_API_VERSION: int = 20260000
MAYA_APP_VERSION: int = 2026
MAYA_CUSTOM_VERSION: int = 20260000
MAYA_CUSTOM_VERSION_CLIENT: str = ""
MAYA_CUSTOM_VERSION_MAJOR: int = 0
MAYA_CUSTOM_VERSION_MINOR: int = 0

class MAddRemoveAttrEdit(MEdit):
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attributeName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAttributeAdded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def node(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nodeName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MAngle:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asAngMinutes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asAngSeconds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDegrees(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asRadians(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUnits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def internalToUI(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def internalUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kAngMinutes: int = 3
    kAngSeconds: int = 4
    kDegrees: int = 2
    kInvalid: int = 0
    kLast: int = 5
    kRadians: int = 1
    @staticmethod
    def setInternalUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUIUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUnit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def uiToInternal(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def uiUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def unit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MArgDatabase(MArgParser):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCommandArgument(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFlagArgument(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getObjects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MArgList:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addArg(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDoubleArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asIntArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asStringArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asVector(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kInvalidArgIndex: int = 4294967295
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MArgParser:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandArgumentBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandArgumentDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandArgumentInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandArgumentMAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandArgumentMDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandArgumentMTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandArgumentString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagArgumentBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagArgumentDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagArgumentInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagArgumentMAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagArgumentMDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagArgumentMTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flagArgumentString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFlagArgumentList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFlagArgumentPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getObjects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFlagSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isQuery(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numberOfFlagUses(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numberOfFlagsUsed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MArrayDataBuilder:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElementArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addLast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addLastArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def elementCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def growArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGrowSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MArrayDataHandle:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def builder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def elementCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def elementIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inputArrayValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inputValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def jumpToArrayElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def jumpToElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def outputArrayValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def outputValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAllClean(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setClean(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MAttributeIndex:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLower(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUpper(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasLowerBound(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasRange(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasUpperBound(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasValidRange(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isBounded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kFloat: int = 1
    kInteger: int = 0
    def setLower(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUpper(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MAttributePattern:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addRootAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def attrPattern(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def attrPatternCount(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findPattern(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeRootAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rootAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rootAttrCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MAttributePatternArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MAttributeSpec:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def dimensions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDimensions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MAttributeSpecArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MBoundingBox:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def center(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def contains(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def expand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def height(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def max(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def min(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformUsing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def width(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MCacheConfigRuleRegistry:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registerFilter(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registeringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setRegisteringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    @staticmethod
    def unregisterFilter(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MCacheFormatDescription:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def addChannel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDescriptionInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChannelDataType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChannelEndTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChannelInterpretation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChannelName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChannelSamplingRate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChannelSamplingType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChannelStartTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDescriptionInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDistribution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumChannels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getStartAndEndTimes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTimePerFrame(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kDouble: int = 1
    kDoubleArray: int = 2
    kDoubleVectorArray: int = 3
    kFloatArray: int = 5
    kFloatVectorArray: int = 6
    kInt32Array: int = 4
    kIrregular: int = 1
    kNoFile: int = 0
    kOneFile: int = 1
    kOneFilePerFrame: int = 2
    kRegular: int = 0
    kUnknownData: int = 0
    def setDistribution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTimePerFrame(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MCacheSchema:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def add(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attributes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MCacheSchemaAttributesIterator:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def advance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def done(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MCacheSchemaAttributesIteratorSentinel:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MCacheSchemaAttributesRange:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def begin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def end(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MCallbackIdArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MCameraMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addBeginManipulationCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addEndManipulationCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MCameraSetMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCameraChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCameraLayerCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MClosedTimeInterval:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def empty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    max: MTime
    min: MTime
    thisown: bool

class MCloudWebService:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getLoginUserName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getOAuth2AccessToken(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getOxygenID(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUserEmail(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def initializeWebServices(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isLoggedIn(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isLoginValid(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def login(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def logout(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MColor:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __call__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __div__(self, *args: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __idiv__(self, *args: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __itruediv__(self, *args: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __neg__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __truediv__(self, *args: Unknown) -> Any: ...
    a: float
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    b: float
    g: float
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kCMY: int = 2
    kCMYK: int = 3
    kHSV: int = 1
    def kOpaqueBlack(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kRGB: int = 0
    r: float
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MColorArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MCommandMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCommandCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCommandOutputCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCommandOutputFilterCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addProcCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kError: int = 4
    kResult: int = 5
    kStackTrace: int = 6
    kWarning: int = 3
    thisown: bool

class MCommandResult:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getResult(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kDouble: int = 5
    kDoubleArray: int = 6
    kInt: int = 1
    kInt64: int = 2
    kInt64Array: int = 4
    kIntArray: int = 3
    kInvalid: int = 0
    kMatrix: int = 11
    kMatrixArray: int = 12
    kString: int = 7
    kStringArray: int = 8
    kVector: int = 9
    kVectorArray: int = 10
    def resultType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def stringResult(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MComputation:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginComputation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def endComputation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isInterruptRequested(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def progress(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def progressMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def progressMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setProgress(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setProgressRange(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setProgressStatus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MConditionMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addConditionCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getConditionNames(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getConditionState(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MConnectDisconnectAttrEdit(MEdit):
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def dstPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dstPlugName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isConnection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def srcPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def srcPlugName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MContainerMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addBoundAttrCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addPublishAttrCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MCurveAttribute:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createCurve(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createCurveAttr(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getValueAtPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getValuesAtPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pack(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sampleValueCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPositionAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setValueAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MDAGDrawOverrideInfo:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    fDisplayType: int
    fEnableShading: bool
    fEnableTexturing: bool
    fEnableVisible: bool
    fLOD: int
    fOverrideEnabled: bool
    fPlaybackVisible: bool
    kDisplayTypeNormal: int = 0
    kDisplayTypeReference: int = 1
    kDisplayTypeTemplate: int = 2
    kLODBoundingBox: int = 1
    kLODFull: int = 0
    thisown: bool

class MDGContext:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def current(*args: Unknown, **kwargs: Unknown) -> Any: ...
    fsNormal: MDGContext
    def getTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCurrent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeCurrent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MDGContextGuard:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MDGMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addConnectionCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addDelayedTimeChangeCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addDelayedTimeChangeRunupCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addForceUpdateCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeAddedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeChangeUuidCheckCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeRemovedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addPreConnectionCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addTimeChangeCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MDGModifier:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addExtensionAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandToExecute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteMetadata(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def disconnect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def linkExtensionAttributeToPlugin(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def newPlugValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueInt64(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueMAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueMDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueMTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newPlugValueString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pythonCommandToExecute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeExtensionAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeExtensionAttributeIfUnset(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def removeMultiInstance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renameAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renameNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMetadata(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNodeLockState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPlugLockState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def undoIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def unlinkExtensionAttributeFromPlugin(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...

class MDagMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addAllDagChangesCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addAllDagChangesDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addChildAddedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addChildAddedDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addChildRemovedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addChildRemovedDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addChildReorderedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addChildReorderedDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addDagCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addDagDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addInstanceAddedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addInstanceAddedDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addInstanceRemovedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addInstanceRemovedDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addMatrixModifiedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addParentAddedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addParentAddedDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addParentRemovedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addParentRemovedDagPathCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addWorldMatrixModifiedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kAll: int = 268435455
    kChildRemoved: int = 3
    kChildReordered: int = 4
    kInstanceAdded: int = 5
    kInstanceRemoved: int = 6
    kInvalidMsg: int = -1
    kLast: int = 7
    kRotateOrder: int = 134217728
    kRotateOrient: int = 117440512
    kRotateOrientX: int = 16777216
    kRotateOrientY: int = 33554432
    kRotateOrientZ: int = 67108864
    kRotatePivot: int = 229376
    kRotatePivotTrans: int = 14680064
    kRotatePivotX: int = 32768
    kRotatePivotY: int = 65536
    kRotatePivotZ: int = 131072
    kRotateTransX: int = 2097152
    kRotateTransY: int = 4194304
    kRotateTransZ: int = 8388608
    kRotateX: int = 64
    kRotateY: int = 128
    kRotateZ: int = 256
    kRotation: int = 448
    kScale: int = 7
    kScalePivot: int = 28672
    kScalePivotTrans: int = 1835008
    kScalePivotX: int = 4096
    kScalePivotY: int = 8192
    kScalePivotZ: int = 16384
    kScaleTransX: int = 262144
    kScaleTransY: int = 524288
    kScaleTransZ: int = 1048576
    kScaleZ: int = 4
    kShear: int = 56
    kShearXY: int = 8
    kShearXZ: int = 16
    kShearYZ: int = 32
    kTranslateX: int = 512
    kTranslateY: int = 1024
    kTranslateZ: int = 2048
    kTranslation: int = 3584
    thisown: bool

class MDagModifier(MDGModifier):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def createNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reparentNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MDagPath:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def apiType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def childCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def exclusiveMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def exclusiveMatrixInverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def extendToShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def extendToShapeDirectlyBelow(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def fullPathName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getAPathTo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAllPathsBelow(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getAllPathsTo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDisplayStatus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDrawOverrideInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasFn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inclusiveMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inclusiveMatrixInverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def instanceNumber(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isInstanced(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTemplated(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isVisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def matchLocalMatrix(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def matchTransform(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def node(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numberOfShapesDirectlyBelow(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def partialPathName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pathCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pop(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def push(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transform(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MDagPathArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MDataBlock:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def context(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inputArrayValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inputValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isClean(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def outputArrayValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def outputValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setClean(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setContext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MDataHandle:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def acceptedTypeIds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asAddr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble2(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble3(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble4(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFalloffFunction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat2(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat3(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloatMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloatVector(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asGenericBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asGenericChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asGenericDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asGenericFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asGenericInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asGenericInt64(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asGenericShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt2(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt3(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt64(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asLong(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asLong2(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asLong3(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMesh(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMeshTransformed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asNurbsCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asNurbsCurveTransformed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asNurbsSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asNurbsSurfaceTransformed(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def asPluginData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort2(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort3(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asSubdSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asSubdSurfaceTransformed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asVector(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyWritable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def data(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def datablock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometryTransformMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isGeneric(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNumeric(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numericType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set2Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set2Float(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set2Int(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set2Short(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set3Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set3Float(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set3Int(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set3Short(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set4Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setClean(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGenericBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGenericChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGenericDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGenericFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGenericInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGenericInt64(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGenericShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInt64(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMFloatMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMFloatVector(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMPxData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMVector(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MDistance:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asCentimeters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFeet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInches(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asKilometers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMeters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMiles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMillimeters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUnits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asYards(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def internalToUI(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def internalUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kCentimeters: int = 6
    kFeet: int = 2
    kInches: int = 1
    kInvalid: int = 0
    kKilometers: int = 7
    kLast: int = 9
    kMeters: int = 8
    kMiles: int = 4
    kMillimeters: int = 5
    kYards: int = 3
    @staticmethod
    def setInternalUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUIUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUnit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def uiToInternal(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def uiUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def unit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MDoubleArray:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __delitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __radd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __setitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MEdit:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def editType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasEditData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isApplied(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFailed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTopLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kAddRemoveAttrEdit: int = 3
    kConnectDisconnectEdit: int = 2
    kFcurveEdit: int = 5
    kNullEdit: int = 0
    kParentEdit: int = 4
    kSetAttrEdit: int = 1
    def matches(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setApplied(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFailed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MEulerRotation:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __neg__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def alternateSolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asQuaternion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asVector(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def bound(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def boundIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def closestCut(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def closestSolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def decompose(*args: Unknown, **kwargs: Unknown) -> Any: ...
    identity: MEulerRotation
    def incrementalRotateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def invertIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isZero(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kXYZ: int = 0
    kXZY: int = 3
    kYXZ: int = 4
    kYZX: int = 1
    kZXY: int = 2
    kZYX: int = 5
    order: int
    def reorder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reorderIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToAlternateSolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToClosestCut(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToClosestSolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    x: float
    y: float
    z: float

class MEvaluationManager:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def evaluationInExecution(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def evaluationManagerActive(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def graphConstructionActive(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MEvaluationNode:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def childCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def datablock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dependencyNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dirtyPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dirtyPlugExists(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iterator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def skipEvaluation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def skippingEvaluation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MEvaluationNodeIterator:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def plug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MEventMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addEventCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getEventNames(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFcurveEdit(MEdit):
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def fcurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fcurveName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MFileIO:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeExportFilename(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeExportUserFileTranslator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeImportFilename(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeImportUserFileTranslator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeOpenFilename(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeOpenUserFileTranslator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeReferenceFilename(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeReferenceUserFileTranslator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeSaveFilename(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def beforeSaveUserFileTranslator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def cleanReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentlyReadingFileVersion(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportAll(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportAnim(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportAnimFromReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportAsReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportSelected(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportSelectedAnim(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportSelectedAnimFromReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def exportType(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def fileCurrentlyLoading(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def fileType(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getErrorStatus(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFileTypes(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFiles(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getLastTempFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getReferenceConnectionsBroken(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getReferenceConnectionsMade(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getReferenceFileByNode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getReferenceNodes(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getReferences(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def importFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isImportingFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isNewingFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isOpeningFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isReadingFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isReferencingFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isSavingReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isWritingFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kExportTypeAll: int = 0
    kExportTypeAnim: int = 2
    kExportTypeAnimFromReference: int = 3
    kExportTypeAsReference: int = 4
    kExportTypeEdits: int = 5
    kExportTypePrefObjects: int = 6
    kExportTypeSelected: int = 1
    kForceDeleteNamespaceContent: int = 3
    kLoadAllReferences: int = 1
    kLoadDefault: int = 0
    kLoadNoReferences: int = 2
    kMergeNamespaceWithParentNamespace: int = 2
    kMergeNamespaceWithRootNamespace: int = 1
    kRemoveNamespaceIfEmpty: int = 0
    kVersion2008: int = 144
    kVersion2009: int = 147
    kVersion2010: int = 152
    kVersion2011: int = 156
    kVersion2012: int = 161
    kVersion2013: int = 167
    kVersion2014: int = 179
    kVersion2015: int = 184
    kVersion2016: int = 192
    kVersion2016R2: int = 198
    kVersion2017: int = 201
    kVersion2017Update3: int = 202
    kVersion2017Update4: int = 203
    kVersion2018: int = 210
    kVersion2018Update2: int = 211
    kVersion2018Update3: int = 212
    kVersion2018Update4: int = 213
    kVersion2019: int = 232
    kVersion2020: int = 254
    kVersion2022: int = 278
    kVersion2023: int = 304
    kVersion2024: int = 327
    kVersion2025: int = 350
    kVersion2026: int = 374
    kVersion4_0: int = 74
    kVersion4_5: int = 83
    kVersion5_0: int = 90
    kVersion6_0: int = 105
    kVersion6_5: int = 117
    kVersion7_0: int = 128
    kVersion8_0: int = 133
    kVersion8_5: int = 139
    @staticmethod
    def latestMayaFileVersion(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def loadReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def loadReferenceByNode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def mustRenameToSave(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def mustRenameToSaveMsg(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def newFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def open(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def reference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def resetError(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def save(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def saveAs(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def saveReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setCurrentFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setError(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setMustRenameToSave(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setMustRenameToSaveMsg(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def unloadReference(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def unloadReferenceByNode(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MFileObject:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def exists(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def expandedFullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def expandedPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getResolvedFullName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isAbsolutePath(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def ithFullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def ithPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kBaseName: int = 32
    kDirMap: int = 4
    kExact: int = 2
    kInputFile: int = 54
    kInputReference: int = 62
    kNone: int = 1
    kReferenceMappings: int = 8
    kRelative: int = 16
    kStrict: int = 6
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def overrideResolvedFullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def path(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pathCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rawFullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rawName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rawPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rawURI(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolveMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolvedFullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolvedName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolvedPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRawFullName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRawName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRawPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRawURI(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setResolveMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFloatArray:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __delitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __radd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __setitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFloatMatrix:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __call__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def adjoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def det3x3(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def det4x4(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def homogenize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    matrix: Any
    def setToIdentity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToProduct(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transpose(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

MFloatMatrix_kTol: float = 1e-05

class MFloatPoint:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __call__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __div__(self, *args: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __truediv__(self, *args: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cartesianize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def distanceTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def homogenize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def origin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rationalize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    w: float
    x: float
    y: float
    z: float

class MFloatPointArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

MFloatPoint_kTol: float = 1e-05

class MFloatVector:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __call__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __div__(self, *args: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __idiv__(self, *args: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __itruediv__(self, *args: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __neg__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __truediv__(self, *args: Unknown) -> Any: ...
    def __xor__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def angle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isParallel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normalize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def one(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    x: float
    def xAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def xNegAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    y: float
    def yAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def yNegAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    z: float
    def zAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zNegAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zero(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFloatVectorArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

MFloatVector_kTol: float = 1e-05

class MFn:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kACos: int = 1160
    kAISEnvFacade: int = 978
    kASin: int = 1162
    kATan: int = 1163
    kATan2: int = 1164
    kAbsolute: int = 1159
    kAddDoubleLinear: int = 5
    kAdskMaterial: int = 1068
    kAffect: int = 6
    kAimConstraint: int = 111
    kAimMatrix: int = 1140
    kAir: int = 257
    kAlignCurve: int = 41
    kAlignManip: int = 913
    kAlignSurface: int = 42
    kAmbientLight: int = 303
    kAnd: int = 1161
    kAngle: int = 270
    kAngleBetween: int = 21
    kAngleToDoubleNode: int = 1157
    kAnimBlend: int = 795
    kAnimBlendInOut: int = 796
    kAnimCurve: int = 7
    kAnimCurveTimeToAngular: int = 8
    kAnimCurveTimeToDistance: int = 9
    kAnimCurveTimeToTime: int = 10
    kAnimCurveTimeToUnitless: int = 11
    kAnimCurveUnitlessToAngular: int = 12
    kAnimCurveUnitlessToDistance: int = 13
    kAnimCurveUnitlessToTime: int = 14
    kAnimCurveUnitlessToUnitless: int = 15
    kAnimInContextNode: int = 1210
    kAnimLayer: int = 1021
    kAnisotropy: int = 623
    kAnnotation: int = 271
    kAnyGeometryVarGroup: int = 115
    kArcLength: int = 273
    kAreaLight: int = 305
    kArrayMapper: int = 528
    kArrowManip: int = 123
    kArubaTesselate: int = 1133
    kAssembly: int = 1082
    kAsset: int = 1019
    kAttachCurve: int = 43
    kAttachSurface: int = 44
    kAttribute: int = 565
    kAttribute2Double: int = 748
    kAttribute2Float: int = 749
    kAttribute2Int: int = 751
    kAttribute2Long: int = 751
    kAttribute2Short: int = 750
    kAttribute3Double: int = 752
    kAttribute3Float: int = 753
    kAttribute3Int: int = 755
    kAttribute3Long: int = 755
    kAttribute3Short: int = 754
    kAttribute4Double: int = 881
    kAudio: int = 22
    kAverage: int = 1165
    kAverageCurveManip: int = 149
    kAvgCurves: int = 45
    kAvgNurbsSurfacePoints: int = 47
    kAvgSurfacePoints: int = 46
    kAxesActionManip: int = 124
    kAxisFromMatrix: int = 1199
    kBackground: int = 23
    kBallProjectionManip: int = 125
    kBarnDoorManip: int = 150
    kBase: int = 1
    kBaseLattice: int = 249
    kBendLattice: int = 335
    kBevel: int = 48
    kBevelManip: int = 151
    kBevelPlus: int = 900
    kBezierCurve: int = 1055
    kBezierCurveData: int = 1056
    kBezierCurveToNurbs: int = 1058
    kBinaryData: int = 747
    kBirailSrf: int = 49
    kBlend: int = 27
    kBlendColorSet: int = 740
    kBlendColors: int = 31
    kBlendDevice: int = 30
    kBlendFalloff: int = 1142
    kBlendManip: int = 152
    kBlendMatrix: int = 1138
    kBlendNodeAdditiveRotation: int = 1034
    kBlendNodeAdditiveScale: int = 1033
    kBlendNodeBase: int = 1022
    kBlendNodeBoolean: int = 1023
    kBlendNodeDouble: int = 1024
    kBlendNodeDoubleAngle: int = 1025
    kBlendNodeDoubleLinear: int = 1026
    kBlendNodeEnum: int = 1027
    kBlendNodeFloat: int = 1028
    kBlendNodeFloatAngle: int = 1029
    kBlendNodeFloatLinear: int = 1030
    kBlendNodeInt16: int = 1031
    kBlendNodeInt32: int = 1032
    kBlendNodeTime: int = 1053
    kBlendShape: int = 336
    kBlendTwoAttr: int = 28
    kBlendWeighted: int = 29
    kBlindData: int = 757
    kBlindDataTemplate: int = 758
    kBlinn: int = 373
    kBlinnMaterial: int = 389
    kBoundary: int = 53
    kBox: int = 868
    kBoxData: int = 867
    kBrownian: int = 508
    kBrush: int = 766
    kBulge: int = 497
    kBulgeLattice: int = 338
    kBump: int = 32
    kBump3d: int = 33
    kButtonManip: int = 153
    kCacheBase: int = 1000
    kCacheBlend: int = 1001
    kCacheFile: int = 988
    kCacheTrack: int = 1002
    kCacheableNode: int = 997
    kCaddyManipBase: int = 1111
    kCamera: int = 250
    kCameraManip: int = 154
    kCameraPlaneManip: int = 143
    kCameraSet: int = 1012
    kCameraView: int = 34
    kCeil: int = 1166
    kCenterManip: int = 134
    kChainToSpline: int = 35
    kCharacter: int = 689
    kCharacterMap: int = 804
    kCharacterMappingData: int = 743
    kCharacterOffset: int = 690
    kChecker: int = 498
    kChoice: int = 36
    kChooser: int = 773
    kCircle: int = 54
    kCircleManip: int = 126
    kCirclePointManip: int = 231
    kCircleSweepManip: int = 128
    kClampColor: int = 39
    kClampRange: int = 1167
    kClientDevice: int = 1078
    kClip: int = 810
    kClipGhostShape: int = 1083
    kClipLibrary: int = 781
    kClipScheduler: int = 780
    kClipToGhostData: int = 1084
    kCloseCurve: int = 55
    kCloseSurface: int = 57
    kClosestPointOnMesh: int = 990
    kClosestPointOnSurface: int = 56
    kCloth: int = 499
    kCloud: int = 509
    kCluster: int = 251
    kClusterFilter: int = 347
    kClusterFlexor: int = 300
    kCoiManip: int = 155
    kCollision: int = 253
    kColorBackground: int = 24
    kColorMgtGlobals: int = 1102
    kColorProfile: int = 1067
    kColumnFromMatrix: int = 1204
    kCombinationShape: int = 337
    kCommCornerManip: int = 614
    kCommCornerOperManip: int = 615
    kCommEdgeOperManip: int = 612
    kCommEdgePtManip: int = 611
    kCommEdgeSegmentManip: int = 613
    kComponent: int = 535
    kComponentFalloff: int = 1145
    kComponentListData: int = 584
    kComponentManip: int = 675
    kComponentMatch: int = 1150
    kComposeMatrix: int = 1137
    kCompoundAttribute: int = 575
    kConcentricProjectionManip: int = 129
    kCondition: int = 37
    kCone: int = 96
    kConstraint: int = 933
    kContainer: int = 1014
    kContainerBase: int = 1069
    kContourProjectionManip: int = 1116
    kContrast: int = 38
    kControl: int = 486
    kControllerTag: int = 1129
    kCopyColorSet: int = 739
    kCopyUVSet: int = 808
    kCos: int = 1168
    kCpManip: int = 156
    kCrater: int = 510
    kCreaseSet: int = 1091
    kCreate: int = 40
    kCreateBPManip: int = 838
    kCreateBezierManip: int = 1054
    kCreateCVManip: int = 157
    kCreateColorSet: int = 737
    kCreateEPManip: int = 158
    kCreateSectionManip: int = 825
    kCreateUVSet: int = 809
    kCrossProduct: int = 1196
    kCrossSectionEditManip: int = 826
    kCrossSectionManager: int = 824
    kCubicProjectionManip: int = 130
    kCurve: int = 266
    kCurveCVComponent: int = 536
    kCurveCurveIntersect: int = 642
    kCurveEPComponent: int = 537
    kCurveEdManip: int = 159
    kCurveFromMeshCoM: int = 935
    kCurveFromMeshEdge: int = 641
    kCurveFromSubdivEdge: int = 837
    kCurveFromSubdivFace: int = 843
    kCurveFromSurface: int = 58
    kCurveFromSurfaceBnd: int = 59
    kCurveFromSurfaceCoS: int = 60
    kCurveFromSurfaceIso: int = 61
    kCurveInfo: int = 62
    kCurveKnotComponent: int = 538
    kCurveNormalizerAngle: int = 1004
    kCurveNormalizerLinear: int = 1005
    kCurveParamComponent: int = 539
    kCurveSegmentManip: int = 160
    kCurveVarGroup: int = 116
    kCustomEvaluatorClusterNode: int = 1131
    kCylinder: int = 98
    kCylindricalProjectionManip: int = 131
    kDOF: int = 323
    kDPbirailSrf: int = 50
    kDagContainer: int = 1070
    kDagNode: int = 107
    kDagPose: int = 691
    kDagSelectionItem: int = 562
    kData: int = 583
    kData2Double: int = 594
    kData2Float: int = 595
    kData2Int: int = 596
    kData2Long: int = 596
    kData2Short: int = 597
    kData3Double: int = 598
    kData3Float: int = 599
    kData3Int: int = 600
    kData3Long: int = 600
    kData3Short: int = 601
    kData4Double: int = 882
    kDblTrsManip: int = 190
    kDecayRegionCapComponent: int = 548
    kDecayRegionComponent: int = 549
    kDecomposeMatrix: int = 1136
    kDefaultLightList: int = 317
    kDeformBend: int = 626
    kDeformBendManip: int = 632
    kDeformFlare: int = 629
    kDeformFlareManip: int = 635
    kDeformFunc: int = 625
    kDeformSine: int = 630
    kDeformSineManip: int = 636
    kDeformSquash: int = 628
    kDeformSquashManip: int = 634
    kDeformTwist: int = 627
    kDeformTwistManip: int = 633
    kDeformWave: int = 631
    kDeformWaveManip: int = 637
    kDeleteColorSet: int = 738
    kDeleteComponent: int = 318
    kDeleteUVSet: int = 801
    kDeltaMush: int = 350
    kDependencyNode: int = 4
    kDetachCurve: int = 63
    kDetachSurface: int = 64
    kDeterminant: int = 1169
    kDiffuseMaterial: int = 387
    kDimension: int = 269
    kDimensionManip: int = 232
    kDirectedDisc: int = 276
    kDirectionManip: int = 161
    kDirectionalLight: int = 308
    kDiscManip: int = 132
    kDiskCache: int = 864
    kDispatchCompute: int = 319
    kDisplacementShader: int = 321
    kDisplayLayer: int = 734
    kDisplayLayerManager: int = 735
    kDistance: int = 272
    kDistanceBetween: int = 322
    kDistanceManip: int = 639
    kDivide: int = 1200
    kDofManip: int = 162
    kDotProduct: int = 1195
    kDoubleAngleAttribute: int = 567
    kDoubleArrayData: int = 585
    kDoubleIndexedComponent: int = 715
    kDoubleLinearAttribute: int = 569
    kDoubleShadingSwitch: int = 620
    kDoubleToAngleNode: int = 1158
    kDrag: int = 258
    kDropOffFunction: int = 827
    kDropoffLocator: int = 282
    kDropoffManip: int = 163
    kDummy: int = 254
    kDummyConnectable: int = 324
    kDynAirManip: int = 725
    kDynArrayAttrsData: int = 730
    kDynAttenuationManip: int = 729
    kDynBase: int = 721
    kDynBaseFieldManip: int = 724
    kDynEmitterManip: int = 722
    kDynFieldsManip: int = 723
    kDynGlobals: int = 770
    kDynNewtonManip: int = 726
    kDynParticleSetComponent: int = 560
    kDynSpreadManip: int = 728
    kDynSweptGeometryData: int = 744
    kDynTurbulenceManip: int = 727
    kDynamicConstraint: int = 994
    kDynamicsController: int = 325
    kEdgeComponent: int = 545
    kEditCurve: int = 822
    kEditCurveManip: int = 823
    kEditMetadata: int = 1090
    kEditsManager: int = 1098
    kEmitter: int = 255
    kEnableManip: int = 136
    kEnumAttribute: int = 572
    kEnvBall: int = 491
    kEnvChrome: int = 493
    kEnvCube: int = 492
    kEnvFacade: int = 977
    kEnvFogMaterial: int = 381
    kEnvFogShape: int = 278
    kEnvSky: int = 494
    kEnvSphere: int = 495
    kEqual: int = 1170
    kExplodeNurbsShell: int = 693
    kExpression: int = 327
    kExtendCurve: int = 65
    kExtendCurveDistanceManip: int = 164
    kExtendSurface: int = 66
    kExtendSurfaceDistanceManip: int = 717
    kExtract: int = 328
    kExtrude: int = 67
    kExtrudeManip: int = 165
    kFFD: int = 339
    kFFblendSrf: int = 68
    kFFfilletSrf: int = 69
    kFacade: int = 975
    kFalloffEval: int = 1149
    kFfdDualBase: int = 340
    kField: int = 256
    kFileBackground: int = 25
    kFileTexture: int = 500
    kFilletCurve: int = 70
    kFilter: int = 329
    kFilterClosestSample: int = 330
    kFilterEuler: int = 331
    kFilterSimplify: int = 332
    kFitBspline: int = 71
    kFixedLineManip: int = 233
    kFlexor: int = 299
    kFloatAngleAttribute: int = 568
    kFloatArrayData: int = 1038
    kFloatLinearAttribute: int = 570
    kFloatMatrixAttribute: int = 579
    kFloatVectorArrayData: int = 1015
    kFloor: int = 1171
    kFlow: int = 72
    kFluid: int = 915
    kFluidData: int = 917
    kFluidEmitter: int = 921
    kFluidGeom: int = 916
    kFluidTexture2D: int = 910
    kFluidTexture3D: int = 909
    kFollicle: int = 936
    kForceUpdateManip: int = 696
    kFosterParent: int = 1093
    kFourByFourMatrix: int = 776
    kFractal: int = 501
    kFreePointManip: int = 133
    kFreePointTriadManip: int = 137
    kGammaCorrect: int = 333
    kGenericAttribute: int = 576
    kGeoConnectable: int = 326
    kGeoConnector: int = 923
    kGeomBind: int = 1101
    kGeometric: int = 265
    kGeometryConstraint: int = 113
    kGeometryData: int = 713
    kGeometryFilt: int = 334
    kGeometryOnLineManip: int = 142
    kGeometryVarGroup: int = 114
    kGlobalCacheControls: int = 863
    kGlobalStitch: int = 702
    kGranite: int = 511
    kGravity: int = 259
    kGreasePencilSequence: int = 1089
    kGreasePlane: int = 1087
    kGreasePlaneRenderShape: int = 1088
    kGreaterThan: int = 1172
    kGrid: int = 502
    kGroundPlane: int = 290
    kGroupId: int = 356
    kGroupParts: int = 357
    kGuide: int = 358
    kGuideLine: int = 301
    kHairConstraint: int = 941
    kHairSystem: int = 937
    kHairTubeShader: int = 948
    kHandleRotateManip: int = 216
    kHardenPointCurve: int = 73
    kHardwareReflectionMap: int = 887
    kHardwareRenderGlobals: int = 527
    kHardwareRenderingGlobals: int = 1072
    kHeightField: int = 922
    kHikEffector: int = 962
    kHikFKJoint: int = 964
    kHikFloorContactMarker: int = 984
    kHikGroundPlane: int = 985
    kHikHandle: int = 966
    kHikIKEffector: int = 963
    kHikSolver: int = 965
    kHistorySwitch: int = 989
    kHsvToRgb: int = 359
    kHwShaderNode: int = 890
    kHyperGraphInfo: int = 360
    kHyperLayout: int = 361
    kHyperLayoutDG: int = 1006
    kHyperView: int = 362
    kIkEffector: int = 119
    kIkHandle: int = 120
    kIkRPManip: int = 167
    kIkSolver: int = 363
    kIkSplineManip: int = 166
    kIkSystem: int = 369
    kIllustratorCurve: int = 74
    kImageAdd: int = 660
    kImageBlur: int = 666
    kImageColorCorrect: int = 665
    kImageData: int = 654
    kImageDepth: int = 668
    kImageDiff: int = 661
    kImageDisplay: int = 669
    kImageFilter: int = 667
    kImageLoad: int = 655
    kImageMotionBlur: int = 671
    kImageMultiply: int = 662
    kImageNetDest: int = 658
    kImageNetSrc: int = 657
    kImageOver: int = 663
    kImagePlane: int = 370
    kImageRender: int = 659
    kImageSave: int = 656
    kImageSource: int = 792
    kImageUnder: int = 664
    kImageView: int = 670
    kImplicitCone: int = 895
    kImplicitSphere: int = 896
    kInsertKnotCrv: int = 75
    kInsertKnotSrf: int = 76
    kInstancer: int = 763
    kInt64ArrayData: int = 815
    kIntArrayData: int = 586
    kIntersectSurface: int = 77
    kInvalid: int = 0
    kInverseLinearInterpolation: int = 1173
    kIsoparmComponent: int = 540
    kIsoparmManip: int = 146
    kItemList: int = 564
    kJiggleDeformer: int = 862
    kJoint: int = 121
    kJointCluster: int = 349
    kJointClusterManip: int = 168
    kJointTranslateManip: int = 229
    kKeyframeDelta: int = 950
    kKeyframeDeltaAddRemove: int = 953
    kKeyframeDeltaBlockAddRemove: int = 954
    kKeyframeDeltaBreakdown: int = 958
    kKeyframeDeltaInfType: int = 955
    kKeyframeDeltaMove: int = 951
    kKeyframeDeltaScale: int = 952
    kKeyframeDeltaTangent: int = 956
    kKeyframeDeltaWeighted: int = 957
    kKeyframeRegionManip: int = 1003
    kKeyingGroup: int = 688
    kLambert: int = 371
    kLambertMaterial: int = 388
    kLast: int = 1211
    kLattice: int = 279
    kLatticeComponent: int = 546
    kLatticeData: int = 588
    kLatticeGeom: int = 280
    kLayeredShader: int = 376
    kLayeredTexture: int = 805
    kLeastSquares: int = 379
    kLeather: int = 512
    kLength: int = 1174
    kLessThan: int = 1175
    kLight: int = 302
    kLightDataAttribute: int = 577
    kLightFogMaterial: int = 380
    kLightInfo: int = 378
    kLightLink: int = 769
    kLightList: int = 382
    kLightManip: int = 169
    kLightProjectionGeometry: int = 234
    kLightSource: int = 383
    kLightSourceMaterial: int = 391
    kLimitManip: int = 135
    kLineArrowManip: int = 235
    kLineManip: int = 147
    kLineModifier: int = 979
    kLinearInterpolation: int = 1176
    kLinearLight: int = 306
    kLocator: int = 281
    kLodGroup: int = 774
    kLodThresholds: int = 772
    kLog: int = 1177
    kLookAt: int = 112
    kLuminance: int = 384
    kMCsolver: int = 364
    kMPbirailSrf: int = 51
    kMakeGroup: int = 385
    kMandelbrot: int = 1085
    kMandelbrot3D: int = 1086
    kManip2DContainer: int = 192
    kManipContainer: int = 148
    kManipulator: int = 230
    kManipulator2D: int = 205
    kManipulator3D: int = 122
    kMarble: int = 513
    kMarker: int = 283
    kMarkerManip: int = 210
    kMaterial: int = 386
    kMaterialFacade: int = 976
    kMaterialInfo: int = 392
    kMaterialTemplate: int = 393
    kMatrixAdd: int = 394
    kMatrixArrayData: int = 604
    kMatrixAttribute: int = 578
    kMatrixData: int = 589
    kMatrixFloatData: int = 673
    kMatrixHold: int = 395
    kMatrixMult: int = 396
    kMatrixPass: int = 397
    kMatrixWtAdd: int = 398
    kMax: int = 1178
    kMembrane: int = 1039
    kMentalRayTexture: int = 943
    kMergeVertsToolManip: int = 1040
    kMesh: int = 296
    kMeshComponent: int = 550
    kMeshData: int = 590
    kMeshEdgeComponent: int = 551
    kMeshFaceVertComponent: int = 555
    kMeshFrEdgeComponent: int = 553
    kMeshGeom: int = 297
    kMeshMapComponent: int = 818
    kMeshPolygonComponent: int = 552
    kMeshVarGroup: int = 117
    kMeshVertComponent: int = 554
    kMeshVtxFaceComponent: int = 746
    kMessageAttribute: int = 580
    kMidModifier: int = 399
    kMidModifierWithMatrix: int = 400
    kMin: int = 1179
    kModel: int = 3
    kModifyEdgeBaseManip: int = 839
    kModifyEdgeCrvManip: int = 830
    kModifyEdgeManip: int = 831
    kModulo: int = 1180
    kMorph: int = 352
    kMotionPath: int = 445
    kMotionPathManip: int = 170
    kMountain: int = 503
    kMoveUVShellManip2D: int = 711
    kMoveVertexManip: int = 764
    kMultDoubleLinear: int = 775
    kMultiSubVertexComponent: int = 558
    kMultilisterLight: int = 447
    kMultiply: int = 1181
    kMultiplyDivide: int = 448
    kMultiplyPointByMatrix: int = 1197
    kMultiplyVectorByMatrix: int = 1198
    kMute: int = 932
    kNBase: int = 999
    kNCloth: int = 1008
    kNComponent: int = 995
    kNId: int = 1037
    kNIdData: int = 1036
    kNLE: int = 1096
    kNObject: int = 1017
    kNObjectData: int = 1016
    kNParticle: int = 1009
    kNRigid: int = 1010
    kNamedObject: int = 2
    kNearestPointOnCurve: int = 1066
    kNegate: int = 1182
    kNewton: int = 260
    kNodeGraphEditorBookmarkInfo: int = 1119
    kNodeGraphEditorBookmarks: int = 1118
    kNodeGraphEditorInfo: int = 1117
    kNoise: int = 880
    kNonAmbientLight: int = 304
    kNonDagSelectionItem: int = 563
    kNonExtendedLight: int = 307
    kNonLinear: int = 624
    kNormalConstraint: int = 238
    kNormalize: int = 1183
    kNot: int = 1184
    kNucleus: int = 998
    kNumericAttribute: int = 566
    kNumericData: int = 593
    kNurbsBoolean: int = 694
    kNurbsCircular2PtArc: int = 644
    kNurbsCircular3PtArc: int = 643
    kNurbsCube: int = 80
    kNurbsCurve: int = 267
    kNurbsCurveData: int = 592
    kNurbsCurveGeom: int = 268
    kNurbsCurveToBezier: int = 1057
    kNurbsPlane: int = 79
    kNurbsSquare: int = 622
    kNurbsSurface: int = 294
    kNurbsSurfaceData: int = 591
    kNurbsSurfaceGeom: int = 295
    kNurbsTesselate: int = 78
    kNurbsToSubdiv: int = 761
    kObjectAttrFilter: int = 681
    kObjectBinFilter: int = 944
    kObjectFilter: int = 677
    kObjectMultiFilter: int = 678
    kObjectNameFilter: int = 679
    kObjectRenderFilter: int = 682
    kObjectScriptFilter: int = 683
    kObjectTypeFilter: int = 680
    kOcean: int = 876
    kOceanDeformer: int = 1127
    kOceanShader: int = 899
    kOffsetCos: int = 81
    kOffsetCosManip: int = 171
    kOffsetCurve: int = 82
    kOffsetCurveManip: int = 172
    kOffsetSurface: int = 645
    kOffsetSurfaceManip: int = 653
    kOldGeometryConstraint: int = 449
    kOpaqueAttribute: int = 581
    kOpenPBRSurface: int = 1209
    kOpticalFX: int = 450
    kOr: int = 1185
    kOrientConstraint: int = 239
    kOrientationComponent: int = 556
    kOrientationLocator: int = 286
    kOrientationMarker: int = 284
    kOrthoGrid: int = 291
    kPASolver: int = 365
    kPIConstant: int = 1186
    kPairBlend: int = 928
    kParamDimension: int = 275
    kParentConstraint: int = 242
    kParentMatrix: int = 1207
    kParticle: int = 311
    kParticleAgeMapper: int = 451
    kParticleCloud: int = 452
    kParticleColorMapper: int = 453
    kParticleIncandecenceMapper: int = 454
    kParticleSamplerInfo: int = 807
    kParticleTransparencyMapper: int = 455
    kPartition: int = 456
    kPassContributionMap: int = 788
    kPfxGeometry: int = 946
    kPfxHair: int = 947
    kPfxToon: int = 972
    kPhong: int = 374
    kPhongExplorer: int = 375
    kPhongMaterial: int = 390
    kPickMatrix: int = 1139
    kPivotComponent: int = 541
    kPivotManip2D: int = 191
    kPlace2dTexture: int = 457
    kPlace3dTexture: int = 458
    kPlanarProjectionManip: int = 207
    kPlanarTrimSrf: int = 83
    kPlane: int = 288
    kPlugin: int = 582
    kPluginBlendShape: int = 1122
    kPluginCameraSet: int = 1013
    kPluginClientDevice: int = 1079
    kPluginConstraintNode: int = 1018
    kPluginData: int = 602
    kPluginDeformerNode: int = 616
    kPluginDependNode: int = 459
    kPluginEmitterNode: int = 732
    kPluginFieldNode: int = 731
    kPluginGeometryData: int = 768
    kPluginGeometryFilter: int = 1121
    kPluginHardwareShader: int = 891
    kPluginHwShaderNode: int = 892
    kPluginIkSolver: int = 762
    kPluginImagePlaneNode: int = 1007
    kPluginLocatorNode: int = 460
    kPluginManipContainer: int = 697
    kPluginManipulatorNode: int = 1035
    kPluginMotionPathNode: int = 446
    kPluginObjectSet: int = 925
    kPluginParticleAttributeMapperNode: int = 1011
    kPluginShape: int = 712
    kPluginSkinCluster: int = 1120
    kPluginSpringNode: int = 733
    kPluginThreadedDevice: int = 1080
    kPluginTransformNode: int = 914
    kPlusMinusAverage: int = 461
    kPointArrayData: int = 603
    kPointConstraint: int = 240
    kPointLight: int = 309
    kPointManip: int = 236
    kPointMatrixMult: int = 462
    kPointOnCurveInfo: int = 84
    kPointOnCurveManip: int = 208
    kPointOnLineManip: int = 211
    kPointOnPolyConstraint: int = 1061
    kPointOnSurfaceInfo: int = 85
    kPointOnSurfaceManip: int = 212
    kPoleVectorConstraint: int = 243
    kPolyAppend: int = 403
    kPolyAppendVertex: int = 797
    kPolyArrow: int = 980
    kPolyAutoProj: int = 852
    kPolyAutoProjManip: int = 968
    kPolyAverageVertex: int = 851
    kPolyAxis: int = 1156
    kPolyBevel: int = 401
    kPolyBevel2: int = 1099
    kPolyBevel3: int = 1103
    kPolyBlindData: int = 759
    kPolyBoolOp: int = 618
    kPolyBridgeEdge: int = 996
    kPolyCBoolOp: int = 1100
    kPolyCaddyManip: int = 1112
    kPolyChipOff: int = 404
    kPolyCircularize: int = 1132
    kPolyClean: int = 1125
    kPolyCloseBorder: int = 405
    kPolyCollapseEdge: int = 406
    kPolyCollapseF: int = 407
    kPolyColorDel: int = 742
    kPolyColorMod: int = 741
    kPolyColorPerVertex: int = 736
    kPolyComponentData: int = 986
    kPolyCone: int = 437
    kPolyConnectComponents: int = 1062
    kPolyContourProj: int = 1115
    kPolyCreaseEdge: int = 960
    kPolyCreateFacet: int = 443
    kPolyCreateToolManip: int = 140
    kPolyCreator: int = 435
    kPolyCube: int = 438
    kPolyCut: int = 902
    kPolyCutManip: int = 906
    kPolyCutManipContainer: int = 905
    kPolyCylProj: int = 408
    kPolyCylinder: int = 439
    kPolyDelEdge: int = 409
    kPolyDelFacet: int = 410
    kPolyDelVertex: int = 411
    kPolyDuplicateEdge: int = 974
    kPolyEdgeToCurve: int = 1020
    kPolyEditEdgeFlow: int = 1092
    kPolyExtrudeEdge: int = 794
    kPolyExtrudeFacet: int = 412
    kPolyExtrudeManip: int = 1075
    kPolyExtrudeManipContainer: int = 1076
    kPolyExtrudeVertex: int = 927
    kPolyFlipEdge: int = 793
    kPolyFlipUV: int = 889
    kPolyHelix: int = 987
    kPolyHoleFace: int = 1060
    kPolyLayoutUV: int = 853
    kPolyMapCut: int = 413
    kPolyMapDel: int = 414
    kPolyMapSew: int = 415
    kPolyMapSewMove: int = 854
    kPolyMappingManip: int = 194
    kPolyMergeEdge: int = 416
    kPolyMergeFacet: int = 417
    kPolyMergeUV: int = 911
    kPolyMergeVert: int = 699
    kPolyMesh: int = 440
    kPolyMirror: int = 959
    kPolyMirrorManipContainer: int = 907
    kPolyModifierManip: int = 195
    kPolyModifierManipContainer: int = 1113
    kPolyMoveEdge: int = 418
    kPolyMoveFacet: int = 419
    kPolyMoveFacetUV: int = 420
    kPolyMoveUV: int = 421
    kPolyMoveUVManip: int = 193
    kPolyMoveVertex: int = 422
    kPolyMoveVertexManip: int = 196
    kPolyMoveVertexUV: int = 423
    kPolyNormal: int = 424
    kPolyNormalPerVertex: int = 760
    kPolyNormalizeUV: int = 888
    kPolyPassThru: int = 1123
    kPolyPinUV: int = 961
    kPolyPipe: int = 983
    kPolyPlanProj: int = 425
    kPolyPlatonicSolid: int = 982
    kPolyPoke: int = 903
    kPolyPokeManip: int = 908
    kPolyPrimitive: int = 436
    kPolyPrimitiveMisc: int = 981
    kPolyPrism: int = 969
    kPolyProj: int = 426
    kPolyProjectCurve: int = 1073
    kPolyProjectionManip: int = 174
    kPolyPyramid: int = 970
    kPolyQuad: int = 427
    kPolyReFormManip: int = 1155
    kPolyReFormManipContainer: int = 1154
    kPolyReduce: int = 771
    kPolyRemesh: int = 1114
    kPolySelectEditFeedbackManip: int = 1043
    kPolySeparate: int = 463
    kPolySewEdge: int = 698
    kPolySmartBevel: int = 1208
    kPolySmartExtrude: int = 1152
    kPolySmartExtrudeManip: int = 1153
    kPolySmooth: int = 428
    kPolySmoothFacet: int = 700
    kPolySmoothProxy: int = 945
    kPolySoftEdge: int = 429
    kPolySphProj: int = 430
    kPolySphere: int = 441
    kPolySpinEdge: int = 1059
    kPolySplit: int = 431
    kPolySplitEdge: int = 816
    kPolySplitRing: int = 971
    kPolySplitToolManip: int = 141
    kPolySplitVert: int = 811
    kPolyStraightenUVBorder: int = 912
    kPolySubdEdge: int = 432
    kPolySubdFacet: int = 433
    kPolyToSubdiv: int = 686
    kPolyToolFeedbackManip: int = 1042
    kPolyToolFeedbackShape: int = 312
    kPolyTorus: int = 442
    kPolyTransfer: int = 850
    kPolyTriangulate: int = 434
    kPolyTweak: int = 402
    kPolyTweakUV: int = 710
    kPolyUVRectangle: int = 1071
    kPolyUnite: int = 444
    kPolyUnsmooth: int = 1151
    kPolyVertexNormalManip: int = 197
    kPolyWedgeFace: int = 904
    kPoseInterpolatorManager: int = 1128
    kPositionMarker: int = 285
    kPostProcessList: int = 464
    kPower: int = 1187
    kPrecompExport: int = 789
    kPrimitive: int = 86
    kPrimitiveFalloff: int = 1141
    kProjectCurve: int = 87
    kProjectTangent: int = 88
    kProjectTangentManip: int = 177
    kProjection: int = 465
    kProjectionManip: int = 173
    kProjectionMultiManip: int = 176
    kProjectionUVManip: int = 175
    kPropModManip: int = 178
    kPropMoveTriadManip: int = 138
    kProximityFalloff: int = 1146
    kProximityPin: int = 992
    kProximityWrap: int = 354
    kProxy: int = 108
    kProxyManager: int = 967
    kPsdFileTexture: int = 949
    kQuadPtOnLineManip: int = 179
    kQuadShadingSwitch: int = 926
    kRBFsurface: int = 89
    kRPsolver: int = 367
    kRadial: int = 261
    kRadius: int = 274
    kRamp: int = 504
    kRampBackground: int = 26
    kRampShader: int = 897
    kRbfSrfManip: int = 180
    kReForm: int = 1130
    kRebuildCurve: int = 90
    kRebuildSurface: int = 91
    kRecord: int = 466
    kReference: int = 756
    kReflect: int = 372
    kRemapColor: int = 939
    kRemapHsv: int = 940
    kRemapValue: int = 938
    kRenderBox: int = 869
    kRenderCone: int = 97
    kRenderGlobals: int = 523
    kRenderGlobalsList: int = 524
    kRenderLayer: int = 786
    kRenderLayerManager: int = 787
    kRenderPass: int = 784
    kRenderPassSet: int = 785
    kRenderQuality: int = 525
    kRenderRect: int = 277
    kRenderSetup: int = 522
    kRenderSphere: int = 298
    kRenderTarget: int = 790
    kRenderUtilityList: int = 467
    kRenderedImageSource: int = 791
    kRenderingList: int = 1074
    kReorderUVSet: int = 1134
    kResolution: int = 526
    kResultCurve: int = 16
    kResultCurveTimeToAngular: int = 17
    kResultCurveTimeToDistance: int = 18
    kResultCurveTimeToTime: int = 19
    kResultCurveTimeToUnitless: int = 20
    kReverse: int = 468
    kReverseCrvManip: int = 182
    kReverseCurve: int = 92
    kReverseCurveManip: int = 181
    kReverseSurface: int = 93
    kReverseSurfaceManip: int = 183
    kRevolve: int = 94
    kRevolveManip: int = 184
    kRevolvedPrimitive: int = 95
    kRevolvedPrimitiveManip: int = 185
    kRgbToHsv: int = 469
    kRigid: int = 314
    kRigidConstraint: int = 313
    kRigidDeform: int = 341
    kRigidSolver: int = 470
    kRock: int = 514
    kRotateBoxManip: int = 214
    kRotateLimitsManip: int = 217
    kRotateManip: int = 215
    kRotateUVManip2D: int = 708
    kRotateVector: int = 1188
    kRotationFromMatrix: int = 1206
    kRound: int = 1189
    kRoundConstantRadius: int = 646
    kRoundConstantRadiusManip: int = 649
    kRoundRadiusCrvManip: int = 648
    kRoundRadiusManip: int = 647
    kRowFromMatrix: int = 1203
    kSCsolver: int = 366
    kSPbirailSrf: int = 52
    kSamplerInfo: int = 478
    kScaleConstraint: int = 244
    kScaleFromMatrix: int = 1205
    kScaleLimitsManip: int = 218
    kScaleManip: int = 219
    kScalePointManip: int = 832
    kScaleUVManip2D: int = 709
    kScalingBoxManip: int = 220
    kScreenAlignedCircleManip: int = 127
    kScript: int = 640
    kScriptManip: int = 221
    kSculpt: int = 342
    kSectionManip: int = 819
    kSelectionItem: int = 561
    kSelectionList: int = 609
    kSelectionListData: int = 676
    kSelectionListOperator: int = 684
    kSequenceManager: int = 1050
    kSequencer: int = 1051
    kSet: int = 471
    kSetGroupComponent: int = 559
    kSetRange: int = 474
    kSfRevolveManip: int = 842
    kShaderGlow: int = 475
    kShaderList: int = 476
    kShadingEngine: int = 320
    kShadingMap: int = 477
    kShape: int = 248
    kShapeEditorManager: int = 1126
    kShapeFragment: int = 479
    kShot: int = 1052
    kShrinkWrapFilter: int = 1097
    kSimpleVolumeShader: int = 480
    kSin: int = 1190
    kSingleIndexedComponent: int = 714
    kSingleShadingSwitch: int = 619
    kSketchPlane: int = 289
    kSkin: int = 100
    kSkinBinding: int = 1063
    kSkinClusterFilter: int = 687
    kSkinShader: int = 674
    kSl60: int = 481
    kSmear: int = 918
    kSmoothCurve: int = 701
    kSmoothStep: int = 1191
    kSmoothTangentSrf: int = 783
    kSnapUVManip2D: int = 1094
    kSnapshot: int = 482
    kSnapshotPath: int = 924
    kSnapshotShape: int = 860
    kSnow: int = 515
    kSoftMod: int = 252
    kSoftModFilter: int = 348
    kSoftModManip: int = 638
    kSolidFractal: int = 516
    kSolidify: int = 353
    kSphere: int = 99
    kSphereData: int = 605
    kSphericalProjectionManip: int = 222
    kSplineSolver: int = 368
    kSpotCylinderManip: int = 187
    kSpotLight: int = 310
    kSpotManip: int = 186
    kSpring: int = 315
    kSprite: int = 292
    kSquareSrf: int = 718
    kSquareSrfManip: int = 719
    kStandardSurface: int = 377
    kStateManip: int = 145
    kStencil: int = 505
    kStereoCameraMaster: int = 1049
    kStitchAsNurbsShell: int = 692
    kStitchSrf: int = 101
    kStitchSrfManip: int = 695
    kStoryBoard: int = 483
    kStringArrayData: int = 607
    kStringData: int = 606
    kStringShadingSwitch: int = 919
    kStroke: int = 765
    kStrokeGlobals: int = 767
    kStucco: int = 517
    kStudioClearCoat: int = 920
    kStyleCurve: int = 901
    kSubCurve: int = 102
    kSubSurface: int = 782
    kSubVertexComponent: int = 557
    kSubdAddTopology: int = 893
    kSubdAutoProj: int = 878
    kSubdBlindData: int = 803
    kSubdBoolean: int = 828
    kSubdCleanTopology: int = 894
    kSubdCloseBorder: int = 865
    kSubdDelFace: int = 859
    kSubdExtrudeFace: int = 840
    kSubdHierBlind: int = 802
    kSubdLayoutUV: int = 874
    kSubdMapCut: int = 873
    kSubdMapSewMove: int = 875
    kSubdMappingManip: int = 886
    kSubdMergeVert: int = 866
    kSubdModifier: int = 855
    kSubdModifyEdge: int = 829
    kSubdMoveEdge: int = 857
    kSubdMoveFace: int = 858
    kSubdMoveVertex: int = 856
    kSubdPlanProj: int = 883
    kSubdProjectionManip: int = 885
    kSubdSplitFace: int = 870
    kSubdSubdivideFace: int = 879
    kSubdTweak: int = 884
    kSubdTweakUV: int = 872
    kSubdiv: int = 685
    kSubdivCVComponent: int = 703
    kSubdivCollapse: int = 806
    kSubdivCompId: int = 799
    kSubdivData: int = 812
    kSubdivEdgeComponent: int = 704
    kSubdivFaceComponent: int = 705
    kSubdivGeom: int = 813
    kSubdivMapComponent: int = 861
    kSubdivReverseFaces: int = 817
    kSubdivSurfaceVarGroup: int = 841
    kSubdivToNurbs: int = 821
    kSubdivToPoly: int = 720
    kSubsetFalloff: int = 1147
    kSubtract: int = 1201
    kSum: int = 1192
    kSummaryObject: int = 484
    kSuper: int = 485
    kSurface: int = 293
    kSurfaceCVComponent: int = 542
    kSurfaceEPComponent: int = 543
    kSurfaceEdManip: int = 778
    kSurfaceFaceComponent: int = 779
    kSurfaceInfo: int = 103
    kSurfaceKnotComponent: int = 544
    kSurfaceLuminance: int = 487
    kSurfaceRangeComponent: int = 547
    kSurfaceShader: int = 488
    kSurfaceVarGroup: int = 118
    kSymmetryConstraint: int = 241
    kSymmetryLocator: int = 834
    kSymmetryMapCurve: int = 836
    kSymmetryMapVector: int = 835
    kTan: int = 1193
    kTangentConstraint: int = 245
    kTension: int = 351
    kTexLattice: int = 200
    kTexLatticeDeformManip: int = 199
    kTexSmoothManip: int = 201
    kTexSmudgeUVManip: int = 198
    kTextButtonManip: int = 652
    kTextCurves: int = 104
    kTextManip: int = 929
    kTexture2d: int = 496
    kTexture3d: int = 507
    kTextureBakeSet: int = 472
    kTextureDeformer: int = 343
    kTextureDeformerHandle: int = 344
    kTextureEnv: int = 490
    kTextureList: int = 489
    kTextureManip3D: int = 223
    kThreadedDevice: int = 1077
    kThreePointArcManip: int = 650
    kTime: int = 520
    kTimeAttribute: int = 571
    kTimeEditor: int = 1107
    kTimeEditorAnimSource: int = 1110
    kTimeEditorClip: int = 1106
    kTimeEditorClipBase: int = 1104
    kTimeEditorClipEvaluator: int = 1105
    kTimeEditorInterpolator: int = 1109
    kTimeEditorTracks: int = 1108
    kTimeFunction: int = 942
    kTimeToUnitConversion: int = 521
    kTimeWarp: int = 1081
    kToggleManip: int = 224
    kToggleOnLineManip: int = 144
    kToolContext: int = 1095
    kToonLineAttributes: int = 973
    kTorus: int = 617
    kTowPointManip: int = 139
    kTowPointOnCurveManip: int = 209
    kTowPointOnSurfaceManip: int = 777
    kTrackInfoManager: int = 1124
    kTransferAttributes: int = 993
    kTransferFalloff: int = 1144
    kTransform: int = 110
    kTransformBoxManip: int = 833
    kTransformGeometry: int = 610
    kTranslateBoxManip: int = 225
    kTranslateLimitsManip: int = 226
    kTranslateManip: int = 227
    kTranslateManip2D: int = 206
    kTranslateUVManip: int = 213
    kTranslateUVManip2D: int = 707
    kTranslationFromMatrix: int = 1202
    kTriadManip: int = 237
    kTrim: int = 105
    kTrimLocator: int = 287
    kTrimManip: int = 228
    kTrimWithBoundaries: int = 934
    kTriplanarProjectionManip: int = 188
    kTripleIndexedComponent: int = 716
    kTripleShadingSwitch: int = 621
    kTrsInsertManip: int = 203
    kTrsManip: int = 189
    kTrsTransManip: int = 202
    kTrsXformManip: int = 204
    kTruncate: int = 1194
    kTurbulence: int = 262
    kTweak: int = 345
    kTwoPointArcManip: int = 651
    kTxSl: int = 518
    kTypedAttribute: int = 574
    kUInt64ArrayData: int = 814
    kUVManip2D: int = 706
    kUVPin: int = 991
    kUfeProxyTransform: int = 1135
    kUint64SingleIndexedComponent: int = 1041
    kUintArrayData: int = 587
    kUnderWorld: int = 109
    kUniform: int = 263
    kUniformFalloff: int = 1143
    kUnitAttribute: int = 573
    kUnitConversion: int = 529
    kUnitToTimeConversion: int = 530
    kUnknown: int = 532
    kUnknownDag: int = 316
    kUnknownTransform: int = 246
    kUntrim: int = 106
    kUnused1: int = 844
    kUnused2: int = 845
    kUnused3: int = 846
    kUnused4: int = 847
    kUnused5: int = 848
    kUnused6: int = 849
    kUseBackground: int = 531
    kUvChooser: int = 798
    kVectorArrayData: int = 608
    kVectorProduct: int = 533
    kVertexBakeSet: int = 473
    kVertexWeightSet: int = 1065
    kViewColorManager: int = 672
    kViewManip: int = 930
    kVolumeAxis: int = 800
    kVolumeBindManip: int = 1064
    kVolumeFog: int = 871
    kVolumeLight: int = 898
    kVolumeNoise: int = 877
    kVolumeShader: int = 534
    kVortex: int = 264
    kWater: int = 506
    kWeightFunctionData: int = 1148
    kWeightGeometryFilt: int = 346
    kWire: int = 355
    kWood: int = 519
    kWorld: int = 247
    kWrapFilter: int = 745
    kWriteToColorBuffer: int = 1045
    kWriteToDepthBuffer: int = 1047
    kWriteToFrameBuffer: int = 1044
    kWriteToLabelBuffer: int = 1048
    kWriteToVectorBuffer: int = 1046
    kXformManip: int = 931
    kXsectionSubdivEdit: int = 820
    nodeType: int
    thisown: bool

class MFnAmbientLight(MFnLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def ambientShade(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def castSoftShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAmbientShade(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCastSoftShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShadowRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shadowRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnAnisotropyShader(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def anisotropicReflectivity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def correlationX(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def correlationY(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def refractiveIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def roughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAnisotropicReflectivity(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setCorrelationX(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCorrelationY(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRefractiveIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotateAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTangentUCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTangentVCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tangentUCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tangentVCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnAreaLight(MFnNonExtendedLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnArrayAttrsData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkArrayExist(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def count(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doubleArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDoubleData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getIntData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getStringData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVectorData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def list(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def stringArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def vectorArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnAssembly(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activateNonRecursive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canActivate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canRepApplyEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def createRepresentation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteAllRepresentations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteRepresentation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAbsoluteRepNamespace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInitialRep(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getParentAssembly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepLabel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepNamespace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepresentations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSubAssemblies(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getTopLevelAssemblies(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def handlesAddEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def importFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTopLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postLoad(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def repTypes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRepLabel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRepName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportsEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportsMemberChanges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnAttribute(MFnBase):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def accepts(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def acceptsAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addToCategory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def affectsAppearance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def disconnectBehavior(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAddAttrCmd(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCategories(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasCategory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def indexMatters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def internal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAffectsWorldSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCached(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isChannelBoxFlagSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isConnectable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDynamic(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEnforcingUniqueName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isExtension(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isHidden(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isIndeterminant(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isKeyable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isProxyAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isReadable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isRenderSource(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isStorable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isUsedAsColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isUsedAsFilename(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isWorldSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isWritable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kDelete: int = 0
    kNothing: int = 2
    kReset: int = 1
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pathName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeFromCategory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAffectsAppearance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAffectsWorldSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCached(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setChannelBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setConnectable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisconnectBehavior(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEnforcingUniqueName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHidden(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIndeterminant(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIndexMatters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInternal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKeyable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNiceNameOverride(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setProxyAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setReadable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRenderSource(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStorable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUsedAsColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUsedAsFilename(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUsesArrayDataBuilder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWorldSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWritable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shortName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def usesArrayDataBuilder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnBase:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasObj(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isValid(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def object(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def typeString(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnBlinnShader(MFnReflectShader):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def eccentricity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEccentricity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularRollOff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularRollOff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnCamera(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def aspectRatio(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cameraScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def centerOfInterest(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def centerOfInterestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def computeDepthOfField(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyViewFrom(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def eyePoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fStop(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def farClippingPlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def farFocusDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filmFit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filmFitOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filmRollOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filmRollValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filmTranslateH(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filmTranslateV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def focalLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def focusDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAspectRatioLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFilmApertureLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFilmFrustum(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFocalLengthLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPortFieldOfView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRenderingFrustum(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getViewParameters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getViewingFrustum(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasSamePerspective(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def horizontalFieldOfView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def horizontalFilmAperture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def horizontalFilmOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def horizontalPan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def horizontalRollPivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def horizontalShake(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isClippingPlanes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDepthOfField(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDisplayFilmGate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDisplayGateMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isMotionBlur(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isOrtho(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isVerticalLock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lensSqueezeRatio(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nearClippingPlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nearFocusDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def orthoWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def overscan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def panZoomEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postProjectionMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def projectionMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renderPanZoom(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rightDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAspectRatio(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCameraScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCenterOfInterest(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCenterOfInterestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setClippingPlanes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDepthOfField(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayFilmGate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayGateMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEyePoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFStop(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFarClippingPlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFarFocusDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilmFit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilmFitOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilmRollOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilmRollValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilmTranslateH(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilmTranslateV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFocalLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFocusDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHorizontalFieldOfView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHorizontalFilmAperture(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setHorizontalFilmOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHorizontalPan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHorizontalRollPivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHorizontalShake(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIsOrtho(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLensSqueezeRatio(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMotionBlur(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNearClippingPlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNearFarClippingPlanes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNearFocusDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOrthoWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOverscan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPanZoomEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPostScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPreScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRenderPanZoom(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShakeEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShakeOverscan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShakeOverscanEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShutterAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStereoHIT(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStereoHITEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTumblePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUsePivotAsLocalSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVerticalFieldOfView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVerticalFilmAperture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVerticalFilmOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVerticalLock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVerticalPan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVerticalRollPivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVerticalShake(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setZoom(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shakeEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shakeOverscan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shakeOverscanEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shutterAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def stereoHIT(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def stereoHITEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def tumblePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def unnormalizedFarClippingPlane(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def unnormalizedNearClippingPlane(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def upDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def usePivotAsLocalSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def verticalFieldOfView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def verticalFilmAperture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def verticalFilmOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def verticalPan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def verticalRollPivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def verticalShake(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zoom(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnCameraSet(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def appendLayer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteLayer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLayerCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLayerClearDepthValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLayerOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLayerSceneData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumLayers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSortedIndices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insertLayer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLayerActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLayerActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLayerCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLayerClearDepthValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLayerOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLayerSceneData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnComponent(MFnBase):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def elementCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasWeights(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isComplete(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEmpty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEqual(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setComplete(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWeights(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def weight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnComponentListData(MFnData):
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def add(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def has(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnCompoundAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addChild(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAddAttrCmds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeChild(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnContainerNode(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCurrentAsMObject(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMembers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getParentContainer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPublishedNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPublishedNodes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPublishedPlugs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRootTransform(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSubcontainers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCurrent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeCurrent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnDagNode(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activeColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addChild(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def boundingBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def childCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dagPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dagRoot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dormantColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawOverrideColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawOverrideEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawOverrideIsReference(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawOverrideIsTemplate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def duplicate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fullPathName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAllPaths(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedSetsAndMembers(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasChild(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasParent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hiliteColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inModel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inUnderWorld(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def instanceCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isChildOf(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isInstanceable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isInstanced(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isInstancedAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isIntermediateObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isParentOf(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kNextPos: int = 255
    def model(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectColorIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectColorRGB(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectColorType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectGroupComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def partialPathName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeChild(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeChildAt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInstanceable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIntermediateObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectColorType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseObjectColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformationMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def usingHiliteColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def usingObjectColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnData(MFnBase):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kAny: int = 24
    kComponentList: int = 13
    kDoubleArray: int = 7
    kDynArrayAttrs: int = 19
    kDynSweptGeometry: int = 20
    kFalloffFunction: int = 25
    kFloatArray: int = 8
    kIntArray: int = 9
    kInvalid: int = 0
    kLast: int = 26
    kLattice: int = 15
    kMatrix: int = 5
    kMatrixArray: int = 12
    kMesh: int = 14
    kNId: int = 23
    kNObject: int = 22
    kNumeric: int = 1
    kNurbsCurve: int = 16
    kNurbsSurface: int = 17
    kPlugin: int = 2
    kPluginGeometry: int = 3
    kPointArray: int = 10
    kSphere: int = 18
    kString: int = 4
    kStringArray: int = 6
    kSubdSurface: int = 21
    kVectorArray: int = 11
    thisown: bool

class MFnDependencyNode(MFnBase):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def absoluteName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addExternalContentForFileAttr(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def affectsAnimation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def allocateFlag(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def attribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attributeClass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attributeCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canBeWritten(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def classification(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deallocateAllFlags(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deallocateFlag(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def dgCallbackIds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dgCallbacks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dgTimer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dgTimerOff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dgTimerOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dgTimerQueryState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dgTimerReset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def enableDGTiming(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def findAlias(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def findPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAffectedAttributes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAffectedByAttributes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAliasAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAliasList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnections(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getExternalContent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasUniqueName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def icon(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDefaultNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFlagSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFromReferencedFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLocked(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNewAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isShared(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTrackingEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kExtensionAttr: int = 3
    kInvalidAttr: int = 4
    kLocalDynamicAttr: int = 1
    kNormalAttr: int = 2
    kTimerInvalidState: int = 3
    kTimerMetric_callback: int = 0
    kTimerMetric_callbackNotViaAPI: int = 6
    kTimerMetric_callbackViaAPI: int = 5
    kTimerMetric_compute: int = 1
    kTimerMetric_computeDuringCallback: int = 7
    kTimerMetric_computeNotDuringCallback: int = 8
    kTimerMetric_dirty: int = 2
    kTimerMetric_draw: int = 3
    kTimerMetric_fetch: int = 4
    kTimerMetrics: int = 9
    kTimerOff: int = 0
    kTimerOn: int = 1
    kTimerType_count: int = 2
    kTimerType_inclusive: int = 1
    kTimerType_self: int = 0
    kTimerTypes: int = 3
    kTimerUninitialized: int = 2
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentNamespace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pluginName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def plugsAlias(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reorderedAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAffectsAnimation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAlias(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDoNotWrite(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExternalContent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExternalContentForFileAttr(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setFlag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIcon(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLocked(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUuid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def typeName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def uniqueName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def userNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def uuid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnDirectionalLight(MFnNonExtendedLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShadowAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseLightPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shadowAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def useLightPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnDoubleArrayData(MFnData):
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnDoubleIndexedComponent(MFnComponent):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnEnumAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addField(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def defaultValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fieldIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fieldName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnExpression(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def expression(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefaultObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAnimated(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAnimated(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDefaultObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExpression(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUnitConversion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def unitConversion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnFloatArrayData(MFnData):
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnGenericAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addAccept(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDataAccept(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addNumericDataAccept(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeAccept(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeDataAccept(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeNumericDataAccept(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnGeometryData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addComponentTag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addObjectGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addObjectGroupComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def changeObjectGroupId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentTagCategory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentTagContents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentTagExpressionSubsetState(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def componentTagType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentTags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyObjectGroups(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasComponentTag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasObjectGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matrixIsIdentity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matrixIsNotIdentity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectGroupComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectGroupCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectGroupSubsetState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectGroupType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeComponentTag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeObjectGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeObjectGroupComponent(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def renameComponentTag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolveComponentTagExpression(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setComponentTagContents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectGroupComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnIntArrayData(MFnData):
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnLambertShader(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def ambientColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def color(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def diffuseCoeff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def glowIntensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hideSource(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def incandescence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def refractedRayDepthLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def refractiveIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rtRefractedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAmbientColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDiffuseCoeff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGlowIntensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHideSource(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIncandescence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRefractedRayDepthLimit(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setRefractiveIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRtRefractedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTranslucenceCoeff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def translucenceCoeff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnLatticeData(MFnGeometryData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lattice(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnLayeredShader(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def color(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def compositingFlag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def glowColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hardwareColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hardwareShader(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCompositingFlag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGlowColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHardwareColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHardwareShader(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnLight(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def centerOfIllumination(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def color(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lightAmbient(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lightDiffuse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lightDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lightIntensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lightSpecular(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numShadowSamples(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def opticalFXvisibility(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rayDepthLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCenterOfIllumination(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIntensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNumShadowSamples(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOpticalFXvisibility(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRayDepthLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShadowColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseRayTraceShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shadowColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def useRayTraceShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnLightDataAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnMatrixArrayData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnMatrixAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnMatrixData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTransformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnMesh(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addHoles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addPolygon(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def allIntersections(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def anyIntersection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assignColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assignColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assignUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assignUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def autoUniformGridParams(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def binaryBlindDataComponentId(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def booleanOp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def booleanOperations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def booleanOps(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cachedIntersectionAcceleratorInfo(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def cleanupEdgeSmoothing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def clearBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def clearColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def clearGlobalIntersectionAcceleratorInfo(
        *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def clearUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def closestIntersection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def collapseEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def collapseFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def componentTypeFromName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def componentTypeName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyInPlace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyUVSetWithName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createBlindDataType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createColorSetDataMesh(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createColorSetWithName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createColorSetWithNameDataMesh(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def createInPlace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createUVSetDataMeshWithName(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def createUVSetWithName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentColorSetName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentUVSetName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteColorSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteFace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteUVSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def duplicateFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeBorderInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def extractFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def extrudeEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def extrudeFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def freeCachedIntersectionAccelerator(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def generateSmoothMesh(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAssignedUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAssociatedColorSetInstances(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getAssociatedUVSetInstances(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getAssociatedUVSetTextures(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getAxisAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBinaryBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBinormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBlindDataAttrNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBlindDataFaceVertexIndices(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getBlindDataTypes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBoolBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCheckSamePointTwice(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getClosestNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getClosestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getClosestPointAndNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getClosestUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorRepresentation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorSetFamilyNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorSetNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorSetsInFamily(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedShaders(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCreaseEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCreaseVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDoubleBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEdgeVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceNormalIds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceUVSetNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexBinormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexBinormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexBlindDataIndex(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getFaceVertexColorIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexTangent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFaceVertexTangents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFloatBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getHoles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getIntBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInvisibleFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMeshShellsIds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormalIds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPinUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPointAtUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPointsAtUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPolygonNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPolygonTriangleVertices(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getPolygonUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPolygonUVid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPolygonVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRawDoublePoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRawNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRawPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRawUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSmoothMeshDisplayOptions(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getStringBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTangentId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTangents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTriangleOffsets(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTriangles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVBorderEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVSetFamilyNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVSetNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVSetsInFamily(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUvShellsIds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVertexColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVertexNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def globalIntersectionAcceleratorsInfo(
        *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def hasAlphaChannels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasBlindDataComponentId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasColorChannels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersectFaceAtUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isBlindDataTypeUsed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isColorClamped(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isColorSetPerInstance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEdgeSmooth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNormalLocked(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPolygonConvex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPolygonUVReversed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isRightHandedTangent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isUVSetPerInstance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kGeomBorder: int = -2
    kUVBorder: int = -1
    def lockFaceVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lockVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numColorSets(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numFaceVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numPolygons(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numUVSets(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def onBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def polyTriangulate(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonVertexCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeFaceColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeFaceVertexColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeVertexColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renameUVSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBinaryBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBoolBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCheckSamePointTwice(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCreaseEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCreaseVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCurrentColorSetName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCurrentUVSetName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDoubleBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEdgeSmoothing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEdgeSmoothings(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFaceColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFaceColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFaceVertexColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFaceVertexColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFaceVertexNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFaceVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFloatBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIntBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInvisibleFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIsColorClamped(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPinUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSmoothMeshDisplayOptions(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setSomeColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSomeUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStringBlindData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVertexColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVertexColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVertexNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sortIntersectionFaceTriIds(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def split(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def stringBlindDataComponentId(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def subdivideEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subdivideFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def syncObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def uniformGridParams(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def unlockFaceVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def unlockVertexNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnMeshData(MFnGeometryData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnMessageAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnNonAmbientLight(MFnLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def decayRate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDecayRate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnNonExtendedLight(MFnNonAmbientLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def castSoftShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def depthMapBias(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depthMapFilterSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depthMapFocus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depthMapResolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depthMapWidthFocus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCastSoftShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDepthMapBias(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDepthMapFilterSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDepthMapFocus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDepthMapResolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDepthMapWidthFocus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShadowRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseDepthMapAutoFocus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseDepthMapShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shadowRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def useDepthMapAutoFocus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def useDepthMapShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnNumericAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createAddr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSoftMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSoftMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasSoftMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasSoftMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSoftMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSoftMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def unitType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnNumericData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData2Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData2Float(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData2Int(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData2Short(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData3Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData3Float(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData3Int(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData3Short(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getData4Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numericType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData2Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData2Float(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData2Int(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData2Short(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData3Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData3Float(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData3Int(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData3Short(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setData4Double(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnNurbsCurve(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def area(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def closestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createWithEditPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cv(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cvs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def degree(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def distanceToPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def findLengthFromParam(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def findParamFromLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def form(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDerivativesAtParm(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getKnotDomain(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getKnots(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getParamAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPointAtParam(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasHistoryOnCreate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isParamOnCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPlanar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPointOnCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def knot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeMultipleEndKnots(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numCVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numKnots(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numSpans(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rebuild(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeKnot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKnot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKnots(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tangent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def updateCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnNurbsCurveData(MFnGeometryData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnNurbsSurface(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def area(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assignUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assignUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def boundaryType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clearUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def closestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cv(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cvsInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cvsInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def degreeU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def degreeV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def distanceToPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def formInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def formInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAssignedUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedShaders(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDataObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDerivativesAtParm(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getKnotDomain(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getKnotsInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getKnotsInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getParamAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPatchUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPatchUVid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPatchUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPointAtParam(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTangents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTrimBoundaries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasHistoryOnCreate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isBezier(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFlipNorm(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFoldedOnBispan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isKnotU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isKnotV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isParamOnSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPointInTrimmedRegion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPointOnSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTrimmedSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isUniform(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def knotInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def knotInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numBoundaries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numCVsInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numCVsInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numKnotsInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numKnotsInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numNonZeroSpansInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numNonZeroSpansInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numPatches(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numPatchesInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numPatchesInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numRegions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numSpansInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numSpansInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def projectCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeKnotInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeKnotInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeOneKnotInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeOneKnotInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKnotInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKnotInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKnotsInU(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKnotsInV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tesselate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def trim(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def trimWithBoundaries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnNurbsSurfaceData(MFnGeometryData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnOpenPBRSurfaceShader(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def baseColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def baseDiffuseRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def baseMetalness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def baseWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatDarkening(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatRoughnessAnisotropy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emissionLuminance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fuzzColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fuzzRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fuzzWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometryOpacity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometryThinWalled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBaseColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBaseDiffuseRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBaseMetalness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBaseWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatDarkening(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatRoughnessAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setCoatWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEmissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEmissionLuminance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFuzzColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFuzzRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFuzzWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGeometryOpacity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGeometryThinWalled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularRoughnessAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setSpecularWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceRadiusScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceScatterAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setSubsurfaceWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThinFilmIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThinFilmThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThinFilmWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionDepth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionDispersionAbbeNumber(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setTransmissionDispersionScale(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setTransmissionScatter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionScatterAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setTransmissionWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularRoughnessAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def specularWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceRadiusScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceScatterAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def subsurfaceWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thinFilmIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thinFilmThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thinFilmWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transmissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionDepth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionDispersionAbbeNumber(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def transmissionDispersionScale(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def transmissionScatter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionScatterAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def transmissionWeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnPartition(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addMember(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isRenderPartition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeMember(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnPhongEShader(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def highlightSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def roughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHighlightSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWhiteness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def whiteness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnPhongShader(MFnReflectShader):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def cosPower(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCosPower(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnPluginData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def constData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def data(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnPointArrayData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnPointLight(MFnNonExtendedLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnReference(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def associatedNamespace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def containsNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def containsNodeExactly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fileName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def ignoreReferenceEdits(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isExportEditsFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLoaded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLocked(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValidReference(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nodes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentAssembly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentFileName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentReference(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setIgnoreReferenceEdits(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnReflectShader(MFnLambertShader):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def reflectedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reflectedRayDepthLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reflectivity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setReflectedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setReflectedRayDepthLimit(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setReflectivity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnSet(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addMember(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addMembers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def annotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getIntersection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMemberPaths(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMembers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUnion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasRestrictions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersectsWith(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isMember(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeMember(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeMembers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def restriction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAnnotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnSingleIndexedComponent(MFnComponent):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def element(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def elementMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnSphereData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def radius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnSpotLight(MFnNonExtendedLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def barnDoorAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def barnDoors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def coneAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dropOff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def penumbraAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBarnDoorAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBarnDoors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setConeAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDropOff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEndDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPenumbraAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseDecayRegions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def useDecayRegions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnStandardSurfaceShader(MFnDependencyNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def base(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def baseColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def coat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatAffectColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatAffectRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatAnisotropy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coatRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def diffuseRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def metalness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def opacity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBase(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBaseColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatAffectColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatAffectRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatAnisotropy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoatRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDiffuseRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEmissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMetalness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOpacity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSheen(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSheenColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSheenRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecular(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularAnisotropy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpecularRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceAnisotropy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsurfaceScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThinFilmIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThinFilmThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThinWalled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionDepth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionDispersion(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setTransmissionExtraRoughness(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setTransmissionScatter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTransmissionScatterAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def sheen(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sheenColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sheenRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specular(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularAnisotropy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def specularRoughness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceAnisotropy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subsurfaceScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thinFilmIOR(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thinFilmThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thinWalled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionDepth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionDispersion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionExtraRoughness(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def transmissionScatter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transmissionScatterAnisotropy(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...

class MFnStringArrayData(MFnData):
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnStringData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def string(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnSubd(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def collapse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def convertToNurbs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def creasesClearAll(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def creasesGetAll(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def creasesSetAll(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createBaseMesh(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeAdjacentPolygon(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeBetween(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeCreaseRelevant(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeIsBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeIsCreased(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeIsValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeSetCrease(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edgeVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def editsPending(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def editsUpdateAll(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluatePosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluatePositionAndNormal(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getConnectedShaders(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCubicSpline(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def levelFullySubdivideTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def levelMaxAllowed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def levelMaxCurrent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonBaseMeshAdd(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonBaseMeshAddWithUVs(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def polygonChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonCountMaxWithGivenBaseMesh(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def polygonEdgeCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonGetCenterUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonGetVertexUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonHasChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonHasVertexUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonIsValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonSetUseUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonSetVertexUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonSubdivide(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonVertexCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tesselate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tessellateViaNurbs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def updateAllEditsAndCreases(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateSubdSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexAdjacentVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexBaseIndexFromVertexId(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def vertexBaseMeshAdd(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexBaseMeshAddWithIndex(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def vertexBaseMeshGet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexBaseMeshGetWithId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexBaseMeshSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexBaseMeshSetWithId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexCreaseRelevant(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexEditGet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexEditSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexEditsClearAllNonBase(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def vertexEditsGetAllNonBase(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexEditsSetAllNonBase(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexIdFromBaseVertexIndex(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def vertexIncidentEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexIncidentPolygons(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexIsBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexIsCreased(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexIsValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexPositionGet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexPositionGetNoEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexPositionSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexSetCrease(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexValence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnSubdData(MFnGeometryData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnSubdNames:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def base(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def baseFaceId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def baseFaceIdFromIndex(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def baseFaceIdFromLong(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def baseFaceIndex(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def baseFaceIndexFromId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def corner(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def first(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def fromMUint64(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def fromSelectionIndices(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def level(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def levelOneFaceAsLong(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def levelOneFaceId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def levelOneFaceIdFromIndex(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def levelOneFaceIdFromLong(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def levelOneFaceIndexFromId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def nonBaseFaceEdges(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def nonBaseFaceVertices(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def parentFaceId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def path(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def toMUint64(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def toSelectionIndices(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnTransform(MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def balanceTransformation(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clearRestPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def enableLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotationQuaternion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLimited(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kRotateMaxX: int = 13
    kRotateMaxY: int = 15
    kRotateMaxZ: int = 17
    kRotateMinX: int = 12
    kRotateMinY: int = 14
    kRotateMinZ: int = 16
    kShearMaxYZ: int = 11
    kShearMinYZ: int = 10
    kTranslateMaxX: int = 19
    kTranslateMaxY: int = 21
    kTranslateMaxZ: int = 23
    kTranslateMinX: int = 18
    kTranslateMinY: int = 20
    kTranslateMinZ: int = 22
    def limitValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resetFromRestPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resetTransformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def restPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateByQuaternion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotationOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scaleBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRestPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivotTranslation(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotationOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotationQuaternion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shearBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def translateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def translation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnTripleIndexedComponent(MFnComponent):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnTypedAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attrType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnUInt64ArrayData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnUint64SingleIndexedComponent(MFnComponent):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def element(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCompleteData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnUnitAttribute(MFnAttribute):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSoftMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSoftMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasSoftMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasSoftMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kLast: int = 4
    kTime: int = 3
    def setDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSoftMax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSoftMin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def unitType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnVectorArrayData(MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnVolumeLight(MFnPointLight):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def arc(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def colorRamp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def coneEndRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emitAmbient(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lightShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def penumbraRamp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setArc(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setConeEndRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEmitAmbient(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFaceAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLightShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShadowAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVolumeLightDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shadowAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def volumeLightDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MGlobal:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    @staticmethod
    def addToModel(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addToModelAt(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def animSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def apiVersion(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def clearSelectionList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def closeErrorLog(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def componentSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentToolContext(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def customVersion(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def customVersionClient(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def customVersionMajor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def customVersionMinor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def customVersionString(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def defaultErrorLogPathName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deleteNode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def disableStow(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def displayError(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def displayInfo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def displayWarning(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def doErrorLogEntry(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def errorLogPathName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def errorLoggingIsOn(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def executeCommand(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def executeCommandOnIdle(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def executeCommandStringResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def executePythonCommand(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def executePythonCommandOnIdle(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def executePythonCommandStringResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getAbsolutePathToResources(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getActiveSelectionList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getAssociatedSets(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFunctionSetList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getHiliteList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getLiveList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getPreselectionHiliteList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getRichSelection(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getSelectionListByName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUILanguage(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def initOptionVar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isCustomVersion(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isDefaultLanguage(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isInCrashHandler(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isRedoing(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isSelected(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isUndoing(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isYAxisUp(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isZAxisUp(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kAddToHeadOfList: int = 4
    kAddToList: int = 2
    kBaseUIMode: int = 3
    kBatch: int = 1
    kComplete: int = 0
    kInteractive: int = 0
    kLibraryApp: int = 2
    kRemoveFromList: int = 3
    kReplaceList: int = 0
    kRestricted: int = 1
    kSelectComponentMode: int = 1
    kSelectLeafMode: int = 3
    kSelectObjectMode: int = 0
    kSelectRootMode: int = 2
    kSelectTemplateMode: int = 4
    kSurfaceSelectMethod: int = 0
    kWireframeSelectMethod: int = 1
    kXORWithList: int = 1
    @staticmethod
    def mayaFeatureSet(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def mayaName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def mayaState(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def mayaVersion(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def miscSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def objectSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def optionVarDoubleValue(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def optionVarExists(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def optionVarIntValue(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def optionVarStringValue(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeFromModel(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeOptionVar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def resetToDefaultErrorLogPathName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def select(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def selectByName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def selectCommand(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def selectFromScreen(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def selectionMethod(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def selectionMode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setActiveSelectionList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setAnimSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setComponentSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDisableStow(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDisplayCVs(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setErrorLogPathName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setHiliteList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setMiscSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setObjectSelectionMask(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setOptionVarValue(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setPreselectionHiliteList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setRichSelection(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setSelectionMode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setTrackSelectionOrderEnabled(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setYAxisUp(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setZAxisUp(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def sourceFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def startErrorLogging(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def stopErrorLogging(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def trackSelectionOrderEnabled(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def unselect(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def unselectByName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def upAxis(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def viewFrame(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MIffFile:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginGet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginReadGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def close(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endGet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endReadGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getChunk(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iffGetFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iffGetInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iffGetShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def open(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MIffTag:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kCAT: MIffTag
    kCAT4: MIffTag
    kCAT8: MIffTag
    kFOR4: MIffTag
    kFOR8: MIffTag
    kFORM: MIffTag
    kLIS4: MIffTag
    kLIS8: MIffTag
    kLIST: MIffTag
    kPRO4: MIffTag
    kPRO8: MIffTag
    kPROP: MIffTag
    thisown: bool

class MImage:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def convertPixelFormat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depthMap(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def filterExists(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def floatPixels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDepthMapRange(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDepthMapSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def haveDepth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isRGBA(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kByte: int = 1
    kFloat: int = 2
    kHeightFieldBumpFormat: int = 1
    kNoFormat: int = 0
    kNormalMapBumpFormat: int = 2
    kUnknown: int = 0
    kUnknownFormat: int = 3
    def pixelType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pixels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readDepthMap(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readFromFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readFromTextureNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def release(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDepthMap(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFloatPixels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPixels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRGBA(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def verticalFlip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeToFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeToFileWithDepth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MImageFileInfo:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def channels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hardwareType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasAlpha(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasMipMaps(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def height(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def imageType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kHwTexture1D: int = 1
    kHwTexture2D: int = 2
    kHwTexture3D: int = 3
    kHwTextureCubeMap: int = 5
    kHwTextureRectangle: int = 4
    kHwTextureUnknown: int = 0
    kImageTypeBump: int = 3
    kImageTypeColor: int = 1
    kImageTypeNormal: int = 2
    kImageTypeUnknown: int = 0
    def numberOfImages(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pixelType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def width(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MInt64Array:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __delitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __radd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __setitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MIntArray:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __delitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __radd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __setitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MItCurveCV:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cv(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasHistoryOnCreate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def translateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItDag:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def depth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fullPathName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAllPaths(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def instanceCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isInstanced(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def item(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kBreadthFirst: int = 2
    kDepthFirst: int = 1
    kInvalidType: int = 0
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def partialPathName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def prune(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def root(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def traverseUnderWorld(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def willTraverseUnderWorld(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItDependencyGraph:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def atNodeLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentRelationship(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentTraversal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def disablePruningOnFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def enablePruningOnFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNodePath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNodesVisited(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPlugPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPlugsVisited(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDirectionDownStream(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPruningOnFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTraversalDepthFirst(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTraversingOverWorldSpaceDependents(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    kBreadthFirst: int = 1
    kConnectedTo: int = 1
    kDependsOn: int = 0
    kDepthFirst: int = 0
    kDownstream: int = 0
    kEvaluationGraph: int = 2
    kNodeLevel: int = 0
    kPlugLevel: int = 1
    kUpstream: int = 1
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nodeDepth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def previousPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def prune(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resetFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resetTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rootNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rootPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCurrentFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCurrentRelationship(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTraversalOverWorldSpaceDependents(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def thisNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thisNodeHasUnknownType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thisPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def toggleDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def toggleLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def toggleTraversal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItDependencyNodes:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def item(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def thisNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MItEdits:
    """ """

    ALL_EDITS: int = 1
    SUCCESSFUL_EDITS: int = 0
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addRemoveAttrEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectDisconnectEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentEditString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentEditType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fcurveEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isReverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kForward: int = 0
    kReverse: int = 1
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentingEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeCurrentEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAttrEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MItGeometry:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def allPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def component(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def count(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def exactCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def positionIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAllPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def weight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItInstancer:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def instancer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def instancerId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def instancerPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nextInstancer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nextParticle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def particleId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def path(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pathId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MItMeshEdge:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def center(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def cleanupSmoothing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectedToEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectedToFace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def count(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def edge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geomChanged(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSmooth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def onBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def point(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSmoothing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def updateSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItMeshFaceVertex:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def faceId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def faceVertId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def faceVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geomChanged(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBinormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTangent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normalId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tangentId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def updateSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItMeshPolygon:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def center(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def count(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geomChanged(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getArea(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAxisAtUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorIndices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPointAtUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTriangle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTriangles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVArea(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVSetNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasValidTriangulation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isConnectedToEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isConnectedToFace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isConnectedToVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isConvex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isHoled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLamina(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPlanar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isStarlike(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isUVReversed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normalIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numTriangles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def onBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def point(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygon(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def polygonVertexCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tangentIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def updateSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertexIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zeroArea(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zeroUVArea(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItMeshVertex:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectedToEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectedToFace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def count(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geomChanged(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorIndices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConnectedVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormalIndices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getOppositeVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVIndices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedEdges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedFaces(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def onBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def translateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MItSelectionList:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDagPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDependNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getStrings(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasComponents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def itemType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kAnimSelectionItem: int = 1
    kDNselectionItem: int = 2
    kDagSelectionItem: int = 0
    kPlugSelectionItem: int = 3
    kUnknownItem: int = -1
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MItSubdEdge:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSharp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def level(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSharpness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MItSubdFace:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def level(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MItSubdVertex:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def level(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MItSurfaceCV:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cv(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasHistoryOnCreate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isRowDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nextRow(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def translateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MIteratorType:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filterListEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFilterList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFilterType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getObjectType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kMDagPathObject: int = 1
    kMObject: int = 0
    kMPlugObject: int = 2
    def setFilterList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilterType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MLockMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kAddAttr: int = 5
    kChildReorder: int = 4
    kCreateChildInstance: int = 6
    kCreateNodeInstance: int = 5
    kCreateParentInstance: int = 7
    kLast: int = 10
    kLastDAG: int = 8
    kLastPlug: int = 8
    kLockAttr: int = 9
    kLockNode: int = 3
    kPlugAttrValChange: int = 3
    kPlugConnect: int = 6
    kPlugDisconnect: int = 7
    kPlugRemoveAttr: int = 4
    kPlugRenameAttr: int = 5
    kRemoveAttr: int = 6
    kRenameAttr: int = 7
    kReparent: int = 3
    kUnlockAttr: int = 8
    kUnlockNode: int = 4
    @staticmethod
    def setNodeLockDAGQueryCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setNodeLockQueryCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setPlugLockQueryCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MMatrix:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __call__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def adjoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def det3x3(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def det4x4(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def homogenize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def identity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSingular(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    matrix: Any
    def setToIdentity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToProduct(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transpose(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MMatrixArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

MMatrix_kTol: float = 1e-10

class MMeshIntersector:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getClosestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCreated(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MMeshIsectAccelParams:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MMeshSmoothOptions:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def boundaryRule(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def divisions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kAlwaysSharp: int = 3
    kCatmullClark: int = 0
    kChaikin: int = 1
    kCreaseAll: int = 1
    kCreaseEdge: int = 2
    kInvalid: int = -1
    kInvalidBoundary: int = -1
    kInvalidCreaseMethod: int = -1
    kInvalidSubdivision: int = -1
    kLast: int = 3
    kLastBoundary: int = 4
    kLastCreaseMethod: int = 2
    kLastSubdivision: int = 4
    kLegacy: int = 0
    kNone: int = 0
    kNormal: int = 0
    kOpenSubdivCatmullClarkAdaptive: int = 3
    kOpenSubdivCatmullClarkUniform: int = 2
    kSharpEdges: int = 2
    kSharpEdgesAndCorners: int = 1
    def keepBorderEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def keepHardEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def openSubdivCreaseMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def openSubdivFaceVaryingBoundary(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def openSubdivSmoothTriangles(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def openSubdivVertexBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def propEdgeHardness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBoundaryRule(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDivisions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKeepBorderEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKeepHardEdge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOpenSubdivCreaseMethod(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setOpenSubdivFaceVaryingBoundary(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setOpenSubdivSmoothTriangles(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setOpenSubdivVertexBoundary(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setPropEdgeHardness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSmoothUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSmoothness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubdivisionType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def smoothUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def smoothness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def subdivisionType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MMessage:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentCallbackId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCallableInfo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kDefaultAction: int = 0
    kDoAction: int = 2
    kDoNotDoAction: int = 1
    @staticmethod
    def nodeCallbacks(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registeringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeCallbacks(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setCallableInfo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setRegisteringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def stealCallableInfo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def stopRegisteringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MMessageNode:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    fClientPtr: Any
    fHeadNode: Any
    fId: Any
    fNextNode: Any
    fServerPtr: Any
    fSubClientPtr: Any
    isValid: bool
    thisown: bool

class MModelMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addAfterDuplicateCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addBeforeDuplicateCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeAddedToModelCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeRemovedFromModelCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addPostDuplicateNodeListCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MNamespace:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getNamespaceFromName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getNamespaceObjects(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getNamespaces(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def makeNamepathAbsolute(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def moveNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def namespaceExists(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def parentNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def relativeNames(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def renameNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def rootNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setCurrentNamespace(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setRelativeNames(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def stripNamespaceFromName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def validateName(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MNodeCacheDisablingInfo:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def getCacheDisabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCacheDisabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMitigation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setReason(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MNodeCacheDisablingInfoHelper:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kLastConnectionTest: int = 3
    kTestDefaultValue: int = 0
    kTestDirtyPlug: int = 0
    kTestHierarchy: int = 1
    kTestPlug: int = 2
    @staticmethod
    def setUnsafeNode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUnsafeValue(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def testAnimatedAttribute(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def testBooleanAttribute(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MNodeCacheSetupInfo:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def getPreference(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRequirement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kLastPreference: int = 1
    kLastRequirement: int = 1
    kSimulationSupport: int = 0
    kWantToCacheByDefault: int = 0
    def setPreference(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRequirement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MNodeClass:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addExtensionAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addToClassification(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attributeCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def classification(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAttributes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pluginName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeExtensionAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeExtensionAttributeIfUnset(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def removeFromClassification(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def typeName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MNodeMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addAttributeAddedOrRemovedCallback(
        *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    @staticmethod
    def addAttributeChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addKeyableChangeOverride(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNameChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeAboutToDeleteCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeDestroyedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeDirtyCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeDirtyPlugCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodePreRemovalCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addUuidChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kAttributeAdded: int = 64
    kAttributeArrayAdded: int = 4096
    kAttributeArrayRemoved: int = 8192
    kAttributeEval: int = 4
    kAttributeKeyable: int = 512
    kAttributeLocked: int = 16
    kAttributeRemoved: int = 128
    kAttributeRenamed: int = 256
    kAttributeSet: int = 8
    kAttributeUnkeyable: int = 1024
    kAttributeUnlocked: int = 32
    kIncomingDirection: int = 2048
    kKeyChangeLast: int = 3
    kLast: int = 32768
    kOtherPlugSet: int = 16384
    thisown: bool

class MNurbsIntersector:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getClosestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getIntersect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getIntersects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCreated(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MObject:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def apiType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def apiTypeStr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasFn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNull(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kNullObj: MObject
    thisown: bool

class MObjectArray:
    """ """
    def __getitem__(*args: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MObjectHandle:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hashCode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAlive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def object(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def objectHashCode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectRef(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MObjectSetMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addSetMembersModifiedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MParentingEdit(MEdit):
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def parent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentedObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parentedObjectName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPlane:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def directedDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def distance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPlug:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def array(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt64(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMDataHandle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def child(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectedTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectionByPhysicalIndex(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def constructHandle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def destinations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def destinationsWithConversions(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def destructHandle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def elementByLogicalIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def elementByPhysicalIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateNumElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getExistingArrayAttributeIndices(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getSetAttrCmds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def info(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCachingFlagSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isChannelBoxFlagSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isChild(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCompound(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isConnected(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDefaultValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDestination(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDynamic(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isElement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isExactlyEqual(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFreeToChange(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFromReferencedFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isIgnoredWhenRendering(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isKeyable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLocked(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNetworked(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNull(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isProcedural(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isProxy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSource(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kAll: int = 0
    kChanged: int = 2
    kChildrenNotFreeToChange: int = 2
    kFreeToChange: int = 0
    kLastAttrSelector: int = 3
    kNonDefault: int = 1
    kNotFreeToChange: int = 1
    def logicalIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def node(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numConnectedElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def partialName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def proxied(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectAncestorLogicalIndex(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCaching(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setChannelBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setChar(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInt64(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKeyable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLocked(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMDataHandle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMPxData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNumElements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def source(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sourceWithConversion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPlugArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPoint:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __call__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __div__(self, *args: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __truediv__(self, *args: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cartesianize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def distanceTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def homogenize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def origin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rationalize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    w: float
    x: float
    y: float
    z: float

class MPointArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPointOnMesh:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def faceIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBarycentricCoords(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def triangleIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPointOnNurbs:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

MPoint_kTol: float = 1e-10

class MPolyMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addColorSetChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addPolyComponentIdChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addPolyTopologyChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addUVSetChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deletedId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kLastErrorIndex: int = 3
    thisown: bool

class MProfiler:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    @staticmethod
    def addCategory(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def categoryRecording(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def eventBegin(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def eventDataAvailable(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def eventEnd(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getAllCategories(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getBufferSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCPUId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCategoryIndex(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCategoryInfo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCategoryName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getDescription(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getEventCategory(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getEventCount(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getEventDuration(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getEventName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getEventTime(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getNumberOfCPUs(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getThreadDuration(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getThreadId(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isDataFromFile(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isSignalEvent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kColorA_L1: int = 0
    kColorA_L2: int = 1
    kColorA_L3: int = 2
    kColorB_L1: int = 3
    kColorB_L2: int = 4
    kColorB_L3: int = 5
    kColorC_L1: int = 6
    kColorC_L2: int = 7
    kColorC_L3: int = 8
    kColorCount: int = 18
    kColorD_L1: int = 9
    kColorD_L2: int = 10
    kColorD_L3: int = 11
    kColorE_L1: int = 12
    kColorE_L2: int = 13
    kColorE_L3: int = 14
    kColorG_L1: int = 15
    kColorG_L2: int = 16
    kColorG_L3: int = 17
    @staticmethod
    def loadRecording(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def recordingActive(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeCategory(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def resetRecording(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def saveRecording(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setBufferSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setCategoryRecording(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setRecordingActive(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def signalEvent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

def MProfilingContextManager(
    categoryId: Unknown,
    colorIndex: Unknown,
    eventName: Unknown,
    description: Unknown = None,
    associatedNode: MObject = ...,
) -> Any:
    """Context manager that defines a profiling scope around a block of code.

    Parameters
    ----------
    categoryId : int
            The index of the category which the event belongs to.
    colorIndex : MProfiler.ProfilingColor
            The color to draw the profiling result in Profiler Window.
    eventName : string
            The name of the event.
    description : string (optional)
            Description of the event.
    associatedNode : MObject (optional)
            The dependency node associated with the event.

    Example
    -------
    >>> import maya.OpenMaya as OM
    >>> categoryIndex = OM.MProfiler.addCategory("Python Scripts")
    >>> def Factorial(number):
    ...     # Instrument the following block of code:
    ...     with OM.MProfilingContextManager(categoryIndex, OM.MProfiler.kColorE_L1, "Factorial", "FactorialDesc"):
    ...             result = 1
    ...             for i in xrange(2, number+1):
    ...                     result *= i
    ...     return result
    ...
    >>>
    """

class MProfilingScope:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MQuaternion:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __neg__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asEulerRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def conjugate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def conjugateIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def exp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAxisAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    identity: MQuaternion
    def inverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def invertIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def log(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def negateIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normalizeIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scaleIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAxisAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToXAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToYAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToZAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    w: float
    x: float
    y: float
    z: float

class MRampAttribute:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createColorRamp(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createCurveRamp(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createRamp(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorAtPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorsAtPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumEntries(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getValueAtPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getValuesAtPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isColorRamp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCurveRamp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kLinear: int = 1
    kNone: int = 0
    kSmooth: int = 2
    kSpline: int = 3
    def pack(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sampleColorRamp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sampleValueRamp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColorAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInterpolationAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPositionAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRamp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setValueAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MRenderPassDef:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDoubleParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addFloatParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addIntParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAttributeType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDescription(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getID(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getImplementation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MRenderPassRegistry:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getRenderPassDefinition(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registerRenderPassDefinition(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MRichSelection:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSymmetry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSymmetryMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSymmetryPlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MSceneMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCheckCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCheckFileCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCheckReferenceCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addConnectionFailedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNamespaceRenamedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addReferenceCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addStringArrayCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kAfterCreateReference: int = 45
    kAfterCreateReferenceAndRecordEdits: int = 50
    kAfterExport: int = 11
    kAfterExportReference: int = 21
    kAfterFileRead: int = 8
    kAfterImport: int = 4
    kAfterImportReference: int = 19
    kAfterLoadReference: int = 37
    kAfterLoadReferenceAndRecordEdits: int = 48
    kAfterOpen: int = 6
    kAfterPluginLoad: int = 41
    kAfterPluginUnload: int = 43
    kAfterReference: int = 15
    kAfterRemoveReference: int = 17
    kAfterSave: int = 13
    kAfterSceneReadAndRecordEdits: int = 9
    kAfterSoftwareFrameRender: int = 27
    kAfterSoftwareRender: int = 25
    kAfterUnloadReference: int = 23
    kBeforeCreateReference: int = 44
    kBeforeCreateReferenceAndRecordEdits: int = 49
    kBeforeCreateReferenceCheck: int = 39
    kBeforeExport: int = 10
    kBeforeExportCheck: int = 35
    kBeforeExportReference: int = 20
    kBeforeFileRead: int = 7
    kBeforeImport: int = 3
    kBeforeImportCheck: int = 34
    kBeforeImportReference: int = 18
    kBeforeLoadReference: int = 36
    kBeforeLoadReferenceAndRecordEdits: int = 47
    kBeforeLoadReferenceCheck: int = 38
    kBeforeNewCheck: int = 31
    kBeforeOpen: int = 5
    kBeforeOpenCheck: int = 32
    kBeforePluginLoad: int = 40
    kBeforePluginUnload: int = 42
    kBeforeReference: int = 14
    kBeforeReferenceCheck: int = 39
    kBeforeRemoveReference: int = 16
    kBeforeSave: int = 12
    kBeforeSaveCheck: int = 33
    kBeforeSoftwareFrameRender: int = 26
    kBeforeSoftwareRender: int = 24
    kBeforeUnloadReference: int = 22
    kExportStarted: int = 46
    kLast: int = 51
    kMayaExiting: int = 30
    kMayaInitialized: int = 29
    kSoftwareRenderInterrupted: int = 28
    thisown: bool

class MScriptUtil:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asBoolPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asCharPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble2Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble3Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble4Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDoublePtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat2Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat3Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat4Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloatPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt2Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt3Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInt4Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asIntPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort2Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort3Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort4Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShortPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUcharPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUint2Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUint3Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUint4Ptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUintPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUshortPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createFloatArrayFromList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createFloatMatrixFromList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def createFromDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createFromInt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createFromList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createIntArrayFromList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createMatrixFromList(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getBool(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getBoolArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getChar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCharArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getDouble(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getDouble2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getDouble3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getDouble4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getDoubleArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFloat(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFloat2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFloat3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFloat4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFloatArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getInt(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getInt2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getInt3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getInt4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getIntArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getShort(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getShort2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getShort3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getShort4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getShortArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUchar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUcharArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUint(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUint2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUint3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUint4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUintArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getUshortArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setBool(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setBoolArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setChar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setCharArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDouble(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDouble2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDouble3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDouble4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDoubleArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setFloat(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setFloat2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setFloat3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setFloat4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setFloatArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setInt(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setInt2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setInt3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setInt4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setIntArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setShort(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setShort2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setShort3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setShort4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setShortArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUchar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUcharArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUint(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUint2ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUint3ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUint4ArrayItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUintArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setUshortArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MSelectionList:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def add(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDagPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDependNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSelectionStrings(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasItemPartly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEmpty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kMergeNormal: int = 0
    kRemoveFromList: int = 2
    kXORWithList: int = 1
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def merge(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def replace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def toggle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MSelectionMask:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __or__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deregisterSelectionType(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getSelectionTypePriority(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kSelectAnimAny: int = 68
    kSelectAnimCurves: int = 63
    kSelectAnimInTangents: int = 65
    kSelectAnimKeyframes: int = 64
    kSelectAnimMask: int = 67
    kSelectAnimOutTangents: int = 66
    kSelectCVs: int = 30
    kSelectCameras: int = 6
    kSelectClusters: int = 8
    kSelectCollisionModels: int = 21
    kSelectComponentsMask: int = 62
    kSelectCurveKnots: int = 47
    kSelectCurveParmPoints: int = 46
    kSelectCurves: int = 26
    kSelectCurvesOnSurfaces: int = 53
    kSelectDynamicConstraints: int = 82
    kSelectEdges: int = 42
    kSelectEditPoints: int = 32
    kSelectEmitters: int = 16
    kSelectFacets: int = 43
    kSelectFields: int = 17
    kSelectFluids: int = 77
    kSelectFollicles: int = 79
    kSelectGuideLines: int = 71
    kSelectHairSystems: int = 78
    kSelectHandles: int = 0
    kSelectHulls: int = 31
    kSelectIkEndEffectors: int = 3
    kSelectIkHandles: int = 2
    kSelectIsoparms: int = 52
    kSelectJointPivots: int = 57
    kSelectJoints: int = 4
    kSelectLatticePoints: int = 55
    kSelectLattices: int = 7
    kSelectLights: int = 5
    kSelectLocalAxis: int = 1
    kSelectLocators: int = 28
    kSelectManipulators: int = 70
    kSelectMeshComponents: int = 45
    kSelectMeshEdges: int = 34
    kSelectMeshFaces: int = 36
    kSelectMeshFreeEdges: int = 35
    kSelectMeshLines: int = 44
    kSelectMeshUVs: int = 40
    kSelectMeshVerts: int = 33
    kSelectMeshes: int = 12
    kSelectNCloths: int = 80
    kSelectNParticles: int = 83
    kSelectNRigids: int = 81
    kSelectNurbsCurves: int = 10
    kSelectNurbsSurfaces: int = 11
    kSelectObjectGroups: int = 75
    kSelectObjectsMask: int = 29
    kSelectOrientationLocators: int = 23
    kSelectPPStrokes: int = 54
    kSelectParticleShapes: int = 15
    kSelectParticles: int = 56
    kSelectPivots: int = 60
    kSelectPointsForGravity: int = 72
    kSelectPointsOnCurvesForGravity: int = 73
    kSelectPointsOnSurfacesForGravity: int = 74
    kSelectRigidBodies: int = 19
    kSelectRigidConstraints: int = 20
    kSelectRotatePivots: int = 59
    kSelectScalePivots: int = 58
    kSelectSculpts: int = 9
    kSelectSelectHandles: int = 61
    kSelectSketchPlanes: int = 14
    kSelectSprings: int = 18
    kSelectSubdiv: int = 13
    kSelectSubdivMeshEdges: int = 38
    kSelectSubdivMeshFaces: int = 39
    kSelectSubdivMeshMaps: int = 76
    kSelectSubdivMeshPoints: int = 37
    kSelectSurfaceEdge: int = 51
    kSelectSurfaceKnots: int = 49
    kSelectSurfaceParmPoints: int = 48
    kSelectSurfaceRange: int = 50
    kSelectSurfaces: int = 27
    kSelectTemplates: int = 69
    kSelectTextures: int = 25
    kSelectUVLocators: int = 24
    kSelectVertices: int = 41
    kSelectXYZLocators: int = 22
    @staticmethod
    def registerSelectionType(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MSetAttrEdit(MEdit):
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def plug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def plugName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MSpace:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kInvalid: int = 0
    kLast: int = 5
    kObject: int = 2
    kPostTransform: int = 3
    kPreTransform: int = 2
    kTransform: int = 1
    kWorld: int = 4
    thisown: bool

class MStreamUtils:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def readChar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def readCharBuffer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def readDouble(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def readFloat(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def readInt(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def stdErrorStream(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def stdOutStream(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def writeChar(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def writeCharBuffer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def writeDouble(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def writeFloat(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def writeInt(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MSyntax:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addArg(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addFlag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canQuery(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def enableEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def enableQuery(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kAngle: int = 8
    kBoolean: int = 2
    kDistance: int = 7
    kDouble: int = 4
    kInvalidArgType: int = 0
    kInvalidObjectFormat: int = 0
    kLastArgType: int = 11
    kLastObjectFormat: int = 4
    kLong: int = 3
    kNoArg: int = 1
    kNone: int = 1
    kSelectionItem: int = 10
    kSelectionList: int = 3
    kString: int = 5
    kStringObjects: int = 2
    kTime: int = 9
    kUnsigned: int = 6
    def makeFlagMultiUse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeFlagQueryWithFullArgs(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def maxObjects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def minObjects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxObjects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMinObjects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def useSelectionAsDefault(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MTesselationParams:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    fsDefaultTesselationParams: MTesselationParams
    kGeneralFormat: int = 2
    kLastFlag: int = 11
    kQuads: int = 1
    kSpanEquiSpaced: int = 3
    kStandardFitFormat: int = 1
    kSurface3DDistance: int = 0
    kSurface3DEquiSpaced: int = 1
    kSurfaceEquiSpaced: int = 2
    kTriangleCountFormat: int = 0
    kTriangles: int = 0
    kUseChordHeightRatio: int = 1
    kUseEdgeSmooth: int = 10
    kUseFractionalTolerance: int = 0
    kUseMaxEdgeLength: int = 3
    kUseMaxNumberPolys: int = 4
    kUseMaxSubdivisionLevel: int = 5
    kUseMaxUVRectangleSize: int = 7
    kUseMinEdgeLength: int = 2
    kUseMinScreenSize: int = 6
    kUseRelativeTolerance: int = 9
    kUseTriangleEdgeSwapping: int = 8
    def set3DDelta(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBoundingBoxDiagonal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setChordHeightRatio(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEdgeSmoothFactor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFitTolerance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFormatType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxEdgeLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxNumberPolys(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxSubdivisionLevel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxUVRectangleSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMinEdgeLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMinScreenSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOutputType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRelativeFitTolerance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStdChordHeightRatio(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStdFractionalTolerance(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setStdMinEdgeLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubdivisionFlag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTriangleCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUDistanceFraction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUIsoparmType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUNumber(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVDistanceFraction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVIsoparmType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVNumber(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWorldspaceToScreenTransform(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    thisown: bool

class MTime:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __div__(self, *args: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ge__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __gt__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __idiv__(self, *args: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __itruediv__(self, *args: Unknown) -> Any: ...
    def __le__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __lt__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __truediv__(self, *args: Unknown) -> Any: ...
    def asUnits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    k100FPS: int = 25
    k10FPS: int = 18
    k119_88FPS: int = 51
    k1200FPS: int = 38
    k120FPS: int = 26
    k125FPS: int = 27
    k12FPS: int = 19
    k1500FPS: int = 39
    k150FPS: int = 28
    k15FPS: int = 5
    k16FPS: int = 20
    k2000FPS: int = 40
    k200FPS: int = 29
    k20FPS: int = 21
    k23_976FPS: int = 43
    k240FPS: int = 30
    k24FPS: int = 6
    k250FPS: int = 31
    k25FPS: int = 7
    k29_97DF: int = 45
    k29_97FPS: int = 44
    k2FPS: int = 12
    k3000FPS: int = 41
    k300FPS: int = 32
    k30FPS: int = 8
    k375FPS: int = 33
    k3FPS: int = 13
    k400FPS: int = 34
    k40FPS: int = 22
    k44100FPS: int = 48
    k47_952FPS: int = 46
    k48000FPS: int = 49
    k48FPS: int = 9
    k4FPS: int = 14
    k500FPS: int = 35
    k50FPS: int = 10
    k59_94FPS: int = 47
    k5FPS: int = 15
    k6000FPS: int = 42
    k600FPS: int = 36
    k60FPS: int = 11
    k6FPS: int = 16
    k750FPS: int = 37
    k75FPS: int = 23
    k80FPS: int = 24
    k8FPS: int = 17
    k90FPS: int = 50
    kFilm: int = 6
    kGames: int = 5
    kHours: int = 1
    kInvalid: int = 0
    kLast: int = 53
    kMilliseconds: int = 4
    kMinutes: int = 2
    kNTSCField: int = 11
    kNTSCFrame: int = 8
    kPALField: int = 10
    kPALFrame: int = 7
    kSeconds: int = 3
    kShowScan: int = 9
    kUserDef: int = 52
    @staticmethod
    def setUIUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUnit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    @staticmethod
    def ticksPerSecond(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def uiUnit(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def unit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MTimeArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MTimeRange:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __or__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def bounds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def contains(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def empty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def intersects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MTimer:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginTimer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def elapsedTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endTimer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MTimerMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addTimerCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setSleepCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def sleepCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MTransformationMatrix:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addRotationQuaternion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrixInverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asRotateMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asScaleMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def eulerRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotationQuaternion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    identity: MTransformationMatrix
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kInvalid: int = 0
    kLast: int = 7
    kXYZ: int = 1
    kXZY: int = 4
    kYXZ: int = 5
    kYZX: int = 2
    kZXY: int = 3
    kZYX: int = 6
    def reorderRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotationOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotationOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivotTranslation(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotationOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotationQuaternion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToRotationAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def translation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

MTransformationMatrix_kTol: float = 1e-10

class MTrimBoundaryArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMergedBoundary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reserve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def size(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MTypeId:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def id(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MURI:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addQueryItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAllQueryItemKeys(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAllQueryItemValues(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAuthority(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDirectory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFileName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFragment(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getHost(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPassword(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getQueryItemValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getQueryPairDelimiter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getQueryValueDelimiter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getScheme(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUserInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUserName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEmpty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isValidURI(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeAllQueryItems(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeQueryItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAuthority(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirectory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFileName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFragment(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHost(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPassword(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setQueryDelimiters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScheme(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setURI(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUserInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUserName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MUint64Array:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __delitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __radd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __setitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MUintArray:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __delitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __len__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __radd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __setitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MUserData:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteAfterUse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDeleteAfterUse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MUserEventMessage(MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addUserEventCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deregisterUserEvent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isUserEvent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def postUserEvent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registerUserEvent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MUuid:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def generate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def valid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MVector:
    """ """
    def __add__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __call__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __div__(self, *args: Unknown) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __iadd__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __idiv__(self, *args: Unknown) -> Any: ...
    def __imul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __isub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __itruediv__(self, *args: Unknown) -> Any: ...
    def __mul__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __neg__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __sub__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __truediv__(self, *args: Unknown) -> Any: ...
    def __xor__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def angle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isParallel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kWaxis: int = 3
    kXaxis: int = 0
    kYaxis: int = 1
    kZaxis: int = 2
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normalize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def one(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformAsNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    x: float
    def xAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def xNegAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    y: float
    def yAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def yNegAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    z: float
    def zAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zNegAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zero(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MVectorArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

MVector_kTol: float = 1e-10

class MWeight:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def influence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def seam(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInfluence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSeam(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

NULL: int = 0
STRICT: int = 1

class array2dDouble:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class array2dFloat:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class array3dDouble:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class array3dFloat:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class array3dInt:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class array4dDouble:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class array4dFloat:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class array4dInt:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def get(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getptr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class boolPtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def boolRefValue(ptr: Unknown) -> Any: ...

class charPtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def charRefValue(ptr: Unknown) -> Any: ...
def createBoolRef() -> Any: ...
def createCharRef() -> Any: ...
def createDoubleRef() -> Any: ...
def createFloatRef() -> Any: ...
def createIntRef() -> Any: ...
def createShortRef() -> Any: ...
def createUCharRef() -> Any: ...
def createUIntRef() -> Any: ...

cvar: Any

class doublePtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def doubleRefValue(ptr: Unknown) -> Any: ...

class floatPtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def floatRefValue(ptr: Unknown) -> Any: ...

class intPtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def intRefValue(ptr: Unknown) -> Any: ...

kDefaultNodeType: str = "dependNode"
kEulerRotationEpsilon: float = 1e-10
kMFnMeshInstanceUnspecified: int = -1
kMFnMeshPointTolerance: float = 1e-10
kMFnMeshTolerance: float = 0.001
kMFnNurbsEpsilon: float = 0.001
kMFnSubdPointTolerance: float = 1e-10
kMFnSubdTolerance: float = 0.001
kQuaternionEpsilon: float = 1e-10
kUnknownParameter: str = "unknown"

def setRefValue(refObject: Unknown, value: Unknown) -> Any: ...

class shortPtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def shortRefValue(ptr: Unknown) -> Any: ...

class uCharPtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def uCharRefValue(ptr: Unknown) -> Any: ...

class uIntPtr:
    """ """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def uIntRefValue(ptr: Unknown) -> Any: ...
