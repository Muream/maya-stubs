from __future__ import annotations

from typing import *

import maya.OpenMaya

Unknown = Any

class MExternalContentInfoTable:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addResolvedEntry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addUnresolvedEntry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEntryByIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInfoByKey(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MExternalContentLocationTable:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addEntry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEntryByIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLocationByKey(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MFnPlugin(maya.OpenMaya.MFnBase):
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addMenuItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def apiVersion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterAnimCurveInterpolator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterAttributePatternFactory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterCacheFormat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterConstraintCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterContextCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterControlCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterDevice(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterDisplayFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterDragAndDropBehavior(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterEvaluator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterFileTranslator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterIkSolver(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterImageFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterModelEditorCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterRenderPassImpl(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterRenderer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterTopologyEvaluator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterURIFileResolver(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findPlugin(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCallableInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isNodeRegistered(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kDefaultDataLocation: Any
    kImageFilePriorityDefault: int = 10
    kImageFilePriorityHigh: int = 10
    kImageFilePriorityHighest: int = 0
    kImageFilePriorityLow: int = 20
    kImageFilePriorityLowest: int = 30
    def loadPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matrixTypeIdFromXformId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerAnimCurveInterpolator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerAttributePatternFactory(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerBakeEngine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerCacheFormat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerConstraintCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerContextCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerControlCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerDevice(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerDisplayFilter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerDragAndDropBehavior(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerEvaluator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerFileTranslator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerIkSolver(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerImageFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerMaterialInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerModelEditorCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerRenderPassImpl(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerRenderer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerTopologyEvaluator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerTransform(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerUI(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerUIStrings(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerURIFileResolver(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registeringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeMenuItem(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCallableInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setRegisteringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVersion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def unregisterBakeEngine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def unregisterMaterialInfo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vendor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def version(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPx3dModelView:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def backgroundColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def backgroundColorBottom(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def backgroundColorTop(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginGL(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginXorDrawing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def colorAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def customDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def customDrawEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def destroyOnPanelDestruction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayAxisAtOriginOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayAxisOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayCameraAnnotationOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayHUD(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayStyle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doUpdateOnMove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawAdornments(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawAdornmentsNow(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawHUDNow(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawInterrupt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawOnePass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawText(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endGL(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endXorDrawing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filteredObjectList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fogColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fogDensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fogEnd(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fogMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fogSource(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fogStart(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAsM3dView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCameraHUDName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCameraSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorIndexAndTable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCurrentCameraSetCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getModelView(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getObjectsToView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def handleDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasStereoBufferSupport(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def includeInvisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isBackfaceCulling(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isBackgroundFogEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isBackgroundGradient(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFogEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isShadeActiveOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTextureDisplayEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTwoSidedLighting(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isVisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isWireframeOnShaded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isXrayEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kFogCoordinate: int = 1
    kFogExponential: int = 1
    kFogExponentialSquared: int = 2
    kFogFragment: int = 0
    kFogLinear: int = 0
    kLightActive: int = 2
    kLightAll: int = 0
    kLightDefault: int = 3
    kLightNone: int = 4
    kLightQuality: int = 5
    kLightSelected: int = 1
    def lightingMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def multipleDrawEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def multipleDrawPassCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numActiveColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numDormantColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numUserDefinedColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectDisplay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def okForMultipleDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def portHeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def portWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postMultipleDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postMultipleDrawPass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preMultipleDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preMultipleDrawPass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def processDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def refresh(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removingCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def requestOkForDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBackfaceCulling(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBackgroundFogEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCameraInDraw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCameraSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCurrentCameraSetCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCustomDrawEnable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDestroyOnPanelDestruction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayAxisAtOrigin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayCameraAnnotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayHUD(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayStyle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDoUpdateOnMove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawAdornments(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawCameraOverride(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawInterrupt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFogColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFogDensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFogEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFogEnd(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFogMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFogSource(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFogStart(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInStereoDrawMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIncludeInvisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLightingMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMultipleDrawEnable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectDisplay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectsToView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTextureDisplayEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTwoSidedLighting(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUserDefinedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setViewSelected(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setViewSelectedPrefix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setViewSelectedSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWireframeOnShaded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setXrayEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def templateColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def updateViewingParameters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def userDefinedColorIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewIsFiltered(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewSelected(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewSelectedPrefix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewSelectedSet(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewToObjectSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewToWorld(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def wantStereoGLBuffer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def worldToView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxAnimCurveInterpolator:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def initialize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kEvaluateAtKey: int = 1
    kLockType: int = 2
    thisown: Any
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def typeName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxAssembly(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activateRep(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activating(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addAddAttrEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addConnectAttrEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDeleteAttrEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDisconnectAttrEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addParentEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addSetAttrEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beforeSave(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canRepApplyEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def createRepresentation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteAllRepresentations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteRepresentation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInitialRep(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInstancePtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepLabel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepNamespace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRepresentations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def handlesAddEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inactivateRep(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def memberAdded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def memberRemoved(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def performActivate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def performInactivate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postActivateRep(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postApplyEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postLoad(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postUnapplyEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preApplyEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preUnapplyEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def repTypes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInstancePtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRepLabel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRepName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportsEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportsMemberChanges(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateRepNamespace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxAttributePatternFactory:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def createPatternsFromFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createPatternsFromString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxBakeEngine:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def bake(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getUVRange(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNeedTransparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxBlendShape(MPxGeometryFilter):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def deformData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    inputComponentsTarget: maya.OpenMaya.MObject
    inputGeomTarget: maya.OpenMaya.MObject
    inputPointsTarget: maya.OpenMaya.MObject
    inputTarget: maya.OpenMaya.MObject
    inputTargetGroup: maya.OpenMaya.MObject
    inputTargetItem: maya.OpenMaya.MObject
    targetWeights: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    weight: maya.OpenMaya.MObject

class MPxCacheConfigRuleFilter:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isMatch(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postRulesExecution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preRulesExecution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxCacheFormat:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginReadChunk(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginWriteChunk(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def close(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endReadChunk(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endWriteChunk(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def extension(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def findChannelName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def findTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def handlesDescription(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kRead: int = 0
    kReadWrite: int = 2
    kWrite: int = 1
    def open(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readArraySize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readChannelName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readDescription(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readDoubleArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readDoubleVectorArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readFloatArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readFloatVectorArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readHeader(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readInt32(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readIntArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readNextTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rewind(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def writeChannelName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeDescription(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeDoubleArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeDoubleVectorArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeFloatArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeFloatVectorArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeHeader(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeInt32(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeIntArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxCameraSet(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    active: maya.OpenMaya.MObject
    camera: maya.OpenMaya.MObject
    cameraLayer: maya.OpenMaya.MObject
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    order: maya.OpenMaya.MObject
    sceneData: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxCommand:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def appendToResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def clearResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def commandString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentDoubleResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentIntResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentResultType(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def currentStringResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def displayError(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def displayInfo(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def displayWarning(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def doIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCurrentResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasSyntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isCurrentResultArray(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isHistoryOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isUndoable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kDouble: int = 1
    kLong: int = 0
    kNoArg: int = 3
    kString: int = 2
    def redoIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCommandString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHistoryOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setResult(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUndoable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def syntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def undoIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxComponentShape(MPxSurfaceShape):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentToPlugs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createFullVertexGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getControlPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def localShapeInAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def match(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setControlPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformUsing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxConstraint(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintRotateOrderAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    enableRestPosition: maya.OpenMaya.MObject
    def getOutputAttributes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    lockOutput: maya.OpenMaya.MObject
    def passiveOutputAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def targetAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def weightAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxConstraintCommand(MPxCommand):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _syntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def aimVectorAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def appendSyntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectObjectAndConstraint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectTarget(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintEnableRestAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintInstancedAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintOutputAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintRestAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintTargetAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintTargetInstancedAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintTargetWeightAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def constraintTypeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createdConstraint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doCreate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doQuery(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getObjectAttributesArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def handleNewTargets(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasVectorFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def offsetAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parseArgs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def redoIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRestPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportsOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def targetType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def undoIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def upVectorAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def worldUpMatrixAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def worldUpTypeAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def worldUpVectorAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxContext:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _beginMarquee(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dragMarquee(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def _ignoreEntry(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def _newToolCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _releaseMarquee(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setCursor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setHelpString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setTitleString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def abortAction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addManipulator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def argTypeNumericalInput(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def completeAction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteAction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteManipulators(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doDrag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doEnterRegion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doExitRegion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doHold(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doPress(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doPtrMoved(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doRelease(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def feedbackNumericalInput(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def helpStateHasChanged(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def image(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inAlternateContext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kImage1: int = 0
    kImage2: int = 1
    kImage3: int = 2
    def newToolCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def processNumericalInput(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setImage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def stringClassName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def toolOffCleanup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def toolOnSetup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxContextCommand:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _parser(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _syntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def appendSyntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def doEditFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doQueryFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeObj(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setResult(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxControlCommand:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _control(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _parser(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _syntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def appendSyntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clearResult(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doEditFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doQueryFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeControl(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setResult(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def skipFlagForCreate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxData:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kData: int = 0
    kGeometryData: int = 1
    kLast: int = 2
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readASCII(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readBinary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeASCII(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeBinary(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxDeformerNode(MPxGeometryFilter):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def envelopeWeights(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDeformationDetails(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def indexMapper(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDeformationDetails(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseExistingConnectionWhenSetEditing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    weightList: maya.OpenMaya.MObject
    def weightValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    weights: maya.OpenMaya.MObject

class MPxDragAndDropBehavior:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectAttrToAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectAttrToNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectNodeToAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectNodeToNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shouldBeUsedFor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxEditData:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    _dataStringValue: Any
    _dataValue: Any
    def _getStringValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _getValue(self) -> Any: ...
    def _setStringValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setValue(self, value: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEqual(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLessThan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def performIsEqual(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def performIsLessThan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxEmitterNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def compute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def draw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evalEmission2dTexture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCurrentTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDeltaTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEmitterType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMaxDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMinDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getOwnerShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRandomSeed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRandomState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getStartTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getWorldMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getWorldPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasValidEmission2dTexture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    mCurrentTime: maya.OpenMaya.MObject
    mDeltaTime: maya.OpenMaya.MObject
    mDirection: maya.OpenMaya.MObject
    mDirectionX: maya.OpenMaya.MObject
    mDirectionY: maya.OpenMaya.MObject
    mDirectionZ: maya.OpenMaya.MObject
    mEmitterType: maya.OpenMaya.MObject
    mInheritFactor: maya.OpenMaya.MObject
    mIsFull: maya.OpenMaya.MObject
    mMaxDistance: maya.OpenMaya.MObject
    mMinDistance: maya.OpenMaya.MObject
    mOutput: maya.OpenMaya.MObject
    mOwnerCentroid: maya.OpenMaya.MObject
    mOwnerCentroidX: maya.OpenMaya.MObject
    mOwnerCentroidY: maya.OpenMaya.MObject
    mOwnerCentroidZ: maya.OpenMaya.MObject
    mOwnerPosData: maya.OpenMaya.MObject
    mOwnerVelData: maya.OpenMaya.MObject
    mRandState: maya.OpenMaya.MObject
    mRandStateX: maya.OpenMaya.MObject
    mRandStateY: maya.OpenMaya.MObject
    mRandStateZ: maya.OpenMaya.MObject
    mRate: maya.OpenMaya.MObject
    mSeed: maya.OpenMaya.MObject
    mSpeed: maya.OpenMaya.MObject
    mStartTime: maya.OpenMaya.MObject
    mSweptGeometry: maya.OpenMaya.MObject
    mWorldMatrix: maya.OpenMaya.MObject
    def randgen(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resetRandomState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRandomState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def volumePrimitiveBoundingBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def volumePrimitiveDistanceFromAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def volumePrimitivePointInside(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxFieldNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def compute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def draw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def falloffCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getForceAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iconBitmap(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iconSizeAndOrigin(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFalloffCurveConstantOne(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    mApplyPerVertex: maya.OpenMaya.MObject
    mAttenuation: maya.OpenMaya.MObject
    mDeltaTime: maya.OpenMaya.MObject
    mInputData: maya.OpenMaya.MObject
    mInputForce: maya.OpenMaya.MObject
    mInputMass: maya.OpenMaya.MObject
    mInputPPData: maya.OpenMaya.MObject
    mInputPositions: maya.OpenMaya.MObject
    mInputVelocities: maya.OpenMaya.MObject
    mMagnitude: maya.OpenMaya.MObject
    mMaxDistance: maya.OpenMaya.MObject
    mOutputForce: maya.OpenMaya.MObject
    mOwnerCentroid: maya.OpenMaya.MObject
    mOwnerCentroidX: maya.OpenMaya.MObject
    mOwnerCentroidY: maya.OpenMaya.MObject
    mOwnerCentroidZ: maya.OpenMaya.MObject
    mOwnerPPData: maya.OpenMaya.MObject
    mOwnerPosData: maya.OpenMaya.MObject
    mOwnerVelData: maya.OpenMaya.MObject
    mUseMaxDistance: maya.OpenMaya.MObject
    mWorldMatrix: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxFileResolver:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findURIResolverByName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findURIResolverByScheme(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getURIResolversByName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getURIResolversByScheme(*args: Unknown, **kwargs: Unknown) -> Any: ...
    kInput: int = 2
    kNone: int = 1
    @staticmethod
    def numURIResolvers(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def performAfterSaveURI(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolveURI(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolveURIWithContext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def resolverName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def uriScheme(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxFileTranslator:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def allowMultipleFileOptimization(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canBeOpened(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def defaultExtension(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def fileAccessMode(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def filter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def haveNamespaceSupport(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def haveReadMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def haveReferenceMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def haveWriteMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def identifyFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kCouldBeMyFileType: int = 1
    kExportAccessMode: int = 5
    kExportActiveAccessMode: int = 6
    kImportAccessMode: int = 3
    kIsMyFileType: int = 0
    kNotMyFileType: int = 2
    kOpenAccessMode: int = 1
    kReferenceAccessMode: int = 2
    kSaveAccessMode: int = 4
    kUnknownAccessMode: int = 0
    def reader(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def writer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxFluidEmitterNode(MPxEmitterNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def compute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidDensityEmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidDropoff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidEmitColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidEmitter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidFuelEmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidHeatEmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fluidJitter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    mEmissionFunction: maya.OpenMaya.MObject
    mEmitFluidColor: maya.OpenMaya.MObject
    mFluidColor: maya.OpenMaya.MObject
    mFluidColorB: maya.OpenMaya.MObject
    mFluidColorG: maya.OpenMaya.MObject
    mFluidColorR: maya.OpenMaya.MObject
    mFluidDensityEmission: maya.OpenMaya.MObject
    mFluidDropoff: maya.OpenMaya.MObject
    mFluidFuelEmission: maya.OpenMaya.MObject
    mFluidHeatEmission: maya.OpenMaya.MObject
    mFluidJitter: maya.OpenMaya.MObject
    mTurbulence: maya.OpenMaya.MObject
    thisown: bool
    def turbulence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxGeometryData(MPxData):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteComponentsFromGroups(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iterator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def smartCopy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateCompleteVertexGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxGeometryFilter(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def accessoryAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def accessoryNodeSetup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    componentTagExpression: maya.OpenMaya.MObject
    def deform(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    envelope: maya.OpenMaya.MObject
    def getDeformationDetails(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFixedSetupData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getGeometryIterator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    groupId: maya.OpenMaya.MObject
    def indexMapper(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    input: maya.OpenMaya.MObject
    inputGeom: maya.OpenMaya.MObject
    originalGeometry: maya.OpenMaya.MObject
    outputGeom: maya.OpenMaya.MObject
    def prepareDeform(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDeformationDetails(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setModifiedCallback(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseExistingConnectionWhenSetEditing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxGeometryIterator:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __next__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def component(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasNormals(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def indexUnsimplified(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def iteratorCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def maxPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def next(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def point(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCurrentPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxPoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPointGetNext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxGlBuffer:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginBufferNotify(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def bindFbo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def closeFbo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endBufferNotify(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def openFbo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def unbindFbo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxHardwareShader(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findResource(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getHardwareShaderPtr(*args: Unknown, **kwargs: Unknown) -> Any: ...
    outColor: maya.OpenMaya.MObject
    outColorB: maya.OpenMaya.MObject
    outColorG: maya.OpenMaya.MObject
    outColorR: maya.OpenMaya.MObject
    def profile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def render(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renderSwatchImage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUniformParameters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVaryingParameters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transparencyOptions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxHwShaderNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def bind(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def colorsPerVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentShadingEngine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dirtyMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getHwShaderNodePtr(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def glBind(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def glGeometry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def glUnbind(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasTransparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def invertTexCoords(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normalsPerVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    outColor: maya.OpenMaya.MObject
    outColorB: maya.OpenMaya.MObject
    outColorG: maya.OpenMaya.MObject
    outColorR: maya.OpenMaya.MObject
    outGlowColor: maya.OpenMaya.MObject
    outGlowColorB: maya.OpenMaya.MObject
    outGlowColorG: maya.OpenMaya.MObject
    outGlowColorR: maya.OpenMaya.MObject
    outMatteOpacity: maya.OpenMaya.MObject
    outMatteOpacityB: maya.OpenMaya.MObject
    outMatteOpacityG: maya.OpenMaya.MObject
    outMatteOpacityR: maya.OpenMaya.MObject
    outTransparency: maya.OpenMaya.MObject
    outTransparencyB: maya.OpenMaya.MObject
    outTransparencyG: maya.OpenMaya.MObject
    outTransparencyR: maya.OpenMaya.MObject
    def provideFaceIDs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def provideLocalUVCoord(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def provideVertexIDs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renderSwatchImage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportsBatching(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def texCoordsPerVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transparencyOptions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def unbind(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxIkSolverNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _getJointAngles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setJointAngles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setToRestAngles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doSolve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def funcValueTolerance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def groupHandlesByTopology(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def handleGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasJointLimitSupport(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasUniqueSolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAttributeCreatedBySolver(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPositionOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSingleChainOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def maxIterations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def positionOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postSolve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preSolve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotatePlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFuncValueTolerance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHandleGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxIterations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPositionOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSingleChainOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSupportJointLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUniqueSolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def singleChainOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def snapHandle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def solverTypeName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportJointLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def toSolverSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def toWorldSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def uniqueSolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxImageFile:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def close(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def glLoad(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def load(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def open(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxImagePlane(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    alphaGain: maya.OpenMaya.MObject
    alreadyPremult: maya.OpenMaya.MObject
    center: maya.OpenMaya.MObject
    centerX: maya.OpenMaya.MObject
    centerY: maya.OpenMaya.MObject
    centerZ: maya.OpenMaya.MObject
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    colorGain: maya.OpenMaya.MObject
    colorGainB: maya.OpenMaya.MObject
    colorGainG: maya.OpenMaya.MObject
    colorGainR: maya.OpenMaya.MObject
    colorOffset: maya.OpenMaya.MObject
    colorOffsetB: maya.OpenMaya.MObject
    colorOffsetG: maya.OpenMaya.MObject
    colorOffsetR: maya.OpenMaya.MObject
    composite: maya.OpenMaya.MObject
    coverage: maya.OpenMaya.MObject
    coverageOrigin: maya.OpenMaya.MObject
    coverageOriginX: maya.OpenMaya.MObject
    coverageOriginY: maya.OpenMaya.MObject
    coverageX: maya.OpenMaya.MObject
    coverageY: maya.OpenMaya.MObject
    depth: maya.OpenMaya.MObject
    depthBias: maya.OpenMaya.MObject
    depthFile: maya.OpenMaya.MObject
    depthOversample: maya.OpenMaya.MObject
    depthScale: maya.OpenMaya.MObject
    displayMode: maya.OpenMaya.MObject
    displayOnlyIfCurrent: maya.OpenMaya.MObject
    def exactImageFile(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    fit: maya.OpenMaya.MObject
    frameExtension: maya.OpenMaya.MObject
    frameOffset: maya.OpenMaya.MObject
    height: maya.OpenMaya.MObject
    imageName: maya.OpenMaya.MObject
    imageType: maya.OpenMaya.MObject
    def loadImageMap(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    lockedToCamera: maya.OpenMaya.MObject
    maxShadingSamples: maya.OpenMaya.MObject
    offset: maya.OpenMaya.MObject
    offsetX: maya.OpenMaya.MObject
    offsetY: maya.OpenMaya.MObject
    def refreshImage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    rotate: maya.OpenMaya.MObject
    separateDepth: maya.OpenMaya.MObject
    def setImageDirty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    shadingSamples: maya.OpenMaya.MObject
    shadingSamplesOverride: maya.OpenMaya.MObject
    size: maya.OpenMaya.MObject
    sizeX: maya.OpenMaya.MObject
    sizeY: maya.OpenMaya.MObject
    sourceTexture: maya.OpenMaya.MObject
    squeezeCorrection: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    useDepthMap: maya.OpenMaya.MObject
    useFrameExtension: maya.OpenMaya.MObject
    visibleInReflections: maya.OpenMaya.MObject
    visibleInRefractions: maya.OpenMaya.MObject
    width: maya.OpenMaya.MObject

class MPxLocatorNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def boundingBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    boundingBoxCenterX: maya.OpenMaya.MObject
    boundingBoxCenterY: maya.OpenMaya.MObject
    boundingBoxCenterZ: maya.OpenMaya.MObject
    center: maya.OpenMaya.MObject
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def closestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def color(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def colorRGB(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def draw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawLast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def excludeAsLocator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCacheSetup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getShapeSelectionMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    instObjGroups: maya.OpenMaya.MObject
    intermediateObject: maya.OpenMaya.MObject
    inverseMatrix: maya.OpenMaya.MObject
    def isBounded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    isTemplated: maya.OpenMaya.MObject
    def isTransparent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    localPosition: maya.OpenMaya.MObject
    localPositionX: maya.OpenMaya.MObject
    localPositionY: maya.OpenMaya.MObject
    localPositionZ: maya.OpenMaya.MObject
    localScale: maya.OpenMaya.MObject
    localScaleX: maya.OpenMaya.MObject
    localScaleY: maya.OpenMaya.MObject
    localScaleZ: maya.OpenMaya.MObject
    matrix: maya.OpenMaya.MObject
    nodeBoundingBox: maya.OpenMaya.MObject
    nodeBoundingBoxMax: maya.OpenMaya.MObject
    nodeBoundingBoxMaxX: maya.OpenMaya.MObject
    nodeBoundingBoxMaxY: maya.OpenMaya.MObject
    nodeBoundingBoxMaxZ: maya.OpenMaya.MObject
    nodeBoundingBoxMin: maya.OpenMaya.MObject
    nodeBoundingBoxMinX: maya.OpenMaya.MObject
    nodeBoundingBoxMinY: maya.OpenMaya.MObject
    nodeBoundingBoxMinZ: maya.OpenMaya.MObject
    nodeBoundingBoxSize: maya.OpenMaya.MObject
    nodeBoundingBoxSizeX: maya.OpenMaya.MObject
    nodeBoundingBoxSizeY: maya.OpenMaya.MObject
    nodeBoundingBoxSizeZ: maya.OpenMaya.MObject
    objectColor: maya.OpenMaya.MObject
    objectGroupColor: maya.OpenMaya.MObject
    objectGroupId: maya.OpenMaya.MObject
    objectGroups: maya.OpenMaya.MObject
    objectGrpCompList: maya.OpenMaya.MObject
    parentInverseMatrix: maya.OpenMaya.MObject
    parentMatrix: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    underWorldObject: maya.OpenMaya.MObject
    def useClosestPointForSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    useObjectColor: maya.OpenMaya.MObject
    visibility: maya.OpenMaya.MObject
    worldInverseMatrix: maya.OpenMaya.MObject
    worldMatrix: maya.OpenMaya.MObject
    worldPosition: maya.OpenMaya.MObject
    worldPositionX: maya.OpenMaya.MObject
    worldPositionY: maya.OpenMaya.MObject
    worldPositionZ: maya.OpenMaya.MObject

class MPxManipContainer(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addCircleSweepManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addCurveSegmentManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDirectionManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDiscManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDistanceManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addFreePointTriadManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addMPxManipulatorNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addManipToPlugConversion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addPlugToInViewEditor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addPlugToManipConversion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addPointOnCurveManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addPointOnSurfaceManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addRotateManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addScaleManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addStateManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addToManipConnectTable(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def addToggleManip(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToDependNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doDrag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doPress(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doRelease(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def draw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def finishAddingManips(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConverterManipValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getConverterPlugValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def initialize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isManipActive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def manipToPlugConversion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def newManipulator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def plugToManipConversion(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeFromManipConnectTable(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxManipulatorNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDependentPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addDoubleValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addPointValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addVectorValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def colorAndName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectPlugToValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToDependNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    connectedNodes: maya.OpenMaya.MObject
    def dependentPlugsReset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deregisterForMouseMove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dimmedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doDrag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doMove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doPress(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doRelease(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def draw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def finishAddingManips(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDoubleValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInstancePtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPointValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVectorValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def glActiveName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def glFirstHandle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def labelBackgroundColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def labelColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lineColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mainColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mouseDown(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mousePosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mouseRay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mouseRayWorld(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mouseUp(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def newManipulator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def prevColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerForMouseMove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDoubleValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHandleColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInstancePtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPointValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVectorValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shouldDrawHandleAsSelected(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def xColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def yColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def zColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxMaterialInformation:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def computeMaterial(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectAsTexture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kOverrideDraw: int = 2
    kSimpleMaterial: int = 0
    kTexture: int = 1
    def materialInfoIsDirty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def textureDisconnected(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def useMaterialAsTexture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxMayaAsciiFilter(MPxFileTranslator):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def haveReadMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def haveWriteMethod(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def processReadOptions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def processWriteOptions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reader(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def writePostConnectAttrsBlock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writePostCreateNodesBlock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writePostHeader(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writePostRequires(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writePreConnectAttrsBlock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writePreCreateNodesBlock(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writePreTrailer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesConnectAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesCreateNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesDisconnectAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesFileReference(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesMetadata(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesParentNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesRequirements(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesSelectNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writesSetAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxMayaAsciiFilterOutput:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __lshift__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxMidiInputDevice:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def closeDevice(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deviceState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doButtonEvents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doMovementEvents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMessage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nameAxes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def nameButtons(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def openDevice(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sendMessage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxModelEditorCommand:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _parser(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _syntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def appendSyntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def doEditFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doQueryFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def editorCommandName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def editorMenuScriptName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeModelView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def modelView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setResult(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def skipFlagForCreate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxMotionPathNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    allCoordinates: maya.OpenMaya.MObject
    bank: maya.OpenMaya.MObject
    bankScale: maya.OpenMaya.MObject
    bankThreshold: maya.OpenMaya.MObject
    def banking(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluatePath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    flowNode: maya.OpenMaya.MObject
    follow: maya.OpenMaya.MObject
    fractionMode: maya.OpenMaya.MObject
    def fractionalToParametric(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    frontAxis: maya.OpenMaya.MObject
    frontTwist: maya.OpenMaya.MObject
    def getVectors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    inverseFront: maya.OpenMaya.MObject
    inverseUp: maya.OpenMaya.MObject
    def matrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    normal: maya.OpenMaya.MObject
    orientMatrix: maya.OpenMaya.MObject
    orientationMarkerTime: maya.OpenMaya.MObject
    def parametricToFractional(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    pathGeometry: maya.OpenMaya.MObject
    def position(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    positionMarkerTime: maya.OpenMaya.MObject
    rotate: maya.OpenMaya.MObject
    rotateOrder: maya.OpenMaya.MObject
    rotateX: maya.OpenMaya.MObject
    rotateY: maya.OpenMaya.MObject
    rotateZ: maya.OpenMaya.MObject
    sideTwist: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    uValue: maya.OpenMaya.MObject
    upAxis: maya.OpenMaya.MObject
    upTwist: maya.OpenMaya.MObject
    updateOrientationMarkers: maya.OpenMaya.MObject
    worldUpMatrix: maya.OpenMaya.MObject
    worldUpType: maya.OpenMaya.MObject
    worldUpVector: maya.OpenMaya.MObject
    worldUpVectorX: maya.OpenMaya.MObject
    worldUpVectorY: maya.OpenMaya.MObject
    worldUpVectorZ: maya.OpenMaya.MObject
    def wraparoundFractionalValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    xCoordinate: maya.OpenMaya.MObject
    yCoordinate: maya.OpenMaya.MObject
    zCoordinate: maya.OpenMaya.MObject

class MPxMultiPolyTweakUVCommand(MPxCommand):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTweakedUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def newSyntax(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def parseSyntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preProcessUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxNode:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _doNotWrite(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _forceCache(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setDoNotWrite(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _setMPSafe(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addAttribute(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def addExternalContentForFileAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def attributeAffects(*args: Unknown, **kwargs: Unknown) -> Any: ...
    caching: maya.OpenMaya.MObject
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def compute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def configCache(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectionBroken(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectionMade(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyInternalData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dependsOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def existWithoutInConnections(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def existWithoutOutConnections(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    frozen: maya.OpenMaya.MObject
    def getCacheSetup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getExternalContent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFilesToArchive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInternalValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInternalValueInContext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasInvalidationRangeTransformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def inheritAttributesFrom(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def internalArrayCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAbstractClass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    isHistoricallyInteresting: maya.OpenMaya.MObject
    def isPassiveOutput(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTrackingTopology(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kAssembly: int = 22
    kBlendShape: int = 25
    kCameraSetNode: int = 16
    kClientDeviceNode: int = 20
    kConstraintNode: int = 17
    kDefaultScheduling: int = 2
    kDeformerNode: int = 2
    kDependNode: int = 0
    kEmitterNode: int = 6
    kEvaluatedDirectly: int = 1
    kEvaluatedIndirectly: int = 0
    kFieldNode: int = 5
    kFluidEmitterNode: int = 13
    kGeometryFilter: int = 24
    kGloballySerial: int = 3
    kGloballySerialize: int = 3
    kHardwareShader: int = 9
    kHwShaderNode: int = 10
    kIkSolverNode: int = 8
    kImagePlaneNode: int = 14
    kLast: int = 26
    kLeaveDirty: int = 2
    kLocatorNode: int = 1
    kManipContainer: int = 3
    kManipulatorNode: int = 18
    kMotionPathNode: int = 19
    kObjectSet: int = 12
    kParallel: int = 1
    kParticleAttributeMapperNode: int = 15
    kPostEvaluationTypeLast: int = 3
    kSchedulingTypeLast: int = 5
    kSerial: int = 2
    kSerialize: int = 2
    kSkinCluster: int = 23
    kSpringNode: int = 7
    kSurfaceShape: int = 4
    kThreadedDeviceNode: int = 21
    kTransformNode: int = 11
    kUntrusted: int = 4
    def legalConnection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def legalDisconnection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    message: maya.OpenMaya.MObject
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def passThroughToMany(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def passThroughToOne(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postConstructor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postEvaluation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preEvaluation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def schedulingType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDependentsDirty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExistWithoutInConnections(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExistWithoutOutConnections(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExternalContent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExternalContentForFileAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInternalValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInternalValueInContext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shouldSave(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    state: maya.OpenMaya.MObject
    def thisMObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformInvalidationRange(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def typeName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxObjectSet(MPxNode):
    """
    """
    DNSetMembers: maya.OpenMaya.MObject
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    annotation: maya.OpenMaya.MObject
    def canBeDeleted(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    dagSetMembers: maya.OpenMaya.MObject
    edgesOnlySet: maya.OpenMaya.MObject
    editPointsOnlySet: maya.OpenMaya.MObject
    facetsOnlySet: maya.OpenMaya.MObject
    groupNodes: maya.OpenMaya.MObject
    isLayer: maya.OpenMaya.MObject
    memberWireframeColor: maya.OpenMaya.MObject
    partition: maya.OpenMaya.MObject
    renderableOnlySet: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    usedByNodes: maya.OpenMaya.MObject
    verticesOnlySet: maya.OpenMaya.MObject

class MPxParticleAttributeMapperNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def compute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    computeNode: maya.OpenMaya.MObject
    computeNodeColor: maya.OpenMaya.MObject
    computeNodeColorB: maya.OpenMaya.MObject
    computeNodeColorG: maya.OpenMaya.MObject
    computeNodeColorR: maya.OpenMaya.MObject
    outColorPP: maya.OpenMaya.MObject
    outMaxValue: maya.OpenMaya.MObject
    outMinValue: maya.OpenMaya.MObject
    outValuePP: maya.OpenMaya.MObject
    thisown: bool
    time: maya.OpenMaya.MObject
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    uCoordPP: maya.OpenMaya.MObject
    vCoordPP: maya.OpenMaya.MObject

class MPxPolyTrg(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def compute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAbstractClass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def postConstructor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def registerTrgFunction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def unregisterTrgFunction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxPolyTweakUVCommand(MPxCommand):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTweakedUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def newSyntax(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def parseSyntax(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxPolyTweakUVInteractiveCommand(MPxToolCommand):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cancel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def doIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def finalize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isUndoable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUVs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxRenderPassImpl:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def frameBufferSemantic(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDefaultType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumChannels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCompatible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kBit: int = 2048
    kColorSemantic: int = 1
    kDepthSemantic: int = 4
    kDirectionVectorSemantic: int = 3
    kFloat16: int = 256
    kFloat32: int = 512
    kFloat64: int = 1024
    kInt16: int = 32
    kInt32: int = 64
    kInt64: int = 128
    kInt8: int = 16
    kInvalidSemantic: int = 0
    kLabelSemantic: int = 5
    kMaskSemantic: int = 6
    kOther: int = 4096
    kOtherSemantic: int = 7
    kUInt16: int = 2
    kUInt32: int = 4
    kUInt64: int = 8
    kUInt8: int = 1
    kVectorSemantic: int = 2
    def perLightPassContributionSupported(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any
    def typesSupported(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxRepresentation:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _getAssembly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canApplyEdits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getExternalContent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inactivate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setExternalContent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxSelectionContext(MPxContext):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _isSelecting(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _lastDragPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _newToolCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _startPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def abortAction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addManipulator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def argTypeNumericalInput(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteManipulators(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doDrag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doHold(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doPress(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def doRelease(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def feedbackNumericalInput(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def helpStateHasChanged(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def image(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def newToolCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def processNumericalInput(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAllowDoubleClickAction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAllowPaintSelect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAllowPreSelectHilight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAllowSoftSelect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAllowSymmetry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setImage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxSkinCluster(MPxGeometryFilter):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    bindPreMatrix: maya.OpenMaya.MObject
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    matrix: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    weightList: maya.OpenMaya.MObject
    def weightValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    weights: maya.OpenMaya.MObject

class MPxSpringNode(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applySpringLaw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    mDeltaTime: maya.OpenMaya.MObject
    mEnd1Weight: maya.OpenMaya.MObject
    mEnd2Weight: maya.OpenMaya.MObject
    thisown: bool
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxSurfaceShape(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def acceptsGeometryIterator(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def activeComponents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def boundingBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    boundingBoxCenterX: maya.OpenMaya.MObject
    boundingBoxCenterY: maya.OpenMaya.MObject
    boundingBoxCenterZ: maya.OpenMaya.MObject
    def cachedShapeAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canMakeLive(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    center: maya.OpenMaya.MObject
    def childChanged(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def closestPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentToPlugs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def convertToTweakNodePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createFullRenderGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createFullVertexGroup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteComponents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evalNodeAffectsDrawDb(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def excludeAsPluginShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def extendSelectionFromComponents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometryData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometryIteratorSetup(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getComponentSelectionMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getShapeSelectionMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getWorldMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasActiveComponents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    instObjGroups: maya.OpenMaya.MObject
    intermediateObject: maya.OpenMaya.MObject
    inverseMatrix: maya.OpenMaya.MObject
    def isBounded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isRenderable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    isTemplated: maya.OpenMaya.MObject
    def localShapeInAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def localShapeOutAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    mControlPoints: maya.OpenMaya.MObject
    mControlValueX: maya.OpenMaya.MObject
    mControlValueY: maya.OpenMaya.MObject
    mControlValueZ: maya.OpenMaya.MObject
    mHasHistoryOnCreate: maya.OpenMaya.MObject
    def match(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matchComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    matrix: maya.OpenMaya.MObject
    def newControlPointComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    nodeBoundingBox: maya.OpenMaya.MObject
    nodeBoundingBoxMax: maya.OpenMaya.MObject
    nodeBoundingBoxMaxX: maya.OpenMaya.MObject
    nodeBoundingBoxMaxY: maya.OpenMaya.MObject
    nodeBoundingBoxMaxZ: maya.OpenMaya.MObject
    nodeBoundingBoxMin: maya.OpenMaya.MObject
    nodeBoundingBoxMinX: maya.OpenMaya.MObject
    nodeBoundingBoxMinY: maya.OpenMaya.MObject
    nodeBoundingBoxMinZ: maya.OpenMaya.MObject
    nodeBoundingBoxSize: maya.OpenMaya.MObject
    nodeBoundingBoxSizeX: maya.OpenMaya.MObject
    nodeBoundingBoxSizeY: maya.OpenMaya.MObject
    nodeBoundingBoxSizeZ: maya.OpenMaya.MObject
    objectColor: maya.OpenMaya.MObject
    objectGroupColor: maya.OpenMaya.MObject
    objectGroupId: maya.OpenMaya.MObject
    objectGroups: maya.OpenMaya.MObject
    objectGrpCompList: maya.OpenMaya.MObject
    parentInverseMatrix: maya.OpenMaya.MObject
    parentMatrix: maya.OpenMaya.MObject
    def pointAtParm(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renderGroupComponentType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRenderable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformUsing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tweakUsing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def undeleteComponents(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    useObjectColor: maya.OpenMaya.MObject
    def vertexOffsetDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    visibility: maya.OpenMaya.MObject
    def weightedTransformUsing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def weightedTweakUsing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    worldInverseMatrix: maya.OpenMaya.MObject
    worldMatrix: maya.OpenMaya.MObject
    def worldShapeOutAttr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxSurfaceShapeUI:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canDrawUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def draw(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDrawData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDrawRequests(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kSelectMeshEdges: int = 3
    kSelectMeshFaces: int = 2
    kSelectMeshUVs: int = 0
    kSelectMeshVerts: int = 1
    def material(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def materials(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def select(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectUV(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def snap(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def surfaceShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def surfaceShapeUI(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool

class MPxTexContext(MPxContext):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getMarqueeSelection(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def newToolCommand(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def portSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def portToView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def viewRect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewToPort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxToolCommand(MPxCommand):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _doFinalize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cancel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def doIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def finalize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxTransform(MPxNode):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyRotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyRotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyRotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyScalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyScalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def _dirtyTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyRotateOrientationLocks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyRotatePivotLocks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyRotatePivotLocksTranslate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyRotationLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyRotationLocks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyScaleLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyScaleLocks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyScaleLocksPivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyScaleLocksPivotTranslate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyShearLocks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyTranslationLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyTranslationLocks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    baseTransformationMatrix: Any
    def boundingBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    boundingBoxCenterX: maya.OpenMaya.MObject
    boundingBoxCenterY: maya.OpenMaya.MObject
    boundingBoxCenterZ: maya.OpenMaya.MObject
    center: maya.OpenMaya.MObject
    def checkAndSetRotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetRotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetRotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetScalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetScalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def checkAndSetTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clearLimits(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def compute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def computeLocalTransformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyInternalData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createTransformationMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    displayHandle: maya.OpenMaya.MObject
    displayLocalAxis: maya.OpenMaya.MObject
    displayRotatePivot: maya.OpenMaya.MObject
    displayScalePivot: maya.OpenMaya.MObject
    drawOverride: maya.OpenMaya.MObject
    dynamics: maya.OpenMaya.MObject
    def enableLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    geometry: maya.OpenMaya.MObject
    def getEulerRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getMatrixInverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPreRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRotationOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getScalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getScalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getShear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    ghosting: maya.OpenMaya.MObject
    identification: maya.OpenMaya.MObject
    inheritsTransform: maya.OpenMaya.MObject
    instObjGroups: maya.OpenMaya.MObject
    intermediateObject: maya.OpenMaya.MObject
    inverseMatrix: maya.OpenMaya.MObject
    def isBounded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLimited(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isNonAffineMatricesEnabled(*args: Unknown, **kwargs: Unknown) -> Any: ...
    isTemplated: maya.OpenMaya.MObject
    layerOverrideColor: maya.OpenMaya.MObject
    layerRenderable: maya.OpenMaya.MObject
    def limitValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    lodVisibility: maya.OpenMaya.MObject
    matrix: maya.OpenMaya.MObject
    maxRotLimit: maya.OpenMaya.MObject
    maxRotLimitEnable: maya.OpenMaya.MObject
    maxRotXLimit: maya.OpenMaya.MObject
    maxRotXLimitEnable: maya.OpenMaya.MObject
    maxRotYLimit: maya.OpenMaya.MObject
    maxRotYLimitEnable: maya.OpenMaya.MObject
    maxRotZLimit: maya.OpenMaya.MObject
    maxRotZLimitEnable: maya.OpenMaya.MObject
    maxScaleLimit: maya.OpenMaya.MObject
    maxScaleLimitEnable: maya.OpenMaya.MObject
    maxScaleXLimit: maya.OpenMaya.MObject
    maxScaleXLimitEnable: maya.OpenMaya.MObject
    maxScaleYLimit: maya.OpenMaya.MObject
    maxScaleYLimitEnable: maya.OpenMaya.MObject
    maxScaleZLimit: maya.OpenMaya.MObject
    maxScaleZLimitEnable: maya.OpenMaya.MObject
    maxTransLimit: maya.OpenMaya.MObject
    maxTransLimitEnable: maya.OpenMaya.MObject
    maxTransXLimit: maya.OpenMaya.MObject
    maxTransXLimitEnable: maya.OpenMaya.MObject
    maxTransYLimit: maya.OpenMaya.MObject
    maxTransYLimitEnable: maya.OpenMaya.MObject
    maxTransZLimit: maya.OpenMaya.MObject
    maxTransZLimitEnable: maya.OpenMaya.MObject
    minRotLimit: maya.OpenMaya.MObject
    minRotLimitEnable: maya.OpenMaya.MObject
    minRotXLimit: maya.OpenMaya.MObject
    minRotXLimitEnable: maya.OpenMaya.MObject
    minRotYLimit: maya.OpenMaya.MObject
    minRotYLimitEnable: maya.OpenMaya.MObject
    minRotZLimit: maya.OpenMaya.MObject
    minRotZLimitEnable: maya.OpenMaya.MObject
    minScaleLimit: maya.OpenMaya.MObject
    minScaleLimitEnable: maya.OpenMaya.MObject
    minScaleXLimit: maya.OpenMaya.MObject
    minScaleXLimitEnable: maya.OpenMaya.MObject
    minScaleYLimit: maya.OpenMaya.MObject
    minScaleYLimitEnable: maya.OpenMaya.MObject
    minScaleZLimit: maya.OpenMaya.MObject
    minScaleZLimitEnable: maya.OpenMaya.MObject
    minTransLimit: maya.OpenMaya.MObject
    minTransLimitEnable: maya.OpenMaya.MObject
    minTransXLimit: maya.OpenMaya.MObject
    minTransXLimitEnable: maya.OpenMaya.MObject
    minTransYLimit: maya.OpenMaya.MObject
    minTransYLimitEnable: maya.OpenMaya.MObject
    minTransZLimit: maya.OpenMaya.MObject
    minTransZLimitEnable: maya.OpenMaya.MObject
    @staticmethod
    def mustCallValidateAndSet(*args: Unknown, **kwargs: Unknown) -> Any: ...
    nodeBoundingBox: maya.OpenMaya.MObject
    nodeBoundingBoxMax: maya.OpenMaya.MObject
    nodeBoundingBoxMaxX: maya.OpenMaya.MObject
    nodeBoundingBoxMaxY: maya.OpenMaya.MObject
    nodeBoundingBoxMaxZ: maya.OpenMaya.MObject
    nodeBoundingBoxMin: maya.OpenMaya.MObject
    nodeBoundingBoxMinX: maya.OpenMaya.MObject
    nodeBoundingBoxMinY: maya.OpenMaya.MObject
    nodeBoundingBoxMinZ: maya.OpenMaya.MObject
    nodeBoundingBoxSize: maya.OpenMaya.MObject
    nodeBoundingBoxSizeX: maya.OpenMaya.MObject
    nodeBoundingBoxSizeY: maya.OpenMaya.MObject
    nodeBoundingBoxSizeZ: maya.OpenMaya.MObject
    objectColor: maya.OpenMaya.MObject
    objectGroupColor: maya.OpenMaya.MObject
    objectGroupId: maya.OpenMaya.MObject
    objectGroups: maya.OpenMaya.MObject
    objectGrpCompList: maya.OpenMaya.MObject
    offsetParentMatrix: maya.OpenMaya.MObject
    overrideColor: maya.OpenMaya.MObject
    overrideDisplayType: maya.OpenMaya.MObject
    overrideEnabled: maya.OpenMaya.MObject
    overrideLevelOfDetail: maya.OpenMaya.MObject
    overridePlayback: maya.OpenMaya.MObject
    overrideShading: maya.OpenMaya.MObject
    overrideTexturing: maya.OpenMaya.MObject
    overrideVisibility: maya.OpenMaya.MObject
    parentInverseMatrix: maya.OpenMaya.MObject
    parentMatrix: maya.OpenMaya.MObject
    def postConstructor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    renderInfo: maya.OpenMaya.MObject
    renderLayerColor: maya.OpenMaya.MObject
    renderLayerId: maya.OpenMaya.MObject
    renderLayerInfo: maya.OpenMaya.MObject
    renderLayerRenderable: maya.OpenMaya.MObject
    def resetTransformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    rotate: maya.OpenMaya.MObject
    rotateAxis: maya.OpenMaya.MObject
    rotateAxisX: maya.OpenMaya.MObject
    rotateAxisY: maya.OpenMaya.MObject
    rotateAxisZ: maya.OpenMaya.MObject
    def rotateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    rotateOrder: maya.OpenMaya.MObject
    rotatePivot: maya.OpenMaya.MObject
    rotatePivotTranslate: maya.OpenMaya.MObject
    rotatePivotTranslateX: maya.OpenMaya.MObject
    rotatePivotTranslateY: maya.OpenMaya.MObject
    rotatePivotTranslateZ: maya.OpenMaya.MObject
    rotatePivotX: maya.OpenMaya.MObject
    rotatePivotY: maya.OpenMaya.MObject
    rotatePivotZ: maya.OpenMaya.MObject
    rotateQuaternion: maya.OpenMaya.MObject
    rotateQuaternionW: maya.OpenMaya.MObject
    rotateQuaternionX: maya.OpenMaya.MObject
    rotateQuaternionY: maya.OpenMaya.MObject
    rotateQuaternionZ: maya.OpenMaya.MObject
    def rotateTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    rotateX: maya.OpenMaya.MObject
    rotateY: maya.OpenMaya.MObject
    rotateZ: maya.OpenMaya.MObject
    rotationInterpolation: maya.OpenMaya.MObject
    scale: maya.OpenMaya.MObject
    def scaleBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    scalePivot: maya.OpenMaya.MObject
    scalePivotTranslate: maya.OpenMaya.MObject
    scalePivotTranslateX: maya.OpenMaya.MObject
    scalePivotTranslateY: maya.OpenMaya.MObject
    scalePivotTranslateZ: maya.OpenMaya.MObject
    scalePivotX: maya.OpenMaya.MObject
    scalePivotY: maya.OpenMaya.MObject
    scalePivotZ: maya.OpenMaya.MObject
    def scaleTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    scaleX: maya.OpenMaya.MObject
    scaleY: maya.OpenMaya.MObject
    scaleZ: maya.OpenMaya.MObject
    selectHandle: maya.OpenMaya.MObject
    selectHandleX: maya.OpenMaya.MObject
    selectHandleY: maya.OpenMaya.MObject
    selectHandleZ: maya.OpenMaya.MObject
    def setLimit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setNonAffineMatricesEnabled(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotationOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    shear: maya.OpenMaya.MObject
    def shearBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shearTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    shearXY: maya.OpenMaya.MObject
    shearXZ: maya.OpenMaya.MObject
    shearYZ: maya.OpenMaya.MObject
    showManipDefault: maya.OpenMaya.MObject
    specifiedManipLocation: maya.OpenMaya.MObject
    thisown: bool
    transMinusRotatePivot: maya.OpenMaya.MObject
    transMinusRotatePivotX: maya.OpenMaya.MObject
    transMinusRotatePivotY: maya.OpenMaya.MObject
    transMinusRotatePivotZ: maya.OpenMaya.MObject
    def transformationMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def transformationMatrixPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    translate: maya.OpenMaya.MObject
    def translateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def translateTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    translateX: maya.OpenMaya.MObject
    translateY: maya.OpenMaya.MObject
    translateZ: maya.OpenMaya.MObject
    def treatAsTransform(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def type(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateMatrixAttrs(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    useObjectColor: maya.OpenMaya.MObject
    def validateAndSetValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    visibility: maya.OpenMaya.MObject
    worldInverseMatrix: maya.OpenMaya.MObject
    worldMatrix: maya.OpenMaya.MObject
    xformMatrix: maya.OpenMaya.MObject

class MPxTransformationMatrix:
    """
    """
    def __disown__(self) -> Any: ...
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asInterpolationMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMatrixInverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asRotateMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asRotateMatrixInverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asScaleMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asScaleMatrixInverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asTransformationMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    baseTransformationMatrixId: maya.OpenMaya.MTypeId
    @staticmethod
    def convertEulerRotationOrder(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def convertTransformationRotationOrder(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def copyValues(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def creator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def decomposeMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def eulerRotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def eulerRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    identity: MPxTransformationMatrix
    def isEquivalent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def preRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotationOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scaleBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scaleTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotateOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotatePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotationOrder(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivot(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalePivotTranslation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shearBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shearTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def transformBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def translateBy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def translateTo(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def translation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def typeId(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def unSquishIt(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def unSquishMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MPxUIControl:
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MPxUITableControl(MPxUIControl):
    """
    """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addToSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def allowEdit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def allowSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cellString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clearSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def collapseOrExpandRow(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCellColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSelected(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    kAllLabels: int = 3
    kColumnLabel: int = 2
    kNoLabel: int = 0
    kRowLabel: int = 1
    def labelString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numberOfColumns(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numberOfRows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def redrawCells(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def redrawLabels(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeFromSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNumberOfColumns(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNumberOfRows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def suspendUpdates(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: Any

class MaterialInputData:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    ambient: maya.OpenMaya.MColor
    diffuse: maya.OpenMaya.MColor
    emission: maya.OpenMaya.MColor
    hasTransparency: bool
    shininess: float
    specular: maya.OpenMaya.MColor
    thisown: bool

PLUGIN_COMPANY: str = 'Autodesk'
def asHashable(mpxObj: Unknown) -> Any: ...
def asMPxPtr(mpxObj: Unknown) -> Any: ...
class boolPtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class charPtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

cvar: Any
class doublePtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class floatPtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

def getLockCaptureCount(*args: Unknown, **kwargs: Unknown) -> Any: ...
class intPtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class shortPtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class uCharPtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class uIntPtr:
    """
    """
    def __init__(self, *args: Unknown) -> None:
        """Initialize self.  See help(type(self)) for accurate signature."""

    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...
    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

