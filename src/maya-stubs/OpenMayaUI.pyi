from __future__ import annotations

from typing import *

import maya.OpenMaya
import maya.OpenMayaRender

Unknown = Any

class M3dView:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def active3dView(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def activeAffectedColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def activeTemplateColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def applicationShell(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def backgroundColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def backgroundColorBottom(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def backgroundColorTop(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginGL(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginProjMatrixOverride(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginSelect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def beginXorDrawing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def colorAtIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def colorMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deviceContext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def devicePixelRatio(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def disallowPolygonOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def display(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def displayStatus(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayStyle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawText(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endGL(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endProjMatrixOverride(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endSelect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endXorDrawing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filteredObjectList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def get3dView(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorIndexAndTable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLightCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLightIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLightPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLightingMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getM3dViewFromModelEditor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getM3dViewFromModelPanel(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRendererName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getScreenPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def hiliteColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def initNames(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isBackgroundGradient(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isLightVisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isShadeActiveOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isVisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kActive: int = 0
    kActiveAffected: int = 10
    kActiveColors: int = 0
    kActiveComponent: int = 7
    kActiveTemplate: int = 6
    kBackgroundColor: int = 6
    kBoundingBox: int = 0
    kCenter: int = 1
    kDefaultQualityRenderer: int = 0
    kDepth_8: int = 0
    kDepth_Float: int = 1
    kDisplayCVs: int = 131072
    kDisplayCameras: int = 32
    kDisplayDeformers: int = 256
    kDisplayDimensions: int = 4096
    kDisplayDynamicConstraints: int = 134217728
    kDisplayDynamics: int = 512
    kDisplayEverything: int = -1
    kDisplayFluids: int = 2097152
    kDisplayFollicles: int = 4194304
    kDisplayGrid: int = 65536
    kDisplayHairSystems: int = 8388608
    kDisplayHulls: int = 262144
    kDisplayIkHandles: int = 128
    kDisplayImagePlane: int = 16777216
    kDisplayJoints: int = 64
    kDisplayLights: int = 16
    kDisplayLocators: int = 2048
    kDisplayManipulators: int = 268435456
    kDisplayMeshes: int = 4
    kDisplayNCloths: int = 33554432
    kDisplayNParticles: int = 536870912
    kDisplayNRigids: int = 67108864
    kDisplayNurbsCurves: int = 1
    kDisplayNurbsSurfaces: int = 2
    kDisplayParticleInstancers: int = 1024
    kDisplayPivots: int = 16384
    kDisplayPlanes: int = 8
    kDisplaySelectHandles: int = 8192
    kDisplayStrokes: int = 524288
    kDisplaySubdivSurfaces: int = 1048576
    kDisplayTextures: int = 32768
    kDormant: int = 2
    kDormantColors: int = 2
    kExcludeMotionTrails: int = 1073741824
    kExcludePluginShapes: int = -2147483648
    kExternalRenderer: int = 3
    kFlatShaded: int = 1
    kGouraudShaded: int = 2
    kHighQualityRenderer: int = 1
    kHilite: int = 4
    kIntermediateObject: int = 9
    kInvisible: int = 3
    kLead: int = 8
    kLeft: int = 0
    kLightActive: int = 2
    kLightAll: int = 0
    kLightDefault: int = 3
    kLightNone: int = 5
    kLightSelected: int = 1
    kLive: int = 1
    kNoStatus: int = 11
    kPoints: int = 4
    kRight: int = 2
    kStippleDashed: int = 1
    kStippleNone: int = 0
    kTemplate: int = 5
    kTemplateColor: int = 5
    kUnused1: int = 4
    kViewport2Renderer: int = 2
    kWireFrame: int = 3
    @staticmethod
    def leadColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def liveColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def loadName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeSharedContextCurrent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def modelViewMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def multipleDrawEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def multipleDrawPassCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numActiveColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numDormantColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numUserDefinedColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numViewSelectedObjects(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def numberOf3dViews(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectDisplay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectListFilterName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def playblastPortHeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def playblastPortWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pluginObjectDisplay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def popName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def popViewport(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def portHeight(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def portWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def projectionMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pushName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pushViewport(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readBufferTo2dTexture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readColorBuffer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def readDepthMap(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def referenceLayerColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def refresh(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renderOverrideName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rendererString(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scheduleRefresh(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def scheduleRefreshAllViews(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCamera(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColorMask(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisallowPolygonOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayStyle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawColorAndAlpha(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMultipleDrawEnable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMultipleDrawPassCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectDisplay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectListFilterName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPluginObjectDisplay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRenderOverrideName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShowObjectFilterNameInHUD(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setShowViewSelectedChildren(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setUserDefinedColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setViewSelectedPrefix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def showObjectFilterNameInHUD(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def showViewSelectedChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def templateColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def textureMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def twoSidedLighting(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateViewingParameters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def userDefinedColorIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def usingDefaultMaterial(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def usingMipmappedTextures(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewIsFiltered(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewSelected(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewSelectedObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewSelectedPrefix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewToObjectSpace(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewToWorld(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def viewport(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def widget(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def window(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def wireframeOnShaded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def wireframeOnlyInShadedMode(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def worldToView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def writeColorBuffer(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def xray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def xrayJoints(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MCursor:
    """ """
    def __eq__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None: ...
    def __ne__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    crossHairCursor: MCursor
    defaultCursor: MCursor
    doubleCrossHairCursor: MCursor
    editCursor: MCursor
    handCursor: MCursor
    pencilCursor: MCursor
    textBeamCursor: MCursor
    thisown: Any

class MDeviceChannel:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def axisIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def childByIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def longName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numChildren(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: Any

class MDeviceState:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def buttonState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def devicePosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNull(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def maxAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setButtonState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDevicePosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: Any

class MDrawData:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def geometry(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MDrawInfo:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def canDrawComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def completelyInside(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayStatus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayStyle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPrototype(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inSelect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inUserInteraction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inclusiveMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def multiPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def objectDisplayStatus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pluginObjectDisplayStatus(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def projectionMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMultiPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def userChangingViewContext(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def view(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MDrawRequest:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def color(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def component(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayCullOpposite(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayCulling(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayStatus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayStyle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawLast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isTransparent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def material(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def matrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def multiPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayCullOpposite(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayCulling(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayStatus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisplayStyle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawLast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIsTransparent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaterial(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMultiPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToken(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setView(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def token(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def view(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MDrawRequestQueue:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def add(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isEmpty(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MDrawTraversal:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def enableFiltering(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filterNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def filteringEnabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def frustumValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def itemHasStatus(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def itemPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kActiveItem: int = 0
    kTemplateItem: int = 1
    def leafLevelCulling(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def numberOfItems(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFrustum(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLeafLevelCulling(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOrthoFrustum(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPerspFrustum(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def traverse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MEvent:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...

    controlKey: int = 4
    def getPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getWindowPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isModifierControl(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isModifierKeyRelease(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isModifierLeftMouseButton(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def isModifierMiddleMouseButton(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def isModifierNone(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isModifierShift(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kLeftMouse: int = 64
    kMiddleMouse: int = 128
    def modifiers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mouseButton(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setModifiers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    shiftKey: int = 1
    thisown: bool

class MExternalDropCallback:
    """ """
    def __disown__(self) -> Any: ...
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addUFEItemCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def externalDropCallback(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kMayaDefault: int = 0
    kNoMayaDefaultAndAccept: int = 1
    kNoMayaDefaultAndNoAccept: int = 2
    @staticmethod
    def removeCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeUFEItemCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: Any

class MExternalDropData:
    """ """
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def color(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def dataSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def formatData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def formats(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasFormat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasHtml(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasImage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasText(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasUrls(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def html(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def image(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kAltModifier: int = 134217728
    kControlModifier: int = 67108864
    kLeftButton: int = 1
    kMidButton: int = 4
    kMiddleButton: int = 4
    kNoModifier: int = 0
    kRightButton: int = 2
    kShiftModifier: int = 33554432
    def keyboardModifiers(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mouseButtons(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def text(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: Any
    def urls(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFeedbackLine:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def clear(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setFormat(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setShowFeedback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setTitle(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setValue(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def showFeedback(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnCircleSweepManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def angleIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def axisIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def centerIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToAnglePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endCircleIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCenterPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawAsArc(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEndPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startCircleIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnCurveSegmentManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToCurvePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToEndParamPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToStartParamPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def curveIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endParamIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEndParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startParamIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnDirectionManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToDirectionPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def directionIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def endPointIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawStart(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNormalizeDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startPointIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnDiscManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def angleIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def axisIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def centerIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToAnglePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCenterPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setNormal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRadius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnDistanceManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToDistancePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def currentPointIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def directionIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def distanceIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDrawLineOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDrawStartOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scalingFactor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawLine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawStart(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setScalingFactor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startPointIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnFreePointTriadManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToPointPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDrawAxesOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isKeyframeAllOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSnapModeOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kViewPlane: int = 3
    kXYPlane: int = 2
    kXZPlane: int = 1
    kYZPlane: int = 0
    def pointIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawArrowHead(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawAxes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGlobalTriadPlane(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setKeyframeAll(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSnapMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnManip3D(maya.OpenMaya.MFnTransform):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deleteManipulator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def drawPlaneHandles(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def globalSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def handleSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isOptimizePlaybackOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isVisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def lineSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def manipScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotateXYZValue(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDrawPlaneHandles(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setGlobalSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setHandleSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setLineSize(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setManipScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOptimizePlayback(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVisible(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnPointOnCurveManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToCurvePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToParamPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def curveIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def curvePoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDrawCurveOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def paramIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def parameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnPointOnSurfaceManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToParamPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToSurfacePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getParameters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDrawSurfaceOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def paramIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawArrows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDrawSurface(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setParameters(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def surfaceIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnRotateManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToRotationCenterPlug(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def connectToRotationPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayWithNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSnapModeOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kGimbal: int = 2
    kObjectSpace: int = 0
    kWorldSpace: int = 1
    def rotateMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotationCenterIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rotationIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInitialRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotateMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRotationCenter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSnapIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSnapMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def snapIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnScaleManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToScaleCenterPlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToScalePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def displayWithNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getOrientationMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSnapModeOn(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kArbitraryOrientation: int = 1
    kDefaultOrientation: int = 0
    def scaleCenterIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def scaleIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInitialScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOrientation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setOrientationMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSnapIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSnapMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def snapIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnStateManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToStatePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def maxStates(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def positionIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInitialState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxStates(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def state(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def stateIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnToggleManip(MFnManip3D):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def connectToTogglePlug(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def direction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def directionIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lengthIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setToggle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def startPointIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def toggle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def toggleIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnToolContext(maya.OpenMaya.MFnBase):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def title(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MGraphEditorInfo(MPanelCanvasInfo):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAnimCurveNodes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isNormalizedViewportMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isStackedViewportMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kAnimCurveAllKnown: int = 3
    kAnimCurveHighlighted: int = 1
    kAnimCurveOutlinerOnly: int = 0
    kAnimCurveSelected: int = 2
    thisown: Any

class MHWShaderSwatchGenerator(maya.OpenMayaRender.MSwatchRenderBase):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createObj(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getSwatchBackgroundColor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def initialize(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: Any

class MManipData:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asBool(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asDouble(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asFloat(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asLong(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asMObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asShort(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def asUnsigned(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def isSimple(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MMaterial:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def applyTexture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def defaultMaterial(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateDiffuse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateEmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateMaterial(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateShininess(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateSpecular(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateTexture(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateTextureTransformation(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def getDiffuse(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getEmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getHasTransparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getHwShaderNode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getShininess(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getSpecular(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTextureTransformation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kAmbientColor: int = 2
    kBumpMap: int = 4
    kColor: int = 0
    kCosinePower: int = 10
    kDiffuse: int = 5
    kEccentricity: int = 11
    kHighlightSize: int = 8
    kIncandescence: int = 3
    kReflectedColor: int = 15
    kReflectivity: int = 14
    kRoughness: int = 7
    kSpecularColor: int = 13
    kSpecularRollOff: int = 12
    kTransluscence: int = 6
    kTransparency: int = 1
    kWhiteness: int = 9
    def materialIsTextured(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaterial(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def shadingEngine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def textureImage(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MMaterialArray:
    """ """
    def __getitem__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def append(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def clear(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def copy(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def insert(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def remove(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def set(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sizeIncrement(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MObjectListFilter:
    """ """
    def UIname(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def __init__(self, *args: Unknown, **kwargs: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def dependentOnSceneUpdates(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deregisterFilter(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def filterType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getList(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kAddRemoveObjects: int = 1
    kExclusionList: int = 1
    kInclusionList: int = 0
    kNone: int = 0
    kNumberOfFilterTypes: int = 2
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registerFilter(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def requireListUpdate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFilterType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUIName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: Any

class MPaintMessage(maya.OpenMaya.MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addVertexColorCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MPanelCanvasInfo:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getViewportBounds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getViewportSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def name(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def reset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setViewportBounds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def supportsUIDrawing(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: Any

class MProgressWindow:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def advanceProgress(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def endProgress(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isCancelled(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isInterruptable(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def progress(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def progressMax(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def progressMin(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def progressStatus(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def reserve(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setInterruptable(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setProgress(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setProgressMax(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setProgressMin(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setProgressRange(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setProgressStatus(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setTitle(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def startProgress(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    @staticmethod
    def title(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MQtUtil:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addWidgetToMayaLayout(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createCursor(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createIcon(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def createPixmap(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def deregisterUIType(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def dpiScale(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findControl(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findLayout(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findMenuItem(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def findWindow(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def fullName(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCurrentParent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getLayoutChildren(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getParent(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def mainWindow(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def nativeWindow(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def newClocaleValidator(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registerUIType(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def resourceGLContext(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    @staticmethod
    def toMString(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def toQString(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MSelectInfo(MDrawInfo):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getAlignmentMatrix(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLocalRay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def highestPriority(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isRay(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectClosest(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectForHilite(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectOnHilitedOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectPath(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectRect(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectable(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def selectableComponent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setHighestPriority(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSnapPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def singleSelection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def view(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MTextureEditorDrawInfo:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def drawingFunction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    kDrawEdgeForSelect: int = 4
    kDrawEverything: int = 2
    kDrawFacetForSelect: int = 5
    kDrawFunctionFirst: int = 1
    kDrawFunctionLast: int = 6
    kDrawUVForSelect: int = 6
    kDrawVertexForSelect: int = 3
    kDrawWireframe: int = 1
    def setDrawingFunction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MToolsInfo:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def isDirty(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def resetDirtyFlag(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setDirtyFlag(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MUiMessage(maya.OpenMaya.MMessage):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def add3dViewDestroyMsgCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def add3dViewPostMultipleDrawPassMsgCallback(
        *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    @staticmethod
    def add3dViewPostRenderMsgCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def add3dViewPreMultipleDrawPassMsgCallback(
        *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    @staticmethod
    def add3dViewPreRenderMsgCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def add3dViewRenderOverrideChangedCallback(
        *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    @staticmethod
    def add3dViewRendererChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addCameraChangedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addUiDeletedCallback(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class boolPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class charPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

cvar: Any

class doublePtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class floatPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class intPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class shortPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class uCharPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class uIntPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
