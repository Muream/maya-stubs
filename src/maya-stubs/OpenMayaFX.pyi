from __future__ import annotations

from typing import *

import maya.OpenMaya

Unknown = Any

class MDynSweptLine:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tangent(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def vertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MDynSweptTriangle:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def area(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def normal(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def normalToPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def uvPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def vertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MDynamicsUtil:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def addNodeTypeToRunup(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def evalDynamics2dTexture(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def hasValidDynamics2dTexture(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def inRunup(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def removeNodeTypeFromRunup(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def runupIfRequired(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnAirField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def componentOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def direction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def enableSpread(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inheritRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def inheritVelocity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setComponentOnly(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setEnableSpread(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInheritRotation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInheritVelocity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpeed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpread(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def speed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def spread(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnDragField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def direction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def useDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnDynSweptGeometryData(maya.OpenMaya.MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lineCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sweptLine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def sweptTriangle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def triangleCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnField(maya.OpenMaya.MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def attenuation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def falloffCurve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getForceAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isFalloffCurveConstantOne(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def magnitude(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def maxDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def perVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAttenuation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMagnitude(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPerVertex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setUseMaxDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def useMaxDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnFluid(maya.OpenMaya.MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create2D(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create3D(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def density(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emitIntoArrays(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def expandToInclude(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def falloff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def fuel(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColorMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColors(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCoordinateMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCoordinates(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDensityMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getDimensions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFalloffMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getForceAtPoint(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFuelMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getResolution(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTemperatureMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVelocity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVelocityMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def gridSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def index(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isAutoResize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isResizeToEmitter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def pressure(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setColorMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCoordinateMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDensityMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFalloffMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFuelMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTemperatureMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVelocityMode(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def temperature(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def toGridIndex(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def updateGrid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def velocityGridSizes(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def voxelCenterPosition(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnGravityField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def direction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnInstancer(maya.OpenMaya.MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def allInstances(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def instancesForParticle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def particleCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnNIdData(maya.OpenMaya.MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getObjectPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnNObjectData(maya.OpenMaya.MFnData):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getClothObjectPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getCollide(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getParticleObjectPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getRigidObjectPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isCached(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCached(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setObjectPtr(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnNewtonField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def minDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMinDistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnParticleSystem(maya.OpenMaya.MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def acceleration(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def age(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def betterIllum(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def castsShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def count(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def create(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def deformedParticleShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def disableCloudAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def emit(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def evaluateDynamics(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def flatShaded(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPerParticleAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasEmission(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasLifespan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasOpacity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def hasRgb(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isDeformedParticleShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def isPerParticleDoubleAttribute(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def isPerParticleIntAttribute(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def isPerParticleVectorAttribute(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def isValid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def lifespan(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def mass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def opacity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def originalParticleShape(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def particleIds(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def particleName(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position0(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def position1(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def primaryVisibility(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def radius(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def radius0(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def radius1(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def receiveShadows(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renderType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def rgb(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def saveInitialState(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCount(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPerParticleAttribute(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def surfaceShading(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def tailSize(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def threshold(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def velocity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def visibleInReflections(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def visibleInRefractions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnPfxGeometry(maya.OpenMaya.MFnDagNode):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBoundingBox(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLineData(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnRadialField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def radialType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setType(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnTurbulenceField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def frequency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def phase(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFrequency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPhase(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnUniformField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def direction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MFnVolumeAxisField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def detailTurbulence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def direction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def directionalSpeed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def invertAttenuation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirection(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDirectionalSpeed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInvertAttenuation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpeedAlongAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpeedAroundAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpeedAwayFromAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSpeedAwayFromCenter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTurbulence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTurbulenceFrequency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTurbulenceOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTurbulenceSpeed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def speedAlongAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def speedAroundAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def speedAwayFromAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def speedAwayFromCenter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def turbulence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def turbulenceFrequency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def turbulenceOffset(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def turbulenceSpeed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class MFnVortexField(MFnField):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def axis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAxis(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MHairSystem:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getCollisionObject(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def getFollicle(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registerCollisionSolverCollide(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registerCollisionSolverPreFrame(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def registeringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def setRegisteringCallableScript(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    @staticmethod
    def unregisterCollisionSolverCollide(*args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def unregisterCollisionSolverPreFrame(*args: Unknown, **kwargs: Unknown) -> Any: ...

class MRenderLine:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def getColor(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFlatness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getIncandescence(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getLine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getParameter(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTransparency(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getTwist(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MRenderLineArray:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def className(*args: Unknown, **kwargs: Unknown) -> Any: ...
    def deleteArray(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def length(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def renderLine(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MnCloth(MnObject):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createNCloth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBounce(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFriction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInverseMass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVelocities(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAddCrossLinks(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAirTightness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBendAngleDropoff(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBendAngleScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBendResistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBendRestAngleFromPositions(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setBounce(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCollisionFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setComputeRestAngles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setComputeRestLength(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDamping(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisableGravity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDragAndLift(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFriction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIncompressibility(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInputMeshAttractAndRigidStrength(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setInputMeshAttractDamping(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setInputMeshAttractPositions(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setInverseMass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLinksRestLengthFromPositions(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setMaxIterations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxSelfCollisionIterations(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPressure(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPressureDamping(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPumpRate(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRestitutionAngle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRestitutionTension(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSealHoles(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfCollideWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfCollisionFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfCollisionSoftness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfCrossoverPush(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfTrappedCheck(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setShearResistance(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartPressure(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStretchAndCompressionResistance(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setTangentialDrag(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTopology(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTrackVolume(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVelocities(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MnObject:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MnParticle(MnObject):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createNParticle(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBounce(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFriction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInverseMass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVelocities(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBounce(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCollide(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDamping(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisableGravity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDragAndLift(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFriction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setIncompressibility(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setInverseMass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLiquidRadiusScale(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setLiquidSimulation(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxIterations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxSelfCollisionIterations(
        self, /, *args: Unknown, **kwargs: Unknown
    ) -> Any: ...
    def setPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setRestDensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfCollide(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfCollideWidth(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSelfCollisionSoftness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSurfaceTension(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTopology(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVelocities(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setViscosity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MnRigid(MnObject):
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createNRigid(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getBounce(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getFriction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getInverseMass(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getNumVertices(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def getVelocities(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setBounce(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setCollisionFlags(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setFriction(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setPositions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setThickness(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setTopology(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setVelocities(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class MnSolver:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def addNObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def createNSolver(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def makeAllCollide(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeAllCollisions(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def removeNObject(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setAirDensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setDisabled(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGravity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setGravityDir(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setMaxIterations(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setStartTime(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setSubsteps(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWindDir(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWindNoiseIntensity(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def setWindSpeed(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def solve(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool

class boolPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class charPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class doublePtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class floatPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class intPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class shortPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class uCharPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...

class uIntPtr:
    """ """
    def __init__(self, *args: Unknown) -> None: ...
    def __repr__(self) -> Any: ...
    def __swig_destroy__(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def assign(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    def cast(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
    @staticmethod
    def frompointer(*args: Unknown, **kwargs: Unknown) -> Any: ...

    thisown: bool
    def value(self, /, *args: Unknown, **kwargs: Unknown) -> Any: ...
